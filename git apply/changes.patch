 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..5ef6a520780202a1d6addd833d800ccb1ecac0bb
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,41 @@
+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
+
+# dependencies
+/node_modules
+/.pnp
+.pnp.*
+.yarn/*
+!.yarn/patches
+!.yarn/plugins
+!.yarn/releases
+!.yarn/versions
+
+# testing
+/coverage
+
+# next.js
+/.next/
+/out/
+
+# production
+/build
+
+# misc
+.DS_Store
+*.pem
+
+# debug
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+.pnpm-debug.log*
+
+# env files (can opt-in for committing if needed)
+.env*
+
+# vercel
+.vercel
+
+# typescript
+*.tsbuildinfo
+next-env.d.ts
diff --git a/Dockerfile b/Dockerfile
deleted file mode 100644
index 34f05bc92fdb02b5eda23ae53e8ba7eade5b5c17..0000000000000000000000000000000000000000
--- a/Dockerfile
+++ /dev/null
@@ -1,7 +0,0 @@
-FROM python:3.11-slim
-WORKDIR /app
-COPY requirements.txt .
-RUN pip install --no-cache-dir -r requirements.txt
-COPY app ./app
-EXPOSE 8080
-CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8080"]
\ No newline at end of file
diff --git a/README-VERCEL.md b/README-VERCEL.md
deleted file mode 100644
index b51dad52929a95237193052c4dd315850b35ef32..0000000000000000000000000000000000000000
--- a/README-VERCEL.md
+++ /dev/null
@@ -1,9 +0,0 @@
-# Deploying Axnmihn on Vercel (no custom JSON)
-
-The site now deploys on Vercel using the default zero-config Python + static hosting:
-
-- `public/index.html` serves the marketing site directly from Vercel's static hosting.
-- `public/static/**` contains the CSS assets consumed by the page.
-- `api/contact.py` exposes a FastAPI-powered endpoint (`/api/contact`) for form submissions. It validates input, persists to SQLite (or any DB you configure), and optionally sends email via SendGrid.
-
-Because everything relies on the standard Vercel layout, **`vercel.json` is no longer required.**
diff --git a/README.md b/README.md
index 126fef65fafba75098112b58ddad64dcb02051c3..6a4eb04f56f5aaa89ffbec036a85ec564e0190f3 100644
--- a/README.md
+++ b/README.md
@@ -1,12 +1,59 @@
-# Axnmihn — FastAPI Site (Python)
-
-## Local dev
-python3 -m venv .venv && source .venv/bin/activate
-pip install -r requirements.txt
-export SESSION_SECRET=dev-secret
-uvicorn app.main:app --reload  # http://127.0.0.1:8000
-
-## Env (.env)
-CONTACT_EMAIL=axadmihn@axnmihn.com
-ADMIN_HANDLE=axadmihn
-SITE_URL=https://axnmihn.com
\ No newline at end of file
+# axₙmihn web protocol
+
+Brand site for axₙmihn — programmable decision systems for therapeutic contexts (SGCE focus). Built with Next.js 14, TypeScript, Tailwind CSS, and MDX for long-form content.
+
+## Stack
+
+- Next.js App Router (React 19, TypeScript, strict mode)
+- Tailwind CSS 4 with custom tokens for axₙmihn palette
+- MDX-powered research and project notes (`/content`)
+- Vercel Analytics + `/api/contact` SendGrid integration
+
+## Getting started
+
+```bash
+pnpm install
+pnpm dev
+```
+
+The site runs at [http://localhost:3000](http://localhost:3000). Content updates in `/content` hot-reload automatically.
+
+### Production build
+
+```bash
+pnpm build
+```
+
+Use `pnpm start` to serve the generated build locally.
+
+## Environment variables
+
+| Variable | Required | Description |
+| --- | --- | --- |
+| `NEXT_PUBLIC_SITE_URL` | ✔️ | Public URL for canonical links and metadata (e.g., `https://axnmihn.com`). |
+| `CONTACT_EMAIL` | ❌ | Destination email for contact form (defaults to `axadmihn@axnmihn.com`). |
+| `SENDGRID_API_KEY` | ❌ | If provided, `/api/contact` sends email via SendGrid. Missing keys fall back to logging only. |
+| `PERSIST_CONTACTS` | ❌ | Set to `1` to invoke the contact persistence stub (ready for KV/Blob/Postgres adapter). |
+
+## Content model
+
+- Research essays live in `content/research/*.mdx`.
+- Project notes live in `content/projects/*.mdx`.
+- MDX files support frontmatter for `title`, `abstract`/`summary`, `tags`, `readTime`, and `order`.
+- Custom MDX components (`Callout`, `Badge`) are registered in `components/content/mdx-components.tsx`.
+
+## Deployment (Vercel)
+
+1. Push the repo to GitHub/GitLab.
+2. Create a new Vercel project and import the repo.
+3. Choose the `pnpm` build step; Vercel auto-detects Next.js.
+4. Set environment variables in **Project Settings → Environment Variables**.
+5. Deploy. Vercel Analytics is enabled via `@vercel/analytics`.
+
+## Contact API
+
+`/api/contact` validates requests server-side, applies a simple per-IP rate limit, optionally persists payloads (stub), and sends SendGrid email when configured. It always returns JSON and never throws in production.
+
+## License
+
+Proprietary — © Axnmihn.
diff --git a/api/contact.py b/api/contact.py
deleted file mode 100644
index 331206f1754566f1bf8f35ed452a19328a227561..0000000000000000000000000000000000000000
--- a/api/contact.py
+++ /dev/null
@@ -1,60 +0,0 @@
-import logging
-
-from fastapi import FastAPI, HTTPException, status
-
-from app.forms import ContactForm
-from app.database import init_db, save_contact
-from app.emailer import send_email_via_sendgrid
-from app.settings import settings
-
-logger = logging.getLogger("axnmihn.contact")
-logging.basicConfig(level=logging.INFO)
-
-app = FastAPI(title="Axnmihn Contact API")
-_engine = None  # populated on startup
-
-
-@app.on_event("startup")
-async def startup() -> None:
-    global _engine
-    try:
-        _engine = init_db(settings.DATABASE_URL)
-        logger.info("DB initialized at %s", settings.DATABASE_URL)
-    except Exception as exc:  # pragma: no cover
-        logger.exception("DB init failed: %s", exc)
-        _engine = None
-
-
-@app.post("/", status_code=status.HTTP_200_OK)
-async def submit_contact(payload: ContactForm):
-    if not payload.name or not payload.email or not payload.message:
-        raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail="All fields are required")
-
-    stored = False
-    if _engine is not None:
-        try:
-            save_contact(_engine, payload.name, payload.email, payload.message)
-            stored = True
-        except Exception as exc:  # pragma: no cover
-            logger.exception("Saving contact failed: %s", exc)
-
-    emailed = False
-    try:
-        emailed = send_email_via_sendgrid(
-            settings.SENDGRID_API_KEY,
-            settings.CONTACT_EMAIL,
-            f"Contact from {payload.name}",
-            payload.message,
-        )
-    except Exception as exc:  # pragma: no cover
-        logger.warning("Email send skipped/failed: %s", exc)
-
-    ok = stored or emailed
-    if not ok:
-        logger.warning("Contact submission from %s could not be persisted or emailed", payload.email)
-    return {"ok": ok, "stored": stored, "emailed": emailed}
-
-
-@app.get("/healthz")
-async def healthcheck():
-    return {"status": "ok"}
diff --git a/api/index.py b/api/index.py
deleted file mode 100644
index 5d4cc48645cee6e803f8c7103763a803aa7573a9..0000000000000000000000000000000000000000
--- a/api/index.py
+++ /dev/null
@@ -1,4 +0,0 @@
-# Vercel ASGI entrypoint
-import sys, pathlib
-sys.path.append(str(pathlib.Path(__file__).resolve().parents[1]))  # ensure repo root on sys.path
-from app.main import app as app
diff --git a/app/__init__.py b/app/__init__.py
deleted file mode 100644
index 8b137891791fe96927ad78e64b0aad7bded08bdc..0000000000000000000000000000000000000000
--- a/app/__init__.py
+++ /dev/null
@@ -1 +0,0 @@
-
diff --git a/app/api/contact/route.ts b/app/api/contact/route.ts
new file mode 100644
index 0000000000000000000000000000000000000000..6a1bbfb95cae76abe84a86218f2ceb808de4c0a1
--- /dev/null
+++ b/app/api/contact/route.ts
@@ -0,0 +1,93 @@
+import { NextRequest, NextResponse } from 'next/server';
+import { z } from 'zod';
+
+import { contactPersistenceAdapter } from '@/lib/contact-persistence';
+
+const RATE_LIMIT_WINDOW = 60_000; // 60 seconds
+const RATE_LIMIT_MAX = 3;
+const submissions = new Map<string, { count: number; last: number }>();
+
+const contactSchema = z.object({
+  name: z.string().min(2),
+  email: z.string().email(),
+  message: z.string().min(10),
+});
+
+function getClientIp(request: NextRequest) {
+  const header = request.headers.get('x-forwarded-for');
+  if (!header) return 'unknown';
+  return header.split(',')[0]?.trim() ?? 'unknown';
+}
+
+export async function POST(request: NextRequest) {
+  let payload: unknown;
+  try {
+    payload = await request.json();
+  } catch (error) {
+    console.error('contact: invalid json payload', error);
+    return NextResponse.json({ ok: false, error: 'Invalid payload.' });
+  }
+
+  const parsed = contactSchema.safeParse(payload);
+  if (!parsed.success) {
+    const message = parsed.error.issues[0]?.message ?? 'Invalid input.';
+    return NextResponse.json({ ok: false, error: message });
+  }
+
+  const ip = getClientIp(request);
+  const now = Date.now();
+  const entry = submissions.get(ip);
+  if (entry) {
+    if (now - entry.last < RATE_LIMIT_WINDOW) {
+      if (entry.count >= RATE_LIMIT_MAX) {
+        return NextResponse.json({
+          ok: false,
+          error: 'Too many submissions. Please wait a minute before trying again.',
+        });
+      }
+      entry.count += 1;
+      entry.last = now;
+    } else {
+      submissions.set(ip, { count: 1, last: now });
+    }
+  } else {
+    submissions.set(ip, { count: 1, last: now });
+  }
+
+  const contactEmail = process.env.CONTACT_EMAIL ?? 'axadmihn@axnmihn.com';
+  const sendgridKey = process.env.SENDGRID_API_KEY;
+  let sendError: string | null = null;
+
+  if (sendgridKey) {
+    const { default: sendgrid } = await import('@sendgrid/mail');
+    sendgrid.setApiKey(sendgridKey);
+    try {
+      await sendgrid.send({
+        to: contactEmail,
+        from: contactEmail,
+        subject: `axₙmihn contact — ${parsed.data.name}`,
+        replyTo: parsed.data.email,
+        text: parsed.data.message,
+      });
+    } catch (error) {
+      console.error('contact: sendgrid error', error);
+      sendError = 'Message logged but email provider unavailable.';
+    }
+  } else {
+    console.info('SENDGRID_API_KEY missing. Logging contact payload.', { ...parsed.data, ip });
+  }
+
+  if (process.env.PERSIST_CONTACTS === '1') {
+    await contactPersistenceAdapter.saveContact({
+      ...parsed.data,
+      receivedAt: new Date(),
+      sourceIp: ip,
+    });
+  }
+
+  if (sendError) {
+    return NextResponse.json({ ok: false, error: sendError });
+  }
+
+  return NextResponse.json({ ok: true });
+}
diff --git a/app/contact/page.tsx b/app/contact/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..ee52a87882faa14a5e82f9ce6b0476fa5c1ae9ef
--- /dev/null
+++ b/app/contact/page.tsx
@@ -0,0 +1,36 @@
+import type { Metadata } from 'next';
+
+import { Section } from '@/components/ui/section';
+import { ContactForm } from '@/components/content/contact-form';
+import { Callout } from '@/components/ui/callout';
+
+export const metadata: Metadata = {
+  title: 'Contact',
+  description: 'Reach the protocol administrator (@axadmihn) for collaborations or operational questions.',
+};
+
+export default function ContactPage() {
+  return (
+    <Section
+      title="Contact"
+      description="Share enough context for the protocol to evaluate fit. Emotions are signals, so articulate the signal."
+    >
+      <div className="grid gap-8 lg:grid-cols-[1.5fr_1fr]">
+        <div className="rounded-[2rem] border border-white/40 bg-white/80 p-8 shadow-sm">
+          <ContactForm />
+        </div>
+        <div className="space-y-6">
+          <Callout
+            title="Operational timing"
+            body="Responses occur during stable neurological windows. If urgent, include a protocol flag so the Consistency Checker escalates."
+          />
+          <Callout
+            title="Security"
+            body="Sensitive payloads? Request the secure upload channel after the first handshake."
+            tone="cyan"
+          />
+        </div>
+      </div>
+    </Section>
+  );
+}
diff --git a/app/database.py b/app/database.py
deleted file mode 100644
index f8623d9246b87b80cebac505b428397936f734d2..0000000000000000000000000000000000000000
--- a/app/database.py
+++ /dev/null
@@ -1,24 +0,0 @@
-from datetime import datetime
-from typing import Optional
-
-from sqlmodel import Field, SQLModel, create_engine, Session
-
-class Contact(SQLModel, table=True):
-    id: Optional[int] = Field(default=None, primary_key=True)
-    name: str
-    email: str
-    message: str
-    created_at: datetime = Field(default_factory=datetime.utcnow)
-
-def init_db(database_url: str):
-    engine = create_engine(database_url, connect_args={"check_same_thread": False})
-    SQLModel.metadata.create_all(engine)
-    return engine
-
-def save_contact(engine, name: str, email: str, message: str):
-    with Session(engine) as session:
-        c = Contact(name=name, email=email, message=message)
-        session.add(c)
-        session.commit()
-        session.refresh(c)
-        return c
diff --git a/app/emailer.py b/app/emailer.py
deleted file mode 100644
index 3bda8c51a9e66a20da6943a2677c29b50a5b43a2..0000000000000000000000000000000000000000
--- a/app/emailer.py
+++ /dev/null
@@ -1,15 +0,0 @@
-from typing import Optional
-import os
-
-def send_email_via_sendgrid(api_key: Optional[str], to_email: str, subject: str, body: str) -> bool:
-    if not api_key:
-        return False
-    try:
-        from sendgrid import SendGridAPIClient
-        from sendgrid.helpers.mail import Mail
-        message = Mail(from_email=os.environ.get("FROM_EMAIL","noreply@axnmihn.com"), to_emails=to_email, subject=subject, html_content=body)
-        sg = SendGridAPIClient(api_key)
-        response = sg.send(message)
-        return 200 <= response.status_code < 300
-    except Exception:
-        return False
\ No newline at end of file
diff --git a/app/favicon.ico b/app/favicon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..718d6fea4835ec2d246af9800eddb7ffb276240c
GIT binary patch
literal 25931
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
LrJugUA?W`A8`#=m

literal 0
HcmV?d00001

diff --git a/app/forms.py b/app/forms.py
deleted file mode 100644
index 391ae3f198d0d0301f4583e18c6360fed484de9b..0000000000000000000000000000000000000000
--- a/app/forms.py
+++ /dev/null
@@ -1,6 +0,0 @@
-from pydantic import BaseModel, EmailStr, Field
-
-class ContactForm(BaseModel):
-    name: str = Field(..., min_length=1, max_length=100)
-    email: EmailStr
-    message: str = Field(..., min_length=5, max_length=5000)
\ No newline at end of file
diff --git a/app/globals.css b/app/globals.css
new file mode 100644
index 0000000000000000000000000000000000000000..2779892a9bbfc965a3c94cf871b47db1b49e7adf
--- /dev/null
+++ b/app/globals.css
@@ -0,0 +1,91 @@
+@import "tailwindcss";
+@plugin "@tailwindcss/typography";
+
+:root {
+  color-scheme: light;
+  --ink-navy: #0B1F3A;
+  --cyan: #0EA5E9;
+  --cool-gray: #E5E7EB;
+  --off-white: #F8FAFC;
+  --surface: #ffffff;
+}
+
+@theme inline {
+  --font-sans: var(--font-inter);
+  --font-mono: var(--font-plex-mono);
+  --color-ink-navy: var(--ink-navy);
+  --color-cyan: var(--cyan);
+  --color-cool-gray: var(--cool-gray);
+  --color-off-white: var(--off-white);
+  --shadow-soft: 0 20px 45px rgba(11, 31, 58, 0.12);
+  --shadow-sm: 0 10px 30px rgba(11, 31, 58, 0.08);
+  --radius-lg: 1.5rem;
+  --radius-md: 1rem;
+}
+
+body {
+  font-family: var(--font-inter);
+  background: var(--off-white);
+  color: var(--ink-navy);
+  min-height: 100vh;
+  text-rendering: optimizeLegibility;
+}
+
+a {
+  color: var(--ink-navy);
+}
+
+a:hover {
+  color: var(--cyan);
+}
+
+* {
+  scrollbar-width: thin;
+  scrollbar-color: var(--cyan) var(--cool-gray);
+}
+
+*::-webkit-scrollbar {
+  height: 8px;
+  width: 8px;
+}
+
+*::-webkit-scrollbar-track {
+  background: var(--cool-gray);
+}
+
+*::-webkit-scrollbar-thumb {
+  background: var(--cyan);
+  border-radius: 9999px;
+}
+
+:focus-visible {
+  outline: 3px solid color-mix(in srgb, var(--cyan) 70%, white 30%);
+  outline-offset: 4px;
+}
+
+@media (prefers-reduced-motion: reduce) {
+  *,
+  *::before,
+  *::after {
+    animation-duration: 0.01ms !important;
+    animation-iteration-count: 1 !important;
+    transition-duration: 0.01ms !important;
+    scroll-behavior: auto !important;
+  }
+}
+
+.prose code {
+  font-family: var(--font-plex-mono);
+}
+
+.prose pre {
+  border-radius: 1rem;
+  box-shadow: var(--shadow-sm);
+  padding: 1.5rem;
+}
+
+.prose blockquote {
+  border-left: 4px solid var(--cyan);
+  padding-left: 1rem;
+  font-style: italic;
+}
diff --git a/app/layout.tsx b/app/layout.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..5b2509b72cc7acd664d7bb0c0950bfea020434d6
--- /dev/null
+++ b/app/layout.tsx
@@ -0,0 +1,106 @@
+import type { Metadata } from 'next';
+import localFont from 'next/font/local';
+import { Analytics } from '@vercel/analytics/react';
+import { ReactNode } from 'react';
+
+import { SiteHeader } from '@/components/layout/site-header';
+import { SiteFooter } from '@/components/layout/site-footer';
+
+import './globals.css';
+
+const inter = localFont({
+  src: [
+    {
+      path: '../node_modules/@fontsource-variable/inter/files/inter-latin-wght-normal.woff2',
+      style: 'normal',
+      weight: '100 900',
+    },
+  ],
+  variable: '--font-inter',
+  display: 'swap',
+});
+
+const plexMono = localFont({
+  src: [
+    {
+      path: '../node_modules/@fontsource/ibm-plex-mono/files/ibm-plex-mono-latin-400-normal.woff2',
+      weight: '400',
+      style: 'normal',
+    },
+    {
+      path: '../node_modules/@fontsource/ibm-plex-mono/files/ibm-plex-mono-latin-500-normal.woff2',
+      weight: '500',
+      style: 'normal',
+    },
+    {
+      path: '../node_modules/@fontsource/ibm-plex-mono/files/ibm-plex-mono-latin-600-normal.woff2',
+      weight: '600',
+      style: 'normal',
+    },
+  ],
+  variable: '--font-plex-mono',
+  display: 'swap',
+});
+
+const fallbackUrl = 'https://axnmihn.com';
+const parsedUrl = (() => {
+  const candidate = process.env.NEXT_PUBLIC_SITE_URL;
+  try {
+    return new URL(candidate ?? fallbackUrl);
+  } catch {
+    return new URL(fallbackUrl);
+  }
+})();
+
+const siteUrl = parsedUrl.toString().replace(/\/$/, '');
+
+export const metadata: Metadata = {
+  metadataBase: parsedUrl,
+  title: {
+    default: 'axₙmihn — programmable decision systems',
+    template: '%s · axₙmihn',
+  },
+  description: 'Protocol-driven decision systems for therapeutic contexts (SGCE focus).',
+  openGraph: {
+    title: 'axₙmihn',
+    description: 'Protocol-driven decision systems for therapeutic contexts (SGCE focus).',
+    url: siteUrl,
+    siteName: 'axnmihn',
+    images: [
+      {
+        url: '/og.png',
+        width: 1200,
+        height: 630,
+        alt: 'axₙmihn protocol',
+      },
+    ],
+    locale: 'en_CA',
+    type: 'website',
+  },
+  twitter: {
+    card: 'summary_large_image',
+    site: '@axadmihn',
+    creator: '@axadmihn',
+    title: 'axₙmihn',
+    description: 'Protocol-driven decision systems for therapeutic contexts (SGCE focus).',
+    images: ['/og.png'],
+  },
+  alternates: {
+    canonical: siteUrl,
+  },
+};
+
+export default function RootLayout({ children }: { children: ReactNode }) {
+  return (
+    <html lang="en">
+      <body className={`${inter.variable} ${plexMono.variable} bg-off-white antialiased`}> 
+        <div className="flex min-h-screen flex-col">
+          <SiteHeader />
+          <main className="flex-1">{children}</main>
+          <SiteFooter />
+        </div>
+        <Analytics />
+      </body>
+    </html>
+  );
+}
diff --git a/app/main.py b/app/main.py
deleted file mode 100644
index 6f6ad026af1a29fa3d0c28f3daf30359831228dd..0000000000000000000000000000000000000000
--- a/app/main.py
+++ /dev/null
@@ -1,86 +0,0 @@
-from fastapi import FastAPI, Request, Form, status, Response
-from fastapi.responses import HTMLResponse, JSONResponse, RedirectResponse, PlainTextResponse
-from fastapi.staticfiles import StaticFiles
-from fastapi.templating import Jinja2Templates
-from starlette.middleware.cors import CORSMiddleware
-from starlette.middleware.sessions import SessionMiddleware
-from starlette.middleware.base import BaseHTTPMiddleware
-from pydantic import ValidationError
-from contextlib import asynccontextmanager
-import os, pathlib, datetime, logging
-
-from .settings import settings
-from .forms import ContactForm
-from .database import init_db, save_contact
-from .emailer import send_email_via_sendgrid
-
-logging.basicConfig(level=logging.INFO)
-logger = logging.getLogger("axnmihn")
-BASE_DIR = pathlib.Path(__file__).resolve().parent
-
-@asynccontextmanager
-async def lifespan(app: FastAPI):
-    try:
-        app.state.engine = init_db(settings.DATABASE_URL)      # lazy init at startup
-        logger.info("DB initialized at %s", settings.DATABASE_URL)
-    except Exception as e:
-        logger.exception("DB init failed: %s", e)
-        app.state.engine = None
-    yield
-
-app = FastAPI(title=settings.PROJECT_NAME, lifespan=lifespan)
-app.mount("/static", StaticFiles(directory=str(BASE_DIR / "static")), name="static")
-templates = Jinja2Templates(directory=str(BASE_DIR / "templates"))
-
-app.add_middleware(
-    CORSMiddleware,
-    allow_origins=[o.strip() for o in settings.ALLOW_ORIGINS.split(",")],
-    allow_credentials=True, allow_methods=["*"], allow_headers=["*"],
-)
-app.add_middleware(SessionMiddleware, secret_key=os.environ.get("SESSION_SECRET", "dev-secret"))
-
-class SecurityHeadersMiddleware(BaseHTTPMiddleware):
-    async def dispatch(self, request, call_next):
-        r = await call_next(request)
-        r.headers["X-Content-Type-Options"] = "nosniff"
-        r.headers["X-Frame-Options"] = "DENY"
-        r.headers["Referrer-Policy"] = "no-referrer-when-downgrade"
-        r.headers["Permissions-Policy"] = "interest-cohort=()"
-        r.headers["Content-Security-Policy"] = "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; font-src 'self' data:"
-        return r
-app.add_middleware(SecurityHeadersMiddleware)
-
-@app.get("/favicon.ico")  # avoid favicon errors if not in /public
-def favicon(): return Response(status_code=204)
-
-@app.get("/", response_class=HTMLResponse)
-async def home(request: Request):
-    return templates.TemplateResponse("index.html", {"request": request, "settings": settings})
-
-@app.get("/healthz")
-def healthz():
-    return {"status": "ok", "time": datetime.datetime.utcnow().isoformat() + "Z"}
-
-@app.post("/contact")
-async def contact_post(request: Request, Name: str = Form(...), Email: str = Form(...), Message: str = Form(...)):
-    try:
-        form = ContactForm(name=Name, email=Email, message=Message)
-    except ValidationError as e:
-        return JSONResponse(status_code=status.HTTP_422_UNPROCESSABLE_ENTITY, content={"errors": e.errors()})
-    if getattr(app.state, "engine", None) is not None:
-        try: save_contact(app.state.engine, form.name, form.email, form.message)
-        except Exception as e: logger.exception("Saving contact failed: %s", e)
-    try: send_email_via_sendgrid(settings.SENDGRID_API_KEY, settings.CONTACT_EMAIL, f"Contact from {form.name}", form.message)
-    except Exception as e: logger.warning("Email send skipped/failed: %s", e)
-    return RedirectResponse(url=request.url_for("home") + "?sent=1", status_code=status.HTTP_303_SEE_OTHER)
-
-@app.get("/robots.txt", response_class=PlainTextResponse)
-def robots(): return "User-agent: *\nAllow: /\nSitemap: /sitemap.xml"
-
-@app.get("/sitemap.xml", response_class=PlainTextResponse)
-def sitemap():
-    base = os.environ.get("SITE_URL", "https://axnmihn.com").rstrip("/")
-    return f"""<?xml version="1.0" encoding="UTF-8"?>
-<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
-  <url><loc>{base}/</loc></url>
-</urlset>"""
diff --git a/app/not-found.tsx b/app/not-found.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..d50467ec3e7da0098688e822f2ae59ecda1df1eb
--- /dev/null
+++ b/app/not-found.tsx
@@ -0,0 +1,20 @@
+import Link from 'next/link';
+
+export default function NotFound() {
+  return (
+    <div className="flex min-h-[60vh] flex-col items-center justify-center gap-6 px-6 text-center">
+      <div className="rounded-[2rem] border border-white/40 bg-white/80 p-10 shadow-sm">
+        <h1 className="text-3xl font-semibold text-ink-navy">Signal lost.</h1>
+        <p className="mt-4 max-w-md text-sm text-slate-600">
+          The protocol cannot find that page. Return to home and re-establish coherence.
+        </p>
+        <Link
+          href="/"
+          className="mt-6 inline-flex rounded-full bg-ink-navy px-5 py-2 text-sm font-semibold text-white transition-colors hover:bg-slate-900"
+        >
+          Return home
+        </Link>
+      </div>
+    </div>
+  );
+}
diff --git a/app/now/page.tsx b/app/now/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..cb9bcf85ed2e81bb8b35c3caa82b54298fa8caee
--- /dev/null
+++ b/app/now/page.tsx
@@ -0,0 +1,36 @@
+import type { Metadata } from 'next';
+
+import { Section } from '@/components/ui/section';
+import { Card } from '@/components/ui/card';
+
+export const metadata: Metadata = {
+  title: 'Now',
+  description: 'Current operational focus for axₙmihn.',
+};
+
+const focus = [
+  {
+    title: 'Protocol hardening',
+    details: 'Extending the AVD coverage to detect multi-actor contradictions before they breach the safe envelope.',
+  },
+  {
+    title: 'Medication-logic evidence ingestion',
+    details: 'Integrating clinician notes and patient self-reports into the Medication-Logic Monitor to tighten coherence checks.',
+  },
+  {
+    title: 'Research sprint',
+    details: 'Drafting the next methodological naturalism note—linking predictive validity with neurological variability.',
+  },
+];
+
+export default function NowPage() {
+  return (
+    <Section title="Now" description="What is consuming attention this week.">
+      <div className="grid gap-6 md:grid-cols-3">
+        {focus.map((item) => (
+          <Card key={item.title} title={item.title} description={item.details} />
+        ))}
+      </div>
+    </Section>
+  );
+}
diff --git a/app/page.tsx b/app/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..31bf0bb4e318d00f9850ce36c92b419f6a10ee70
--- /dev/null
+++ b/app/page.tsx
@@ -0,0 +1,160 @@
+import type { Metadata } from 'next';
+import Script from 'next/script';
+
+import { Section } from '@/components/ui/section';
+import { Button } from '@/components/ui/button';
+import { Card } from '@/components/ui/card';
+import { Badge } from '@/components/ui/badge';
+
+const siteUrl = process.env.NEXT_PUBLIC_SITE_URL ?? 'https://axnmihn.com';
+
+export const metadata: Metadata = {
+  title: 'Home',
+};
+
+const jsonLd = {
+  '@context': 'https://schema.org',
+  '@graph': [
+    {
+      '@type': 'Organization',
+      name: 'axₙmihn',
+      alternateName: 'axnmihn',
+      url: siteUrl,
+      sameAs: ['https://x.com/axadmihn', 'https://www.linkedin.com/in/jongminlee/'],
+      address: {
+        '@type': 'PostalAddress',
+        addressLocality: 'Vancouver',
+        addressRegion: 'BC',
+        addressCountry: 'CA',
+      },
+      contactPoint: {
+        '@type': 'ContactPoint',
+        contactType: 'operations',
+        email: 'axadmihn@axnmihn.com',
+      },
+    },
+    {
+      '@type': 'Person',
+      name: 'Jongmin Lee',
+      jobTitle: 'Founder/CEO & CTO',
+      url: `${siteUrl}/protocol`,
+      sameAs: ['https://x.com/axadmihn', 'https://www.linkedin.com/in/jongminlee/'],
+    },
+  ],
+};
+
+const skills = [
+  'Data Science',
+  'Python',
+  'Systems Thinking',
+  'Bioinformatics',
+  'Data Analysis',
+  'Research Strategy',
+  'Technical Writing',
+  'Gene Therapy',
+  'Clinical Decision Support Systems',
+  'AVD / Consistency checks',
+  'Log architecture',
+  'Medication-logic monitoring',
+  'Axiom design',
+  'SGCE myoclonus-dystonia',
+  'Methodological naturalism',
+  'Molecular Genetics',
+];
+
+export default function HomePage() {
+  return (
+    <>
+      <Section>
+        <div className="flex flex-col gap-10 rounded-[2rem] bg-white/80 p-10 shadow-md">
+          <div className="space-y-6">
+            <Badge tone="outline" className="max-w-fit">Protocol-driven decision systems for therapeutic contexts (SGCE focus).</Badge>
+            <h1 className="max-w-3xl text-4xl font-semibold leading-tight text-ink-navy sm:text-5xl">
+              Programmable decision systems for therapeutic contexts.
+            </h1>
+            <p className="max-w-2xl text-lg text-slate-700">
+              Jongmin Lee — Founder/CEO & CTO, protocol administrator “axadmihn”. Emotions are signals; discipline is the actuator.
+            </p>
+            <p className="max-w-2xl text-base text-slate-600">
+              I operate the axiom-based Axnmihn protocol as its human administrator (“axadmihn”). We turn noisy cognition into coherent, testable decisions through AVD, Consistency checks, axₙlog, and a Medication-Logic Monitor.
+            </p>
+            <div className="flex flex-wrap gap-4">
+              <Button href="/protocol">Read the Protocol</Button>
+              <Button href="/contact" variant="secondary">
+                Contact
+              </Button>
+            </div>
+          </div>
+          <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-4">
+            {[
+              {
+                title: 'Sensing',
+                body: 'Capture physiological, behavioural, and contextual signals with repeatable instrumentation.',
+              },
+              {
+                title: 'Logic',
+                body: 'Axial decision models derive from axioms—testable, interpretable, and auditable.',
+              },
+              {
+                title: 'Effectors',
+                body: 'Protocols trigger safe, reversible interventions with clear rollback procedures.',
+              },
+              {
+                title: 'Delivery',
+                body: 'Decision outputs ship through secure channels with tamper-evident logging.',
+              },
+            ].map((item) => (
+              <Card key={item.title} title={item.title} description={item.body} />
+            ))}
+          </div>
+        </div>
+      </Section>
+
+      <Section
+        title="Why axₙmihn"
+        description="The protocol exists to safeguard cognition in SGCE-linked myoclonus-dystonia contexts, keeping each action traceable, reversible, and testable."
+      >
+        <div className="grid gap-6 lg:grid-cols-3">
+          <Card
+            title="SGCE focus"
+            description="We design around the lived requirements of SGCE myoclonus-dystonia—rapid onset, emotional volatility, and medication uncertainty."
+          />
+          <Card
+            title="Safety loops: AVD & Consistency"
+            description="AVD flags axiom breaches; Consistency Checker verifies coherence before execution, preventing silent drift."
+          />
+          <Card
+            title="Auditable axₙlog"
+            description="Every decision, override, and anomaly is logged, hashed, and reviewable. Transparency is a control surface."
+          />
+        </div>
+      </Section>
+
+      <Section title="Skills & focus">
+        <div className="rounded-[2rem] border border-white/40 bg-white/80 p-8 shadow-sm">
+          <div className="flex flex-wrap gap-3">
+            {skills.map((skill) => (
+              <Badge key={skill} tone="outline" className="text-xs">
+                {skill}
+              </Badge>
+            ))}
+          </div>
+          <div className="mt-8">
+            <Button
+              href="https://www.linkedin.com/in/jongminlee/"
+              target="_blank"
+              rel="noopener noreferrer"
+              variant="ghost"
+            >
+              Connect on LinkedIn
+            </Button>
+          </div>
+        </div>
+      </Section>
+
+      <Script id="axnmihn-jsonld" type="application/ld+json">
+        {JSON.stringify(jsonLd)}
+      </Script>
+    </>
+  );
+}
diff --git a/app/projects/[slug]/page.tsx b/app/projects/[slug]/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..b7de02082a5f1e492fa5ebc3f22ebedd0462285a
--- /dev/null
+++ b/app/projects/[slug]/page.tsx
@@ -0,0 +1,46 @@
+import type { Metadata } from 'next';
+import { notFound } from 'next/navigation';
+
+import { Section } from '@/components/ui/section';
+import { Prose } from '@/components/ui/prose';
+import { getMdxContent, getMdxSlugs } from '@/lib/mdx';
+
+interface ProjectNotesPageProps {
+  params: { slug: string };
+}
+
+export async function generateStaticParams() {
+  const slugs = await getMdxSlugs('projects');
+  return slugs.map((slug) => ({ slug }));
+}
+
+export async function generateMetadata({ params }: ProjectNotesPageProps): Promise<Metadata> {
+  const { slug } = params;
+  try {
+    const entry = await getMdxContent('projects', slug);
+    return {
+      title: `${entry.frontmatter.title} · Project notes`,
+      description: entry.frontmatter.summary ?? entry.frontmatter.abstract,
+    };
+  } catch {
+    return {
+      title: 'Project notes',
+      description: 'Project notes not found.',
+    };
+  }
+}
+
+export default async function ProjectNotesPage({ params }: ProjectNotesPageProps) {
+  const { slug } = params;
+
+  try {
+    const entry = await getMdxContent('projects', slug);
+    return (
+      <Section title={entry.frontmatter.title} lead={entry.frontmatter.summary && <p className="text-lg text-slate-600">{entry.frontmatter.summary}</p>}>
+        <Prose>{entry.content}</Prose>
+      </Section>
+    );
+  } catch {
+    return notFound();
+  }
+}
diff --git a/app/projects/page.tsx b/app/projects/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9cd933a5507b1973475775320118ce844cbdd2ec
--- /dev/null
+++ b/app/projects/page.tsx
@@ -0,0 +1,77 @@
+import type { Metadata } from 'next';
+import Link from 'next/link';
+
+import { Section } from '@/components/ui/section';
+import { Card } from '@/components/ui/card';
+import { StatusPill } from '@/components/ui/status-pill';
+
+export const metadata: Metadata = {
+  title: 'Projects',
+  description: 'Operational loops that keep the axₙmihn protocol auditable and safe.',
+};
+
+const projects = [
+  {
+    name: 'AVD (Axiom Violation Detector)',
+    slug: 'avd',
+    status: 'Active' as const,
+    points: [
+      'Monitors real-time data and inferred states for contradictions against base axioms.',
+      'Triggers safe-mode and human review workflows when a violation fires.',
+      'Current milestone: extending detector coverage to multi-agent contexts.',
+    ],
+  },
+  {
+    name: 'Consistency Checker / axₙlog',
+    slug: 'consistency-checker',
+    status: 'Active' as const,
+    points: [
+      'Verifies coherence between current rules, logs, and planned actions.',
+      'Maintains an auditable log with tamper-evident hashing.',
+      'Current milestone: improving diff tooling for protocol updates.',
+    ],
+  },
+  {
+    name: 'Medication-Logic Monitor',
+    slug: 'medication-logic-monitor',
+    status: 'In research' as const,
+    points: [
+      'Tracks dosing, timing, and interactions for SGCE therapeutic regimens.',
+      'Raises risk flags when patient-reported symptoms diverge from expected response.',
+      'Current milestone: integrating pharmacokinetic simulations with the consistency layer.',
+    ],
+  },
+];
+
+export default function ProjectsPage() {
+  return (
+    <Section
+      title="Safety loops in motion"
+      description="Each project hardens the protocol’s ability to sense, evaluate, and intervene without drift."
+    >
+      <div className="grid gap-6 lg:grid-cols-3">
+        {projects.map((project) => (
+          <Card
+            key={project.slug}
+            title={project.name}
+            eyebrow={<StatusPill status={project.status} />}
+            footer={
+              <Link href={`/projects/${project.slug}`} className="font-semibold text-cyan-700 hover:text-cyan-500">
+                Open notes →
+              </Link>
+            }
+          >
+            <ul className="space-y-2 text-sm text-slate-600">
+              {project.points.map((point) => (
+                <li key={point} className="flex gap-2">
+                  <span className="mt-2 h-1.5 w-1.5 rounded-full bg-cyan-500" aria-hidden />
+                  <span>{point}</span>
+                </li>
+              ))}
+            </ul>
+          </Card>
+        ))}
+      </div>
+    </Section>
+  );
+}
diff --git a/app/protocol/page.tsx b/app/protocol/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57003caeec799018144fa4623f9fd16efbe754b9
--- /dev/null
+++ b/app/protocol/page.tsx
@@ -0,0 +1,88 @@
+import type { Metadata } from 'next';
+import Link from 'next/link';
+
+import { Section } from '@/components/ui/section';
+import { Card } from '@/components/ui/card';
+import { Badge } from '@/components/ui/badge';
+
+export const metadata: Metadata = {
+  title: 'Protocol',
+  description: 'axₙmihn is an axiom-driven decision protocol administered by Jongmin Lee (@axadmihn).',
+};
+
+const safetyLoops = [
+  {
+    title: 'AVD (Axiom Violation Detector)',
+    body: 'Continuously monitors protocol state for contradictions, freezing execution until a human review resets or patches the axiom set.',
+  },
+  {
+    title: 'Consistency Checker',
+    body: 'Runs coherence proofs across current rules, data inputs, and prior outputs before approving action.',
+  },
+  {
+    title: 'axₙlog',
+    body: 'Append-only log architecture with cryptographic hashing and role-based redaction.',
+  },
+  {
+    title: 'Medication-Logic Monitor',
+    body: 'Evaluates dosage, timing, and contraindications; escalates when medication logic deviates from plan.',
+  },
+];
+
+export default function ProtocolPage() {
+  return (
+    <>
+      <Section
+        title="Protocol & administrator"
+        description="axₙmihn is the decision protocol. axadmihn is the human agent operating it. Together they maintain coherent action despite SGCE volatility."
+      >
+        <div className="grid gap-6 md:grid-cols-2">
+          <Card
+            title="axₙmihn = protocol"
+            description="The axiom-driven system that senses, evaluates, and delivers therapeutic decisions."
+          >
+            <p className="text-sm text-slate-600">
+              Decisions are derived from axioms, not moods. Every rule is versioned, testable, and reversible.
+            </p>
+          </Card>
+          <Card
+            title="axadmihn = Jongmin Lee"
+            description="Founder/CEO & CTO. Administrator translating lived signals into protocolized action."
+          >
+            <p className="text-sm text-slate-600">
+              I maintain vigilance, deploy resets, and validate novel loops. Discipline over motivation.
+            </p>
+          </Card>
+        </div>
+      </Section>
+
+      <Section title="Principles">
+        <div className="rounded-[2rem] border border-white/40 bg-white/80 p-8 shadow-sm">
+          <div className="grid gap-4 sm:grid-cols-2">
+            <Badge tone="outline">Emotions → signals (not commands)</Badge>
+            <Badge tone="outline">Discipline over motivation</Badge>
+            <Badge tone="outline">Methodological naturalism</Badge>
+            <Badge tone="outline">Coherence & survival</Badge>
+          </div>
+        </div>
+      </Section>
+
+      <Section title="Safety loops" description="Every action is checked, logged, and reversible. Each loop answers a specific risk.">
+        <div className="grid gap-6 lg:grid-cols-4">
+          {safetyLoops.map((loop) => (
+            <Card
+              key={loop.title}
+              title={loop.title}
+              description={loop.body}
+              footer={
+                <Link href="/projects" className="font-medium text-cyan-700 hover:text-cyan-500">
+                  Learn more →
+                </Link>
+              }
+            />
+          ))}
+        </div>
+      </Section>
+    </>
+  );
+}
diff --git a/app/publications/page.tsx b/app/publications/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..8e4be43649b53f4f06fc86343a2f4fd2aecc075c
--- /dev/null
+++ b/app/publications/page.tsx
@@ -0,0 +1,49 @@
+import type { Metadata } from 'next';
+
+import { Section } from '@/components/ui/section';
+
+const publications = [
+  {
+    title: 'SGCE Myoclonus-Dystonia: Protocol Considerations',
+    description:
+      'A technical paper on translating SGCE genotypes into actionable decision constraints for therapeutic interventions.',
+    href: 'https://example.com/sgce-protocol.pdf',
+  },
+  {
+    title: 'Auditable Decision Logs in Clinical Systems',
+    description:
+      'A short essay on designing tamper-evident logs (axₙlog) for multidisciplinary clinical teams.',
+    href: 'https://example.com/auditable-logs.pdf',
+  },
+];
+
+export const metadata: Metadata = {
+  title: 'Publications',
+  description: 'Selected papers and essays related to axₙmihn operations.',
+};
+
+export default function PublicationsPage() {
+  return (
+    <Section
+      title="Publications"
+      description="Peer-facing artefacts outlining the theory and implementation of the protocol."
+    >
+      <ul className="space-y-6">
+        {publications.map((publication) => (
+          <li key={publication.title} className="rounded-[1.5rem] border border-white/40 bg-white/80 p-6 shadow-sm">
+            <h3 className="text-lg font-semibold text-ink-navy">{publication.title}</h3>
+            <p className="mt-2 text-sm text-slate-600">{publication.description}</p>
+            <a
+              href={publication.href}
+              target="_blank"
+              rel="noopener noreferrer"
+              className="mt-4 inline-flex items-center text-sm font-semibold text-cyan-700 hover:text-cyan-500"
+            >
+              View publication →
+            </a>
+          </li>
+        ))}
+      </ul>
+    </Section>
+  );
+}
diff --git a/app/research/[slug]/page.tsx b/app/research/[slug]/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1c3f1863e057be39fce3c0198ce13b0db09fe409
--- /dev/null
+++ b/app/research/[slug]/page.tsx
@@ -0,0 +1,47 @@
+import type { Metadata } from 'next';
+import { notFound } from 'next/navigation';
+
+import { Section } from '@/components/ui/section';
+import { Prose } from '@/components/ui/prose';
+import { getMdxContent, getMdxSlugs } from '@/lib/mdx';
+
+interface ResearchPageProps {
+  params: { slug: string };
+}
+
+export async function generateStaticParams() {
+  const slugs = await getMdxSlugs('research');
+  return slugs.map((slug) => ({ slug }));
+}
+
+export async function generateMetadata({ params }: ResearchPageProps): Promise<Metadata> {
+  const { slug } = params;
+  try {
+    const entry = await getMdxContent('research', slug);
+    return {
+      title: entry.frontmatter.title,
+      description: entry.frontmatter.abstract ?? entry.frontmatter.summary,
+    };
+  } catch {
+    return {
+      title: 'Research',
+      description: 'Research note not found.',
+    };
+  }
+}
+
+export default async function ResearchDetailPage({ params }: ResearchPageProps) {
+  const { slug } = params;
+
+  try {
+    const entry = await getMdxContent('research', slug);
+
+    return (
+      <Section title={entry.frontmatter.title} lead={entry.frontmatter.abstract && <p className="text-lg text-slate-600">{entry.frontmatter.abstract}</p>}>
+        <Prose>{entry.content}</Prose>
+      </Section>
+    );
+  } catch {
+    return notFound();
+  }
+}
diff --git a/app/research/page.tsx b/app/research/page.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dcbe6dd97fcec64a080289982eba96be86702d54
--- /dev/null
+++ b/app/research/page.tsx
@@ -0,0 +1,51 @@
+import type { Metadata } from 'next';
+import Link from 'next/link';
+
+import { Section } from '@/components/ui/section';
+import { Card } from '@/components/ui/card';
+import { Badge } from '@/components/ui/badge';
+import { getMdxIndex } from '@/lib/mdx';
+
+export const metadata: Metadata = {
+  title: 'Research',
+  description: 'Notes and essays exploring methodological naturalism, coherence, and protocol design.',
+};
+
+export default async function ResearchPage() {
+  const entries = await getMdxIndex('research');
+
+  return (
+    <Section
+      title="Research notes"
+      description="Long-form explorations of axiom design, methodological naturalism, and therapeutic decision systems."
+    >
+      <div className="grid gap-6 md:grid-cols-2">
+        {entries.map((entry) => (
+          <Card
+            key={entry.slug}
+            title={entry.frontmatter.title}
+            description={entry.frontmatter.abstract ?? entry.frontmatter.summary}
+            footer={
+              <div className="flex items-center justify-between text-xs text-slate-500">
+                <Link href={`/research/${entry.slug}`} className="font-semibold text-cyan-700 hover:text-cyan-500">
+                  Read →
+                </Link>
+                {entry.frontmatter.readTime && <span>{entry.frontmatter.readTime}</span>}
+              </div>
+            }
+          >
+            {entry.frontmatter.tags && (
+              <div className="flex flex-wrap gap-2">
+                {entry.frontmatter.tags.map((tag) => (
+                  <Badge key={tag} tone="outline" className="text-[0.65rem]">
+                    {tag}
+                  </Badge>
+                ))}
+              </div>
+            )}
+          </Card>
+        ))}
+      </div>
+    </Section>
+  );
+}
diff --git a/app/robots.ts b/app/robots.ts
new file mode 100644
index 0000000000000000000000000000000000000000..ee374e96c4861c54e498413ca4678aad4b9ad616
--- /dev/null
+++ b/app/robots.ts
@@ -0,0 +1,11 @@
+import type { MetadataRoute } from 'next';
+
+const siteUrl = process.env.NEXT_PUBLIC_SITE_URL ?? 'https://axnmihn.com';
+
+export default function robots(): MetadataRoute.Robots {
+  return {
+    rules: [{ userAgent: '*', allow: '/' }],
+    sitemap: `${siteUrl}/sitemap.xml`,
+    host: siteUrl,
+  };
+}
diff --git a/app/settings.py b/app/settings.py
deleted file mode 100644
index 41b81c4a748ba0dde427775d54ad90d6eaa155fe..0000000000000000000000000000000000000000
--- a/app/settings.py
+++ /dev/null
@@ -1,26 +0,0 @@
-from typing import Optional
-
-from pydantic_settings import BaseSettings
-import os
-
-def _default_db_url() -> str:
-    if os.getenv("DATABASE_URL"):
-        return os.getenv("DATABASE_URL")
-    if os.getenv("VERCEL") == "1" or os.getenv("AWS_LAMBDA_FUNCTION_NAME"):
-        return "sqlite:////tmp/contact.db"  # writable on Vercel
-    return "sqlite:///./app/data/contact.db"
-
-class Settings(BaseSettings):
-    PROJECT_NAME: str = "Axnmihn"
-    CONTACT_EMAIL: str = "axadmihn@axnmihn.com"
-    CONTACT_PHONE: str = "+1 604-724-8864"
-    COMPANY_ADDRESS: str = "120 E 41st Ave, Vancouver BC V5W 1N7, Canada"
-    ADMIN_HANDLE: str = "axadmihn"
-    ALLOW_ORIGINS: str = "*"
-    SENDGRID_API_KEY: Optional[str] = None
-    DATABASE_URL: str = _default_db_url()
-
-    class Config:
-        env_file = ".env"
-
-settings = Settings()
diff --git a/app/sitemap.ts b/app/sitemap.ts
new file mode 100644
index 0000000000000000000000000000000000000000..1226d39eeff904b4d6e441aeb432baabeab7438d
--- /dev/null
+++ b/app/sitemap.ts
@@ -0,0 +1,18 @@
+import type { MetadataRoute } from 'next';
+
+import { getMdxSlugs } from '@/lib/mdx';
+
+const siteUrl = process.env.NEXT_PUBLIC_SITE_URL ?? 'https://axnmihn.com';
+
+export default async function sitemap(): Promise<MetadataRoute.Sitemap> {
+  const staticRoutes = ['/', '/protocol', '/projects', '/research', '/publications', '/contact', '/now'];
+  const researchSlugs = await getMdxSlugs('research');
+  const projectSlugs = await getMdxSlugs('projects');
+  const lastModified = new Date();
+
+  return [
+    ...staticRoutes.map((route) => ({ url: `${siteUrl}${route}`, lastModified })),
+    ...researchSlugs.map((slug) => ({ url: `${siteUrl}/research/${slug}`, lastModified })),
+    ...projectSlugs.map((slug) => ({ url: `${siteUrl}/projects/${slug}`, lastModified })),
+  ];
+}
diff --git a/app/static/css/styles.css b/app/static/css/styles.css
deleted file mode 100644
index 9cb8218011f35926f242437e139b8084aa8b0a73..0000000000000000000000000000000000000000
--- a/app/static/css/styles.css
+++ /dev/null
@@ -1,27 +0,0 @@
-:root { --ivory: #F8F6F0; --navy: #0B1F3A; --red: #C1121F; --ink: #0f172a; --muted: #6b7280; --radius: 18px; }
-    * { box-sizing: border-box; }
-    html, body { margin:0; padding:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, Apple Color Emoji, Segoe UI Emoji; color: var(--ink); background: var(--ivory); }
-    a { color: inherit; text-decoration: none; }
-    .container { max-width: 1120px; margin: 0 auto; padding: 0 20px; }
-    .nav { position: sticky; top:0; z-index:50; backdrop-filter: blur(8px); background: rgba(255,255,255,.78); border-bottom:1px solid #e5e7eb; }
-    .nav-inner { display:flex; align-items:center; justify-content:space-between; padding:12px 0; gap:16px; }
-    .brand { display:flex; align-items:center; gap:10px; font-weight:800; letter-spacing:.2px; }
-    .logo-badge { width: 40px; height: 40px; border-radius: 12px; background: linear-gradient(135deg, var(--red), var(--navy)); display:grid; place-items:center; color:white; font-weight:700; }
-    .nav-links a { margin-left:18px; font-size:14px; opacity:.85; }
-    .btn { display:inline-flex; align-items:center; gap:8px; padding:10px 16px; border-radius:9999px; border:1px solid #e5e7eb; background:#fff; cursor:pointer; }
-    .btn.primary { background: var(--red); color:#fff; border-color: var(--red); }
-    .hero { padding:64px 0 24px; }
-    .hero h1 { font-size: clamp(30px,5vw,48px); line-height:1.1; margin:0 0 12px; }
-    .hero p { font-size:18px; max-width:760px; opacity:.95; }
-    .grid { display:grid; gap:18px; }
-    @media (min-width: 900px) { .cols-2 { grid-template-columns:1fr 1fr; } .cols-3 { grid-template-columns: repeat(3,1fr); } .cols-4 { grid-template-columns: repeat(4,1fr); } }
-    .card { background:#fff; border:1px solid #e5e7eb; border-radius: var(--radius); padding:16px; }
-    h2.section { font-size:28px; margin:0 0 6px; }
-    .muted { color: var(--muted); }
-    .stat { background:#fff; border:1px solid #e5e7eb; border-radius:14px; padding:12px 14px; }
-    .table { width:100%; border-collapse:separate; border-spacing:0 10px; }
-    .table th, .table td { padding:10px 12px; background:#fff; border:1px solid #e5e7eb; }
-    .table tr td:first-child, .table tr th:first-child { border-radius:12px 0 0 12px; }
-    .table tr td:last-child, .table tr th:last-child { border-radius:0 12px 12px 0; }
-    .footer { border-top:1px solid #e5e7eb; margin-top:60px; padding:24px 0; }
-    .link { color: var(--navy); text-decoration: underline; }
\ No newline at end of file
diff --git a/app/templates/base.html b/app/templates/base.html
deleted file mode 100644
index 32ed95cf49a382bec9ba5d2bec233e37b2d6613d..0000000000000000000000000000000000000000
--- a/app/templates/base.html
+++ /dev/null
@@ -1,39 +0,0 @@
-<!doctype html>
-<html lang="en"><head>
-<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">
-<title>{{ settings.PROJECT_NAME }} — AAV Gene Therapy</title>
-<meta name="description" content="Axnmihn specializes in adeno-associated virus (AAV) gene therapy and offers personalized methods for genetic diseases through laboratory services.">
-<link rel="stylesheet" href="{{ url_for('static', path='css/styles.css') }}">
-</head><body>
-<header class="nav">
-    <div class="container nav-inner">
-      <a href="#home" class="brand" aria-label="Home">
-        <div class="logo-badge">ax</div>
-        <span>Axnmihn</span>
-      </a>
-      <nav class="nav-links" aria-label="Primary">
-        <a href="#technology">Technology</a>
-        <a href="#services">Services</a>
-        <a href="#pipeline">Pipeline</a>
-        <a href="#about">About</a>
-        <a href="#resources">Resources</a>
-        <a href="#contact">Contact</a>
-      </nav>
-      <div class="nav-cta">
-        <a class="btn" href="mailto:axadmihn@axnmihn.com">Email</a>
-        <a class="btn primary" href="#contact">Get started</a>
-      </div>
-    </div>
-  </header>
-<main id="home">{% block content %}{% endblock %}</main>
-<footer class="footer">
-    <div class="container" style="display:flex;align-items:center;justify-content:space-between;flex-wrap:wrap;gap:10px;">
-      <div class="brand">
-        <div class="logo-badge">ax</div>
-        <span>Axnmihn</span>
-      </div>
-      <div class="muted">© 2025 Axnmihn. All rights reserved.</div>
-    </div>
-  </footer>
-<script>(function(){const p=new URLSearchParams(location.search);if(p.get('sent')==='1'){alert('Thanks — your message was received.');history.replaceState(null,'',location.pathname);}})();</script>
-</body></html>
\ No newline at end of file
diff --git a/app/templates/index.html b/app/templates/index.html
deleted file mode 100644
index 70fccf738374550d3302fdb81c35c64cc48c262b..0000000000000000000000000000000000000000
--- a/app/templates/index.html
+++ /dev/null
@@ -1,117 +0,0 @@
-{% extends 'base.html' %}
-{% block content %}
-<section class="container hero grid cols-2">
-      <div>
-        <h1>Personalized AAV programs that turn biology into precision medicine</h1>
-        <p>Axnmihn specializes in adeno-associated virus (AAV) gene therapy and offers personalized methods for genetic diseases through laboratory services — vector design, assay development, and preclinical support.</p>
-        <div style="display:flex; gap:12px; flex-wrap:wrap; margin-top:12px;">
-          <a class="btn primary" href="#services">Explore services →</a>
-          <a class="btn" href="#technology">Platform overview</a>
-        </div>
-        <div class="grid cols-3" style="margin-top:16px;">
-          <div class="stat"><strong>Focus</strong><br><span class="muted">AAV engineering</span></div>
-          <div class="stat"><strong>Base</strong><br><span class="muted">Vancouver, BC</span></div>
-          <div class="stat"><strong>Mode</strong><br><span class="muted">Custom lab services</span></div>
-        </div>
-      </div>
-      <div class="card">
-        <h3 style="margin-top:0">Platform snapshot</h3>
-        <ul>
-          <li>• Disease-sensing RNA/protein modules</li>
-          <li>• AND/OR/NOT logic to enhance safety</li>
-          <li>• Effectors tuned per indication</li>
-          <li>• AAV (and LNP) delivery options</li>
-        </ul>
-      </div>
-    </section>
-
-    <section id="technology" class="container" style="padding:28px 0 10px;">
-      <h2 class="section">Technology — how it works</h2>
-      <p class="muted">A modular toolkit combining sensing, logic, and effectors inside an optimized delivery system.</p>
-      <div class="grid cols-4" style="margin-top:18px;">
-        <div class="card"><strong>Sensing</strong><br><span class="muted">Detect transcripts/proteins that define disease states.</span></div>
-        <div class="card"><strong>Logic</strong><br><span class="muted">AND/OR/NOT circuits minimize off‑target activity.</span></div>
-        <div class="card"><strong>Effectors</strong><br><span class="muted">Control expression, immune tuning, or apoptosis.</span></div>
-        <div class="card"><strong>Delivery</strong><br><span class="muted">AAV serotypes mapped to tissue biodistribution.</span></div>
-      </div>
-    </section>
-
-    <section id="services" class="container" style="padding:28px 0;">
-      <h2 class="section">Services — from concept to data</h2>
-      <div class="grid cols-3" style="margin-top:18px;">
-        <div class="card"><strong>AAV vector design</strong><p class="muted">Capsid selection, promoters, codon optimization, and payload engineering oriented to target tissue.</p></div>
-        <div class="card"><strong>Assay & analytics</strong><p class="muted">Potency assays, qPCR/NGS, biodistribution, and stability testing to support program decisions.</p></div>
-        <div class="card"><strong>Personalized programs</strong><p class="muted">Patient‑specific strategy and lab workflows with secure, compliant handling.</p></div>
-      </div>
-      <div class="card" style="margin-top:18px;">
-        <strong>Deliverables (illustrative)</strong>
-        <ul class="muted">
-          <li>• Design dossier with rationale and predicted tropism</li>
-          <li>• Assay plan, protocols, and datasets</li>
-          <li>• Non‑confidential report for collaborators</li>
-        </ul>
-      </div>
-    </section>
-
-    <section id="pipeline" class="container" style="padding:28px 0;">
-      <h2 class="section">Pipeline — example programs</h2>
-      <table class="table">
-        <thead><tr><th>Code</th><th>Indication</th><th>Modality</th><th>Status</th><th>Next milestone</th></tr></thead>
-        <tbody>
-          <tr><td>AX‑101</td><td>Solid tumor immuno‑circuit</td><td>AAV, AND gate</td><td>Lead optimization</td><td>Vector package finalize</td></tr>
-          <tr><td>AX‑202</td><td>Fibrosis‑sensing therapy</td><td>AAV, NOT gate</td><td>In vivo PoC</td><td>Biodistribution readout</td></tr>
-          <tr><td>AX‑303</td><td>Autoimmune tolerance</td><td>Ex vivo, OR gate</td><td>Target discovery</td><td>Hit validation</td></tr>
-        </tbody>
-      </table>
-    </section>
-
-    <section id="about" class="container" style="padding:28px 0;">
-      <h2 class="section">About Axnmihn</h2>
-      <div class="grid cols-2" style="margin-top:18px;">
-        <div class="card">
-          <strong>Mission</strong>
-          <p class="muted">Translate programmable biology into patient‑specific treatments for rare and complex genetic disease.</p>
-          <strong>Leadership</strong>
-          <p><b>Aris Eznmihn</b> — Chief Executive Officer</p>
-        </div>
-        <div class="card">
-          <strong>Where we are</strong>
-          <p class="muted">Based in Vancouver, BC (address below). We collaborate with academic and industry partners.</p>
-          <strong>Work with us</strong>
-          <p class="muted">Advisors, collaborators, and early hires are welcome. Reach out with a short note.</p>
-        </div>
-      </div>
-    </section>
-
-    <section id="resources" class="container" style="padding:28px 0;">
-      <h2 class="section">Resources</h2>
-      <div class="grid cols-3" style="margin-top:18px;">
-        <div class="card"><strong>Technical brief</strong><p class="muted">Overview of our AAV approach. (Coming soon)</p></div>
-        <div class="card"><strong>Example datasets</strong><p class="muted">Synthetic data showing assay outputs. (Coming soon)</p></div>
-        <div class="card"><strong>Press kit</strong><p class="muted">Logo files and brand guide. (Coming soon)</p></div>
-      </div>
-    </section>
-
-    <section id="contact" class="container" style="padding:28px 0;">
-      <h2 class="section">Contact</h2>
-      <div class="grid cols-2" style="margin-top:18px;">
-        <div class="card">
-          <strong>Axnmihn</strong><br>
-          120 E 41st Ave<br>Vancouver BC V5W 1N7<br>Canada<br>
-          <a class="link" href="tel:+16047248864">+1 604-724-8864</a><br>
-          <a class="link" href="mailto:axadmihn@axnmihn.com">axadmihn@axnmihn.com</a><br>
-          <span class="muted">axnmihn.com</span>
-        </div>
-        <div class="card">
-          <strong>Send a message</strong>
-          <form action="mailto:axadmihn@axnmihn.com" method="post" enctype="text/plain" style="display:grid; gap:10px; margin-top:8px;">
-            <input name="Name" placeholder="Name" style="padding:10px;border:1px solid #e5e7eb;border-radius:10px;">
-            <input name="Email" type="email" placeholder="Email" style="padding:10px;border:1px solid #e5e7eb;border-radius:10px;">
-            <textarea name="Message" placeholder="Message" rows="4" style="padding:10px;border:1px solid #e5e7eb;border-radius:10px;"></textarea>
-            <button class="btn primary" type="submit">Submit</button>
-            <small class="muted">By submitting, you consent to be contacted about your inquiry.</small>
-          </form>
-        </div>
-      </div>
-    </section>
-{% endblock %}
\ No newline at end of file
diff --git a/components/content/contact-form.tsx b/components/content/contact-form.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a055c6a53208ed49bbd73380c0b01e3c98077b
--- /dev/null
+++ b/components/content/contact-form.tsx
@@ -0,0 +1,112 @@
+'use client';
+
+import { FormEvent, useState } from 'react';
+import { z } from 'zod';
+
+import { Button } from '@/components/ui/button';
+
+const contactSchema = z.object({
+  name: z.string().min(2, 'Name is required.'),
+  email: z.string().email('Enter a valid email.'),
+  message: z.string().min(10, 'Share enough detail for @axadmihn to respond meaningfully.'),
+});
+
+type ResultState = { status: 'idle' | 'success' | 'error'; message?: string };
+
+export function ContactForm() {
+  const [result, setResult] = useState<ResultState>({ status: 'idle' });
+  const [submitting, setSubmitting] = useState(false);
+
+  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
+    event.preventDefault();
+    const form = new FormData(event.currentTarget);
+    const values = {
+      name: String(form.get('name') ?? ''),
+      email: String(form.get('email') ?? ''),
+      message: String(form.get('message') ?? ''),
+    };
+
+    const parsed = contactSchema.safeParse(values);
+    if (!parsed.success) {
+      setResult({ status: 'error', message: parsed.error.issues[0]?.message ?? 'Please check the form.' });
+      return;
+    }
+
+    try {
+      setSubmitting(true);
+      setResult({ status: 'idle' });
+      const response = await fetch('/api/contact', {
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify(parsed.data),
+      });
+      const data = (await response.json()) as { ok: boolean; error?: string };
+
+      if (data.ok) {
+        event.currentTarget.reset();
+        setResult({
+          status: 'success',
+          message: 'Thank you. @axadmihn received your message—expect a response when the protocol window allows.',
+        });
+      } else {
+        setResult({ status: 'error', message: data.error ?? 'Unable to send message right now.' });
+      }
+    } catch (error) {
+      console.error('contact form error', error);
+      setResult({ status: 'error', message: 'Connection failed—try again shortly.' });
+    } finally {
+      setSubmitting(false);
+    }
+  };
+
+  return (
+    <form onSubmit={handleSubmit} className="space-y-6">
+      <div className="grid gap-6 sm:grid-cols-2">
+        <div className="flex flex-col gap-2">
+          <label htmlFor="name" className="text-sm font-medium text-ink-navy">
+            Name
+          </label>
+          <input
+            id="name"
+            name="name"
+            type="text"
+            required
+            className="rounded-[1rem] border border-slate-200 bg-white px-4 py-3 text-sm text-ink-navy shadow-sm focus:outline-none focus:ring-2 focus:ring-cyan-400"
+          />
+        </div>
+        <div className="flex flex-col gap-2">
+          <label htmlFor="email" className="text-sm font-medium text-ink-navy">
+            Email
+          </label>
+          <input
+            id="email"
+            name="email"
+            type="email"
+            required
+            className="rounded-[1rem] border border-slate-200 bg-white px-4 py-3 text-sm text-ink-navy shadow-sm focus:outline-none focus:ring-2 focus:ring-cyan-400"
+          />
+        </div>
+      </div>
+      <div className="flex flex-col gap-2">
+        <label htmlFor="message" className="text-sm font-medium text-ink-navy">
+          Message
+        </label>
+        <textarea
+          id="message"
+          name="message"
+          minLength={10}
+          rows={6}
+          required
+          className="rounded-[1rem] border border-slate-200 bg-white px-4 py-3 text-sm text-ink-navy shadow-sm focus:outline-none focus:ring-2 focus:ring-cyan-400"
+        />
+      </div>
+      <div className="flex items-center gap-4">
+        <Button type="submit" disabled={submitting}>
+          {submitting ? 'Sending…' : 'Send message'}
+        </Button>
+        {result.status === 'success' && <span className="text-sm text-green-700">{result.message}</span>}
+        {result.status === 'error' && <span className="text-sm text-red-600">{result.message}</span>}
+      </div>
+    </form>
+  );
+}
diff --git a/components/content/mdx-components.tsx b/components/content/mdx-components.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..d6e2b9f0d0c6aa4e5efdfff46c388ad6b0a7987c
--- /dev/null
+++ b/components/content/mdx-components.tsx
@@ -0,0 +1,25 @@
+import type { MDXComponents } from 'mdx/types';
+import Link from 'next/link';
+
+import { Callout } from '@/components/ui/callout';
+import { Badge } from '@/components/ui/badge';
+
+export const mdxComponents: MDXComponents = {
+  a: ({ href = '#', ...props }) => {
+    if (href.startsWith('/')) {
+      return <Link href={href} {...props} className="font-semibold text-cyan-700 hover:text-cyan-500" />;
+    }
+
+    return (
+      <a
+        href={href}
+        target="_blank"
+        rel="noopener noreferrer"
+        {...props}
+        className="font-semibold text-cyan-700 hover:text-cyan-500"
+      />
+    );
+  },
+  Callout,
+  Badge,
+};
diff --git a/components/layout/site-footer.tsx b/components/layout/site-footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..27ded01aa26417eb3713afb1ff5170c31f2b743b
--- /dev/null
+++ b/components/layout/site-footer.tsx
@@ -0,0 +1,25 @@
+import Link from 'next/link';
+
+export function SiteFooter() {
+  return (
+    <footer className="border-t border-white/40 bg-white/70">
+      <div className="mx-auto flex w-full max-w-5xl flex-col gap-4 px-6 py-10 text-sm text-slate-600 sm:flex-row sm:items-center sm:justify-between">
+        <div className="space-y-1">
+          <p>Vancouver, BC, Canada</p>
+          <p>
+            administered by{' '}
+            <Link href="https://x.com/axadmihn" target="_blank" rel="noopener noreferrer" className="font-medium text-ink-navy">
+              @axadmihn
+            </Link>
+          </p>
+          <p>
+            <a href="mailto:axadmihn@axnmihn.com" className="hover:text-ink-navy">
+              axadmihn@axnmihn.com
+            </a>
+          </p>
+        </div>
+        <div className="text-xs text-slate-500">© Axnmihn</div>
+      </div>
+    </footer>
+  );
+}
diff --git a/components/layout/site-header.tsx b/components/layout/site-header.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..c918e4a4827c67ec4c1cd134c8572bb2b25d1848
--- /dev/null
+++ b/components/layout/site-header.tsx
@@ -0,0 +1,64 @@
+'use client';
+
+import Link from 'next/link';
+import { usePathname } from 'next/navigation';
+import clsx from 'clsx';
+
+const links = [
+  { label: 'Home', href: '/' },
+  { label: 'Protocol', href: '/protocol' },
+  { label: 'Research', href: '/research' },
+  { label: 'Publications', href: '/publications' },
+  { label: 'Projects', href: '/projects' },
+  { label: 'Contact', href: '/contact' },
+];
+
+export function SiteHeader() {
+  const pathname = usePathname();
+
+  return (
+    <header className="sticky top-0 z-40 border-b border-white/30 bg-off-white/90 backdrop-blur">
+      <div className="mx-auto flex w-full max-w-5xl items-center justify-between px-6 py-5">
+        <Link href="/" className="text-lg font-semibold tracking-tight text-ink-navy">
+          axₙmihn
+        </Link>
+        <nav className="hidden gap-6 text-sm font-medium text-ink-navy md:flex">
+          {links.map((link) => {
+            const isActive = link.href === '/' ? pathname === '/' : pathname.startsWith(link.href);
+            return (
+              <Link
+                key={link.href}
+                href={link.href}
+                className={clsx(
+                  'rounded-full px-3 py-1 transition-colors duration-150',
+                  isActive ? 'bg-ink-navy text-white shadow-sm' : 'hover:bg-white/80',
+                )}
+              >
+                {link.label}
+              </Link>
+            );
+          })}
+        </nav>
+        <details className="relative md:hidden">
+          <summary className="cursor-pointer rounded-full px-3 py-1 text-xs font-semibold uppercase tracking-widest text-slate-600 transition-colors hover:bg-white/80">
+            Menu
+          </summary>
+          <div className="absolute right-0 mt-3 flex min-w-[12rem] flex-col gap-1 rounded-[1.5rem] border border-white/60 bg-white p-4 text-sm shadow-lg">
+            {links.map((link) => (
+              <Link
+                key={link.href}
+                href={link.href}
+                className={clsx(
+                  'rounded-full px-3 py-2 hover:bg-off-white',
+                  pathname === link.href && 'bg-ink-navy text-white',
+                )}
+              >
+                {link.label}
+              </Link>
+            ))}
+          </div>
+        </details>
+      </div>
+    </header>
+  );
+}
diff --git a/components/ui/badge.tsx b/components/ui/badge.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..b5e9d93d8ba2848150100cb514e10c10870c4bc6
--- /dev/null
+++ b/components/ui/badge.tsx
@@ -0,0 +1,29 @@
+import { ReactNode } from 'react';
+import clsx from 'clsx';
+
+interface BadgeProps {
+  children: ReactNode;
+  tone?: 'default' | 'cyan' | 'outline';
+  className?: string;
+}
+
+export function Badge({ children, tone = 'default', className }: BadgeProps) {
+  const styles: Record<typeof tone, string> = {
+    default: 'bg-slate-200 text-slate-700',
+    cyan: 'bg-cyan-100 text-cyan-900',
+    outline:
+      'border border-slate-300 text-slate-700 backdrop-blur bg-white/70 shadow-sm',
+  } as const;
+
+  return (
+    <span
+      className={clsx(
+        'inline-flex items-center rounded-full px-3 py-1 text-xs font-medium uppercase tracking-wide',
+        styles[tone],
+        className,
+      )}
+    >
+      {children}
+    </span>
+  );
+}
diff --git a/components/ui/button.tsx b/components/ui/button.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6af463932a72520dfa6f92f3baf9679291a4abd9
--- /dev/null
+++ b/components/ui/button.tsx
@@ -0,0 +1,49 @@
+import Link, { LinkProps } from 'next/link';
+import { ButtonHTMLAttributes, ReactNode } from 'react';
+import clsx from 'clsx';
+
+type AnchorButtonProps = {
+  href: string;
+} & LinkProps &
+  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof LinkProps | 'className' | 'children' | 'href'>;
+
+type NativeButtonProps = Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'className' | 'children'>;
+
+type ButtonProps = {
+  children: ReactNode;
+  variant?: 'primary' | 'secondary' | 'ghost';
+  className?: string;
+} & (AnchorButtonProps | NativeButtonProps);
+
+export function Button({ variant = 'primary', className, children, ...props }: ButtonProps) {
+  const baseStyles =
+    'inline-flex items-center justify-center gap-2 rounded-[1.5rem] px-5 py-2 text-sm font-semibold transition-colors duration-200';
+
+  const variants: Record<Exclude<ButtonProps['variant'], undefined>, string> = {
+    primary:
+      'bg-ink-navy text-white shadow-md shadow-slate-900/10 hover:bg-slate-900 focus-visible:bg-slate-900',
+    secondary: 'bg-white text-ink-navy border border-slate-200 hover:bg-slate-100',
+    ghost: 'bg-transparent text-ink-navy hover:bg-white/60',
+  } as const;
+
+  if ('href' in props) {
+    const { href, ...anchorProps } = props as AnchorButtonProps;
+    return (
+      <Link
+        href={href}
+        className={clsx(baseStyles, variants[variant], className)}
+        {...anchorProps}
+      >
+        {children}
+      </Link>
+    );
+  }
+
+  const buttonProps = props as NativeButtonProps;
+
+  return (
+    <button className={clsx(baseStyles, variants[variant], className)} {...buttonProps}>
+      {children}
+    </button>
+  );
+}
diff --git a/components/ui/callout.tsx b/components/ui/callout.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..f97195055da0a440a0f6a2a8e960ca5a8bbcdffc
--- /dev/null
+++ b/components/ui/callout.tsx
@@ -0,0 +1,35 @@
+import { ReactNode } from 'react';
+import clsx from 'clsx';
+
+interface CalloutProps {
+  title: string;
+  body: ReactNode;
+  action?: ReactNode;
+  tone?: 'ink' | 'cyan';
+  className?: string;
+}
+
+export function Callout({ title, body, action, tone = 'ink', className }: CalloutProps) {
+  const toneStyles: Record<typeof tone, string> = {
+    ink: 'bg-ink-navy text-off-white',
+    cyan: 'bg-cyan-500/10 text-ink-navy border border-cyan-200',
+  } as const;
+
+  return (
+    <div
+      className={clsx(
+        'rounded-[1.5rem] p-6 shadow-sm transition-colors duration-200',
+        toneStyles[tone],
+        className,
+      )}
+    >
+      <div className="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
+        <div>
+          <p className="text-sm font-semibold uppercase tracking-wider opacity-80">{title}</p>
+          <div className="mt-2 text-base leading-relaxed">{body}</div>
+        </div>
+        {action && <div className="shrink-0">{action}</div>}
+      </div>
+    </div>
+  );
+}
diff --git a/components/ui/card.tsx b/components/ui/card.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..049a4e04f045c55535f19118c75d094263a0b1d2
--- /dev/null
+++ b/components/ui/card.tsx
@@ -0,0 +1,30 @@
+import { ReactNode } from 'react';
+import clsx from 'clsx';
+
+interface CardProps {
+  title: string;
+  description?: string;
+  eyebrow?: ReactNode;
+  footer?: ReactNode;
+  children?: ReactNode;
+  className?: string;
+}
+
+export function Card({ title, description, eyebrow, footer, children, className }: CardProps) {
+  return (
+    <article
+      className={clsx(
+        'group relative flex h-full flex-col justify-between rounded-[1.5rem] border border-white/40 bg-white/80 p-8 shadow-sm backdrop-blur transition-all duration-200 hover:-translate-y-1 hover:shadow-lg',
+        className,
+      )}
+    >
+      <div className="space-y-4">
+        {eyebrow && <div className="text-xs font-semibold uppercase tracking-wider text-cyan-600">{eyebrow}</div>}
+        <h3 className="text-xl font-semibold text-ink-navy">{title}</h3>
+        {description && <p className="text-base text-slate-600">{description}</p>}
+        {children}
+      </div>
+      {footer && <div className="mt-6 border-t border-slate-200 pt-4 text-sm text-slate-700">{footer}</div>}
+    </article>
+  );
+}
diff --git a/components/ui/prose.tsx b/components/ui/prose.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..365d25e98f2a5d97f17274bb7059854689bef63b
--- /dev/null
+++ b/components/ui/prose.tsx
@@ -0,0 +1,20 @@
+import { ReactNode } from 'react';
+import clsx from 'clsx';
+
+interface ProseProps {
+  children: ReactNode;
+  className?: string;
+}
+
+export function Prose({ children, className }: ProseProps) {
+  return (
+    <div
+      className={clsx(
+        'prose prose-slate max-w-none text-base leading-relaxed prose-headings:font-semibold prose-headings:text-ink-navy prose-a:text-cyan-700 hover:prose-a:text-cyan-500 prose-code:rounded prose-code:bg-cool-gray/60 prose-code:px-1.5 prose-code:py-0.5',
+        className,
+      )}
+    >
+      {children}
+    </div>
+  );
+}
diff --git a/components/ui/section.tsx b/components/ui/section.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..b6ee74ef2a9dc6c96d8bd9668cd4dce75bc36c8e
--- /dev/null
+++ b/components/ui/section.tsx
@@ -0,0 +1,44 @@
+import { ReactNode } from 'react';
+import clsx from 'clsx';
+
+interface SectionProps {
+  title?: string;
+  description?: string;
+  lead?: ReactNode;
+  children?: ReactNode;
+  className?: string;
+  actions?: ReactNode;
+}
+
+export function Section({
+  title,
+  description,
+  lead,
+  children,
+  className,
+  actions,
+}: SectionProps) {
+  return (
+    <section className={clsx('py-16 sm:py-20', className)}>
+      <div className="mx-auto flex w-full max-w-5xl flex-col gap-8 px-6">
+        {(title || description || actions) && (
+          <header className="flex flex-col gap-4 sm:flex-row sm:items-end sm:justify-between">
+            <div className="space-y-2">
+              {title && (
+                <h2 className="text-2xl font-semibold tracking-tight text-ink-navy sm:text-3xl">
+                  {title}
+                </h2>
+              )}
+              {description && (
+                <p className="max-w-2xl text-lg text-slate-600">{description}</p>
+              )}
+              {lead}
+            </div>
+            {actions && <div className="shrink-0">{actions}</div>}
+          </header>
+        )}
+        {children}
+      </div>
+    </section>
+  );
+}
diff --git a/components/ui/status-pill.tsx b/components/ui/status-pill.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9e0999eed7da1f6566414c934fb54d15d74918e5
--- /dev/null
+++ b/components/ui/status-pill.tsx
@@ -0,0 +1,23 @@
+import { ReactNode } from 'react';
+import clsx from 'clsx';
+
+interface StatusPillProps {
+  status: 'Active' | 'In research' | 'In design' | 'Paused';
+  icon?: ReactNode;
+}
+
+const statusStyles: Record<StatusPillProps['status'], string> = {
+  Active: 'bg-green-100 text-green-800',
+  'In research': 'bg-amber-100 text-amber-800',
+  'In design': 'bg-blue-100 text-blue-800',
+  Paused: 'bg-slate-200 text-slate-700',
+};
+
+export function StatusPill({ status, icon }: StatusPillProps) {
+  return (
+    <span className={clsx('inline-flex items-center gap-1 rounded-full px-3 py-1 text-xs font-medium', statusStyles[status])}>
+      {icon}
+      {status}
+    </span>
+  );
+}
diff --git a/content/projects/avd.mdx b/content/projects/avd.mdx
new file mode 100644
index 0000000000000000000000000000000000000000..f37fce591fb13f53899a84cc20d61afbadce2c5b
--- /dev/null
+++ b/content/projects/avd.mdx
@@ -0,0 +1,12 @@
+---
+title: AVD (Axiom Violation Detector)
+summary: Hardening the contradiction detection loop for SGCE volatility.
+order: 1
+---
+
+AVD watches live and historical data for contradictions against the current axiom set. When a violation fires, the protocol halts downstream effectors and forces a human review checkpoint.
+
+### Current focus
+
+- Expanding coverage to multi-actor scenarios where caregiver inputs collide with patient self-reporting.
+- Automating rollback plans inside axₙlog so recovery protocols execute without hesitation.
diff --git a/content/projects/consistency-checker.mdx b/content/projects/consistency-checker.mdx
new file mode 100644
index 0000000000000000000000000000000000000000..05ddca67da9d24534245edd4179689cc16cdb2c9
--- /dev/null
+++ b/content/projects/consistency-checker.mdx
@@ -0,0 +1,12 @@
+---
+title: Consistency Checker / axₙlog
+summary: Keeping the protocol coherent and traceable under constant change.
+order: 2
+---
+
+Consistency Checker proofs current decisions against the axiom set, logs, and planned interventions. When coherence erodes, it pauses execution and requests administrator input.
+
+### Current focus
+
+- Increasing diff visualisation precision so protocol changes surface their impact instantly.
+- Pairing Consistency Checker alerts with axₙlog snippets for rapid forensic review.
diff --git a/content/projects/medication-logic-monitor.mdx b/content/projects/medication-logic-monitor.mdx
new file mode 100644
index 0000000000000000000000000000000000000000..3c0a5ee2a5ebe2f044faacf165d9a101da9f451c
--- /dev/null
+++ b/content/projects/medication-logic-monitor.mdx
@@ -0,0 +1,12 @@
+---
+title: Medication-Logic Monitor
+summary: Aligning medication timing with neurological stability.
+order: 3
+---
+
+Medication-Logic Monitor evaluates dosages, timing, and expected responses for SGCE therapeutics. When the real-world pattern drifts, it raises warnings and recommends intervention windows.
+
+### Current focus
+
+- Integrating pharmacokinetic simulations to anticipate off-target effects before symptoms flare.
+- Building a reconciliation workflow for clinician orders versus patient practice.
diff --git a/content/research/critique-of-traditional-metaphysics.mdx b/content/research/critique-of-traditional-metaphysics.mdx
new file mode 100644
index 0000000000000000000000000000000000000000..7f3112b530560b0c007e6fe08f98e5bf567713f0
--- /dev/null
+++ b/content/research/critique-of-traditional-metaphysics.mdx
@@ -0,0 +1,26 @@
+---
+title: Critique of Traditional Metaphysics for Protocol Governance
+abstract: Why metaphysical speculation weakens therapeutic decision systems and how axₙmihn avoids those traps.
+tags:
+  - philosophy of science
+  - protocol governance
+  - coherence
+readTime: 6 min read
+order: 2
+---
+
+## Decision systems must remain testable
+
+Traditional metaphysics invites unfalsifiable premises. Within axₙmihn, every guiding axiom must point to observable consequences. Anything else is noise.
+
+## Coherence as survival constraint
+
+Consistency Checker treats incoherence as existential risk. The more speculation enters the system, the faster the coherence budget evaporates.
+
+## Grounding in SGCE reality
+
+SGCE myoclonus-dystonia presents rapid, embodied feedback. Protocols tied to metaphysical narratives fail to adapt at the required tempo. axₙmihn remains grounded in measurable states.
+
+## Human oversight without mysticism
+
+axadmihn exercises judgement, but through disciplined review and logged rationale. Emotional signals inform the review; they do not override evidence.
diff --git a/content/research/methodological-naturalism.mdx b/content/research/methodological-naturalism.mdx
new file mode 100644
index 0000000000000000000000000000000000000000..e4f5ed56656c920a3c3e63f78cb8c3d6169be5f3
--- /dev/null
+++ b/content/research/methodological-naturalism.mdx
@@ -0,0 +1,26 @@
+---
+title: Methodological Naturalism in Therapeutic Decision Systems
+abstract: Investigating methodological naturalism as a practical stance for SGCE protocol design.
+tags:
+  - methodological naturalism
+  - sgce
+  - protocol design
+readTime: 8 min read
+order: 1
+---
+
+## Why methodological naturalism matters
+
+Emotions surface as data, not mandates. Methodological naturalism gives the protocol a disciplined way to translate observations into testable models without appealing to unverifiable causes.
+
+## Observable signals first
+
+AVD relies on observable contradictions. If a claim cannot be observed or inferred from data, it cannot ground an action. This constraint keeps the protocol falsifiable.
+
+## Predictions as accountability
+
+Every intervention ships with explicit predictions. Deviations trigger Consistency Checker alerts and axₙlog annotations for later audits.
+
+## Human administrator loop
+
+axadmihn interprets nuance and updates axioms through disciplined review. Methodological naturalism prevents motivational drift while still respecting lived experience.
diff --git a/eslint.config.mjs b/eslint.config.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..719cea2b59f3222f4830a756100e1f756b8a18af
--- /dev/null
+++ b/eslint.config.mjs
@@ -0,0 +1,25 @@
+import { dirname } from "path";
+import { fileURLToPath } from "url";
+import { FlatCompat } from "@eslint/eslintrc";
+
+const __filename = fileURLToPath(import.meta.url);
+const __dirname = dirname(__filename);
+
+const compat = new FlatCompat({
+  baseDirectory: __dirname,
+});
+
+const eslintConfig = [
+  ...compat.extends("next/core-web-vitals", "next/typescript"),
+  {
+    ignores: [
+      "node_modules/**",
+      ".next/**",
+      "out/**",
+      "build/**",
+      "next-env.d.ts",
+    ],
+  },
+];
+
+export default eslintConfig;
diff --git a/lib/contact-persistence.ts b/lib/contact-persistence.ts
new file mode 100644
index 0000000000000000000000000000000000000000..ff5e0b93ebabdb1e6a530de2d4c24afa3b95c05f
--- /dev/null
+++ b/lib/contact-persistence.ts
@@ -0,0 +1,21 @@
+export interface ContactRecord {
+  name: string;
+  email: string;
+  message: string;
+  receivedAt: Date;
+  sourceIp: string;
+}
+
+export interface ContactPersistenceAdapter {
+  saveContact(record: ContactRecord): Promise<void>;
+}
+
+// TODO: Replace with a concrete adapter (KV/Blob/Postgres) when persistence is required.
+export const contactPersistenceAdapter: ContactPersistenceAdapter = {
+  async saveContact(record: ContactRecord) {
+    console.info('PERSIST_CONTACTS=1 → stub persistence invoked', {
+      ...record,
+      receivedAt: record.receivedAt.toISOString(),
+    });
+  },
+};
diff --git a/lib/mdx.ts b/lib/mdx.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f929a7eacf0aea13dc3d313df1b6014d2e8a59e3
--- /dev/null
+++ b/lib/mdx.ts
@@ -0,0 +1,85 @@
+import fs from 'node:fs/promises';
+import path from 'node:path';
+
+import matter from 'gray-matter';
+import { compileMDX } from 'next-mdx-remote/rsc';
+import { cache } from 'react';
+
+import { mdxComponents } from '@/components/content/mdx-components';
+
+export type Collection = 'research' | 'projects';
+
+export interface MdxFrontmatter {
+  title: string;
+  abstract?: string;
+  summary?: string;
+  tags?: string[];
+  readTime?: string;
+  publishedAt?: string;
+  updatedAt?: string;
+  order?: number;
+}
+
+export interface MdxIndexEntry {
+  slug: string;
+  frontmatter: MdxFrontmatter;
+}
+
+const CONTENT_ROOT = path.join(process.cwd(), 'content');
+
+const readDirCached = cache(async (collection: Collection) => {
+  const targetDir = path.join(CONTENT_ROOT, collection);
+  const entries = await fs.readdir(targetDir);
+  return entries.filter((entry) => entry.endsWith('.mdx'));
+});
+
+export const getMdxIndex = cache(async (collection: Collection): Promise<MdxIndexEntry[]> => {
+  const files = await readDirCached(collection);
+  const items = await Promise.all(
+    files.map(async (file) => {
+      const filePath = path.join(CONTENT_ROOT, collection, file);
+      const source = await fs.readFile(filePath, 'utf8');
+      const { data } = matter(source);
+
+      if (!data.title) {
+        throw new Error(`Missing title in frontmatter for ${collection}/${file}`);
+      }
+
+      return {
+        slug: file.replace(/\.mdx?$/, ''),
+        frontmatter: data as MdxFrontmatter,
+      };
+    }),
+  );
+
+  return items.sort((a, b) => {
+    const orderA = a.frontmatter.order ?? Number.POSITIVE_INFINITY;
+    const orderB = b.frontmatter.order ?? Number.POSITIVE_INFINITY;
+    if (orderA !== orderB) {
+      return orderA - orderB;
+    }
+    return a.frontmatter.title.localeCompare(b.frontmatter.title);
+  });
+});
+
+export const getMdxContent = cache(async (collection: Collection, slug: string) => {
+  const filePath = path.join(CONTENT_ROOT, collection, `${slug}.mdx`);
+  const source = await fs.readFile(filePath, 'utf8');
+
+  const { content, frontmatter } = await compileMDX<{ title: string } | MdxFrontmatter>({
+    source,
+    components: mdxComponents,
+    options: { parseFrontmatter: true },
+  });
+
+  if (!frontmatter || !('title' in frontmatter) || !frontmatter.title) {
+    throw new Error(`Missing title in frontmatter for ${collection}/${slug}`);
+  }
+
+  return { slug, frontmatter: frontmatter as MdxFrontmatter, content };
+});
+
+export const getMdxSlugs = cache(async (collection: Collection) => {
+  const files = await readDirCached(collection);
+  return files.map((file) => file.replace(/\.mdx?$/, ''));
+});
diff --git a/lib/tokens.ts b/lib/tokens.ts
new file mode 100644
index 0000000000000000000000000000000000000000..74efff2b02613ae20f29c387caf933ca67c45684
--- /dev/null
+++ b/lib/tokens.ts
@@ -0,0 +1,35 @@
+export const colors = {
+  inkNavy: '#0B1F3A',
+  cyan: '#0EA5E9',
+  coolGray: '#E5E7EB',
+  offWhite: '#F8FAFC',
+  white: '#ffffff',
+};
+
+export const spacing = {
+  xs: '0.25rem',
+  sm: '0.5rem',
+  md: '0.75rem',
+  lg: '1rem',
+  xl: '1.5rem',
+  '2xl': '2rem',
+  '3xl': '3rem',
+};
+
+export const radii = {
+  sm: '0.5rem',
+  md: '1rem',
+  lg: '1.5rem',
+};
+
+export const shadows = {
+  sm: '0 10px 30px rgba(11, 31, 58, 0.08)',
+  md: '0 20px 45px rgba(11, 31, 58, 0.12)',
+};
+
+export const typography = {
+  fonts: {
+    sans: 'var(--font-inter)',
+    mono: 'var(--font-plex-mono)',
+  },
+};
diff --git a/next.config.ts b/next.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..e9ffa3083ad279ecf95fd8eae59cb253e9a539c4
--- /dev/null
+++ b/next.config.ts
@@ -0,0 +1,7 @@
+import type { NextConfig } from "next";
+
+const nextConfig: NextConfig = {
+  /* config options here */
+};
+
+export default nextConfig;
diff --git a/package.json b/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..7fdb947ce77262e2c004f478e2af7715572e5bc9
--- /dev/null
+++ b/package.json
@@ -0,0 +1,37 @@
+{
+  "name": "ax19.3",
+  "version": "0.1.0",
+  "private": true,
+  "scripts": {
+    "dev": "next dev --turbopack",
+    "build": "next build --turbopack",
+    "start": "next start",
+    "lint": "eslint"
+  },
+  "dependencies": {
+    "@fontsource-variable/inter": "^5.2.8",
+    "@fontsource/ibm-plex-mono": "^5.2.7",
+    "@sendgrid/mail": "^8.1.6",
+    "@vercel/analytics": "^1.5.0",
+    "clsx": "^2.1.1",
+    "gray-matter": "^4.0.3",
+    "next": "15.5.3",
+    "next-mdx-remote": "^5.0.0",
+    "react": "19.1.0",
+    "react-dom": "19.1.0",
+    "zod": "^4.1.9"
+  },
+  "devDependencies": {
+    "@eslint/eslintrc": "^3",
+    "@tailwindcss/postcss": "^4",
+    "@tailwindcss/typography": "^0.5.18",
+    "@types/mdx": "^2.0.13",
+    "@types/node": "^20",
+    "@types/react": "^19",
+    "@types/react-dom": "^19",
+    "eslint": "^9",
+    "eslint-config-next": "15.5.3",
+    "tailwindcss": "^4",
+    "typescript": "^5"
+  }
+}
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
new file mode 100644
index 0000000000000000000000000000000000000000..fc09e5f95397af80e21c079b72becea149305d07
--- /dev/null
+++ b/pnpm-lock.yaml
@@ -0,0 +1,5095 @@
+lockfileVersion: '9.0'
+
+settings:
+  autoInstallPeers: true
+  excludeLinksFromLockfile: false
+
+importers:
+
+  .:
+    dependencies:
+      '@fontsource-variable/inter':
+        specifier: ^5.2.8
+        version: 5.2.8
+      '@fontsource/ibm-plex-mono':
+        specifier: ^5.2.7
+        version: 5.2.7
+      '@sendgrid/mail':
+        specifier: ^8.1.6
+        version: 8.1.6
+      '@vercel/analytics':
+        specifier: ^1.5.0
+        version: 1.5.0(next@15.5.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0))(react@19.1.0)
+      clsx:
+        specifier: ^2.1.1
+        version: 2.1.1
+      gray-matter:
+        specifier: ^4.0.3
+        version: 4.0.3
+      next:
+        specifier: 15.5.3
+        version: 15.5.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      next-mdx-remote:
+        specifier: ^5.0.0
+        version: 5.0.0(@types/react@19.1.13)(react@19.1.0)
+      react:
+        specifier: 19.1.0
+        version: 19.1.0
+      react-dom:
+        specifier: 19.1.0
+        version: 19.1.0(react@19.1.0)
+      zod:
+        specifier: ^4.1.9
+        version: 4.1.9
+    devDependencies:
+      '@eslint/eslintrc':
+        specifier: ^3
+        version: 3.3.1
+      '@tailwindcss/postcss':
+        specifier: ^4
+        version: 4.1.13
+      '@tailwindcss/typography':
+        specifier: ^0.5.18
+        version: 0.5.18(tailwindcss@4.1.13)
+      '@types/mdx':
+        specifier: ^2.0.13
+        version: 2.0.13
+      '@types/node':
+        specifier: ^20
+        version: 20.19.17
+      '@types/react':
+        specifier: ^19
+        version: 19.1.13
+      '@types/react-dom':
+        specifier: ^19
+        version: 19.1.9(@types/react@19.1.13)
+      eslint:
+        specifier: ^9
+        version: 9.36.0(jiti@2.5.1)
+      eslint-config-next:
+        specifier: 15.5.3
+        version: 15.5.3(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+      tailwindcss:
+        specifier: ^4
+        version: 4.1.13
+      typescript:
+        specifier: ^5
+        version: 5.9.2
+
+packages:
+
+  '@alloc/quick-lru@5.2.0':
+    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
+    engines: {node: '>=10'}
+
+  '@babel/code-frame@7.27.1':
+    resolution: {integrity: sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==}
+    engines: {node: '>=6.9.0'}
+
+  '@babel/helper-validator-identifier@7.27.1':
+    resolution: {integrity: sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==}
+    engines: {node: '>=6.9.0'}
+
+  '@emnapi/core@1.5.0':
+    resolution: {integrity: sha512-sbP8GzB1WDzacS8fgNPpHlp6C9VZe+SJP3F90W9rLemaQj2PzIuTEl1qDOYQf58YIpyjViI24y9aPWCjEzY2cg==}
+
+  '@emnapi/runtime@1.5.0':
+    resolution: {integrity: sha512-97/BJ3iXHww3djw6hYIfErCZFee7qCtrneuLa20UXFCOTCfBM2cvQHjWJ2EG0s0MtdNwInarqCTz35i4wWXHsQ==}
+
+  '@emnapi/wasi-threads@1.1.0':
+    resolution: {integrity: sha512-WI0DdZ8xFSbgMjR1sFsKABJ/C5OnRrjT06JXbZKexJGrDuPTzZdDYfFlsgcCXCyf+suG5QU2e/y1Wo2V/OapLQ==}
+
+  '@eslint-community/eslint-utils@4.9.0':
+    resolution: {integrity: sha512-ayVFHdtZ+hsq1t2Dy24wCmGXGe4q9Gu3smhLYALJrr473ZH27MsnSL+LKUlimp4BWJqMDMLmPpx/Q9R3OAlL4g==}
+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
+    peerDependencies:
+      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
+
+  '@eslint-community/regexpp@4.12.1':
+    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
+    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}
+
+  '@eslint/config-array@0.21.0':
+    resolution: {integrity: sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/config-helpers@0.3.1':
+    resolution: {integrity: sha512-xR93k9WhrDYpXHORXpxVL5oHj3Era7wo6k/Wd8/IsQNnZUTzkGS29lyn3nAT05v6ltUuTFVCCYDEGfy2Or/sPA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/core@0.15.2':
+    resolution: {integrity: sha512-78Md3/Rrxh83gCxoUc0EiciuOHsIITzLy53m3d9UyiW8y9Dj2D29FeETqyKA+BRK76tnTp6RXWb3pCay8Oyomg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/eslintrc@3.3.1':
+    resolution: {integrity: sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/js@9.36.0':
+    resolution: {integrity: sha512-uhCbYtYynH30iZErszX78U+nR3pJU3RHGQ57NXy5QupD4SBVwDeU8TNBy+MjMngc1UyIW9noKqsRqfjQTBU2dw==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/object-schema@2.1.6':
+    resolution: {integrity: sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/plugin-kit@0.3.5':
+    resolution: {integrity: sha512-Z5kJ+wU3oA7MMIqVR9tyZRtjYPr4OC004Q4Rw7pgOKUOKkJfZ3O24nz3WYfGRpMDNmcOi3TwQOmgm7B7Tpii0w==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@fontsource-variable/inter@5.2.8':
+    resolution: {integrity: sha512-kOfP2D+ykbcX/P3IFnokOhVRNoTozo5/JxhAIVYLpea/UBmCQ/YWPBfWIDuBImXX/15KH+eKh4xpEUyS2sQQGQ==}
+
+  '@fontsource/ibm-plex-mono@5.2.7':
+    resolution: {integrity: sha512-MKAb8qV+CaiMQn2B0dIi1OV3565NYzp3WN5b4oT6LTkk+F0jR6j0ZN+5BKJiIhffDC3rtBULsYZE65+0018z9w==}
+
+  '@humanfs/core@0.19.1':
+    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}
+    engines: {node: '>=18.18.0'}
+
+  '@humanfs/node@0.16.7':
+    resolution: {integrity: sha512-/zUx+yOsIrG4Y43Eh2peDeKCxlRt/gET6aHfaKpuq267qXdYDFViVHfMaLyygZOnl0kGWxFIgsBy8QFuTLUXEQ==}
+    engines: {node: '>=18.18.0'}
+
+  '@humanwhocodes/module-importer@1.0.1':
+    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
+    engines: {node: '>=12.22'}
+
+  '@humanwhocodes/retry@0.4.3':
+    resolution: {integrity: sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==}
+    engines: {node: '>=18.18'}
+
+  '@img/colour@1.0.0':
+    resolution: {integrity: sha512-A5P/LfWGFSl6nsckYtjw9da+19jB8hkJ6ACTGcDfEJ0aE+l2n2El7dsVM7UVHZQ9s2lmYMWlrS21YLy2IR1LUw==}
+    engines: {node: '>=18'}
+
+  '@img/sharp-darwin-arm64@0.34.4':
+    resolution: {integrity: sha512-sitdlPzDVyvmINUdJle3TNHl+AG9QcwiAMsXmccqsCOMZNIdW2/7S26w0LyU8euiLVzFBL3dXPwVCq/ODnf2vA==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@img/sharp-darwin-x64@0.34.4':
+    resolution: {integrity: sha512-rZheupWIoa3+SOdF/IcUe1ah4ZDpKBGWcsPX6MT0lYniH9micvIU7HQkYTfrx5Xi8u+YqwLtxC/3vl8TQN6rMg==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [x64]
+    os: [darwin]
+
+  '@img/sharp-libvips-darwin-arm64@1.2.3':
+    resolution: {integrity: sha512-QzWAKo7kpHxbuHqUC28DZ9pIKpSi2ts2OJnoIGI26+HMgq92ZZ4vk8iJd4XsxN+tYfNJxzH6W62X5eTcsBymHw==}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@img/sharp-libvips-darwin-x64@1.2.3':
+    resolution: {integrity: sha512-Ju+g2xn1E2AKO6YBhxjj+ACcsPQRHT0bhpglxcEf+3uyPY+/gL8veniKoo96335ZaPo03bdDXMv0t+BBFAbmRA==}
+    cpu: [x64]
+    os: [darwin]
+
+  '@img/sharp-libvips-linux-arm64@1.2.3':
+    resolution: {integrity: sha512-I4RxkXU90cpufazhGPyVujYwfIm9Nk1QDEmiIsaPwdnm013F7RIceaCc87kAH+oUB1ezqEvC6ga4m7MSlqsJvQ==}
+    cpu: [arm64]
+    os: [linux]
+
+  '@img/sharp-libvips-linux-arm@1.2.3':
+    resolution: {integrity: sha512-x1uE93lyP6wEwGvgAIV0gP6zmaL/a0tGzJs/BIDDG0zeBhMnuUPm7ptxGhUbcGs4okDJrk4nxgrmxpib9g6HpA==}
+    cpu: [arm]
+    os: [linux]
+
+  '@img/sharp-libvips-linux-ppc64@1.2.3':
+    resolution: {integrity: sha512-Y2T7IsQvJLMCBM+pmPbM3bKT/yYJvVtLJGfCs4Sp95SjvnFIjynbjzsa7dY1fRJX45FTSfDksbTp6AGWudiyCg==}
+    cpu: [ppc64]
+    os: [linux]
+
+  '@img/sharp-libvips-linux-s390x@1.2.3':
+    resolution: {integrity: sha512-RgWrs/gVU7f+K7P+KeHFaBAJlNkD1nIZuVXdQv6S+fNA6syCcoboNjsV2Pou7zNlVdNQoQUpQTk8SWDHUA3y/w==}
+    cpu: [s390x]
+    os: [linux]
+
+  '@img/sharp-libvips-linux-x64@1.2.3':
+    resolution: {integrity: sha512-3JU7LmR85K6bBiRzSUc/Ff9JBVIFVvq6bomKE0e63UXGeRw2HPVEjoJke1Yx+iU4rL7/7kUjES4dZ/81Qjhyxg==}
+    cpu: [x64]
+    os: [linux]
+
+  '@img/sharp-libvips-linuxmusl-arm64@1.2.3':
+    resolution: {integrity: sha512-F9q83RZ8yaCwENw1GieztSfj5msz7GGykG/BA+MOUefvER69K/ubgFHNeSyUu64amHIYKGDs4sRCMzXVj8sEyw==}
+    cpu: [arm64]
+    os: [linux]
+
+  '@img/sharp-libvips-linuxmusl-x64@1.2.3':
+    resolution: {integrity: sha512-U5PUY5jbc45ANM6tSJpsgqmBF/VsL6LnxJmIf11kB7J5DctHgqm0SkuXzVWtIY90GnJxKnC/JT251TDnk1fu/g==}
+    cpu: [x64]
+    os: [linux]
+
+  '@img/sharp-linux-arm64@0.34.4':
+    resolution: {integrity: sha512-YXU1F/mN/Wu786tl72CyJjP/Ngl8mGHN1hST4BGl+hiW5jhCnV2uRVTNOcaYPs73NeT/H8Upm3y9582JVuZHrQ==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm64]
+    os: [linux]
+
+  '@img/sharp-linux-arm@0.34.4':
+    resolution: {integrity: sha512-Xyam4mlqM0KkTHYVSuc6wXRmM7LGN0P12li03jAnZ3EJWZqj83+hi8Y9UxZUbxsgsK1qOEwg7O0Bc0LjqQVtxA==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm]
+    os: [linux]
+
+  '@img/sharp-linux-ppc64@0.34.4':
+    resolution: {integrity: sha512-F4PDtF4Cy8L8hXA2p3TO6s4aDt93v+LKmpcYFLAVdkkD3hSxZzee0rh6/+94FpAynsuMpLX5h+LRsSG3rIciUQ==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [ppc64]
+    os: [linux]
+
+  '@img/sharp-linux-s390x@0.34.4':
+    resolution: {integrity: sha512-qVrZKE9Bsnzy+myf7lFKvng6bQzhNUAYcVORq2P7bDlvmF6u2sCmK2KyEQEBdYk+u3T01pVsPrkj943T1aJAsw==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [s390x]
+    os: [linux]
+
+  '@img/sharp-linux-x64@0.34.4':
+    resolution: {integrity: sha512-ZfGtcp2xS51iG79c6Vhw9CWqQC8l2Ot8dygxoDoIQPTat/Ov3qAa8qpxSrtAEAJW+UjTXc4yxCjNfxm4h6Xm2A==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [x64]
+    os: [linux]
+
+  '@img/sharp-linuxmusl-arm64@0.34.4':
+    resolution: {integrity: sha512-8hDVvW9eu4yHWnjaOOR8kHVrew1iIX+MUgwxSuH2XyYeNRtLUe4VNioSqbNkB7ZYQJj9rUTT4PyRscyk2PXFKA==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm64]
+    os: [linux]
+
+  '@img/sharp-linuxmusl-x64@0.34.4':
+    resolution: {integrity: sha512-lU0aA5L8QTlfKjpDCEFOZsTYGn3AEiO6db8W5aQDxj0nQkVrZWmN3ZP9sYKWJdtq3PWPhUNlqehWyXpYDcI9Sg==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [x64]
+    os: [linux]
+
+  '@img/sharp-wasm32@0.34.4':
+    resolution: {integrity: sha512-33QL6ZO/qpRyG7woB/HUALz28WnTMI2W1jgX3Nu2bypqLIKx/QKMILLJzJjI+SIbvXdG9fUnmrxR7vbi1sTBeA==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [wasm32]
+
+  '@img/sharp-win32-arm64@0.34.4':
+    resolution: {integrity: sha512-2Q250do/5WXTwxW3zjsEuMSv5sUU4Tq9VThWKlU2EYLm4MB7ZeMwF+SFJutldYODXF6jzc6YEOC+VfX0SZQPqA==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm64]
+    os: [win32]
+
+  '@img/sharp-win32-ia32@0.34.4':
+    resolution: {integrity: sha512-3ZeLue5V82dT92CNL6rsal6I2weKw1cYu+rGKm8fOCCtJTR2gYeUfY3FqUnIJsMUPIH68oS5jmZ0NiJ508YpEw==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [ia32]
+    os: [win32]
+
+  '@img/sharp-win32-x64@0.34.4':
+    resolution: {integrity: sha512-xIyj4wpYs8J18sVN3mSQjwrw7fKUqRw+Z5rnHNCy5fYTxigBz81u5mOMPmFumwjcn8+ld1ppptMBCLic1nz6ig==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [x64]
+    os: [win32]
+
+  '@isaacs/fs-minipass@4.0.1':
+    resolution: {integrity: sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==}
+    engines: {node: '>=18.0.0'}
+
+  '@jridgewell/gen-mapping@0.3.13':
+    resolution: {integrity: sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==}
+
+  '@jridgewell/remapping@2.3.5':
+    resolution: {integrity: sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==}
+
+  '@jridgewell/resolve-uri@3.1.2':
+    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
+    engines: {node: '>=6.0.0'}
+
+  '@jridgewell/sourcemap-codec@1.5.5':
+    resolution: {integrity: sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==}
+
+  '@jridgewell/trace-mapping@0.3.31':
+    resolution: {integrity: sha512-zzNR+SdQSDJzc8joaeP8QQoCQr8NuYx2dIIytl1QeBEZHJ9uW6hebsrYgbz8hJwUQao3TWCMtmfV8Nu1twOLAw==}
+
+  '@mdx-js/mdx@3.1.1':
+    resolution: {integrity: sha512-f6ZO2ifpwAQIpzGWaBQT2TXxPv6z3RBzQKpVftEWN78Vl/YweF1uwussDx8ECAXVtr3Rs89fKyG9YlzUs9DyGQ==}
+
+  '@mdx-js/react@3.1.1':
+    resolution: {integrity: sha512-f++rKLQgUVYDAtECQ6fn/is15GkEH9+nZPM3MS0RcxVqoTfawHvDlSCH7JbMhAM6uJ32v3eXLvLmLvjGu7PTQw==}
+    peerDependencies:
+      '@types/react': '>=16'
+      react: '>=16'
+
+  '@napi-rs/wasm-runtime@0.2.12':
+    resolution: {integrity: sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==}
+
+  '@next/env@15.5.3':
+    resolution: {integrity: sha512-RSEDTRqyihYXygx/OJXwvVupfr9m04+0vH8vyy0HfZ7keRto6VX9BbEk0J2PUk0VGy6YhklJUSrgForov5F9pw==}
+
+  '@next/eslint-plugin-next@15.5.3':
+    resolution: {integrity: sha512-SdhaKdko6dpsSr0DldkESItVrnPYB1NS2NpShCSX5lc7SSQmLZt5Mug6t2xbiuVWEVDLZSuIAoQyYVBYp0dR5g==}
+
+  '@next/swc-darwin-arm64@15.5.3':
+    resolution: {integrity: sha512-nzbHQo69+au9wJkGKTU9lP7PXv0d1J5ljFpvb+LnEomLtSbJkbZyEs6sbF3plQmiOB2l9OBtN2tNSvCH1nQ9Jg==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@next/swc-darwin-x64@15.5.3':
+    resolution: {integrity: sha512-w83w4SkOOhekJOcA5HBvHyGzgV1W/XvOfpkrxIse4uPWhYTTRwtGEM4v/jiXwNSJvfRvah0H8/uTLBKRXlef8g==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [darwin]
+
+  '@next/swc-linux-arm64-gnu@15.5.3':
+    resolution: {integrity: sha512-+m7pfIs0/yvgVu26ieaKrifV8C8yiLe7jVp9SpcIzg7XmyyNE7toC1fy5IOQozmr6kWl/JONC51osih2RyoXRw==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [linux]
+
+  '@next/swc-linux-arm64-musl@15.5.3':
+    resolution: {integrity: sha512-u3PEIzuguSenoZviZJahNLgCexGFhso5mxWCrrIMdvpZn6lkME5vc/ADZG8UUk5K1uWRy4hqSFECrON6UKQBbQ==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [linux]
+
+  '@next/swc-linux-x64-gnu@15.5.3':
+    resolution: {integrity: sha512-lDtOOScYDZxI2BENN9m0pfVPJDSuUkAD1YXSvlJF0DKwZt0WlA7T7o3wrcEr4Q+iHYGzEaVuZcsIbCps4K27sA==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [linux]
+
+  '@next/swc-linux-x64-musl@15.5.3':
+    resolution: {integrity: sha512-9vWVUnsx9PrY2NwdVRJ4dUURAQ8Su0sLRPqcCCxtX5zIQUBES12eRVHq6b70bbfaVaxIDGJN2afHui0eDm+cLg==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [linux]
+
+  '@next/swc-win32-arm64-msvc@15.5.3':
+    resolution: {integrity: sha512-1CU20FZzY9LFQigRi6jM45oJMU3KziA5/sSG+dXeVaTm661snQP6xu3ykGxxwU5sLG3sh14teO/IOEPVsQMRfA==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [win32]
+
+  '@next/swc-win32-x64-msvc@15.5.3':
+    resolution: {integrity: sha512-JMoLAq3n3y5tKXPQwCK5c+6tmwkuFDa2XAxz8Wm4+IVthdBZdZGh+lmiLUHg9f9IDwIQpUjp+ysd6OkYTyZRZw==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [win32]
+
+  '@nodelib/fs.scandir@2.1.5':
+    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
+    engines: {node: '>= 8'}
+
+  '@nodelib/fs.stat@2.0.5':
+    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
+    engines: {node: '>= 8'}
+
+  '@nodelib/fs.walk@1.2.8':
+    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
+    engines: {node: '>= 8'}
+
+  '@nolyfill/is-core-module@1.0.39':
+    resolution: {integrity: sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==}
+    engines: {node: '>=12.4.0'}
+
+  '@rtsao/scc@1.1.0':
+    resolution: {integrity: sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==}
+
+  '@rushstack/eslint-patch@1.12.0':
+    resolution: {integrity: sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==}
+
+  '@sendgrid/client@8.1.6':
+    resolution: {integrity: sha512-/BHu0hqwXNHr2aLhcXU7RmmlVqrdfrbY9KpaNj00KZHlVOVoRxRVrpOCabIB+91ISXJ6+mLM9vpaVUhK6TwBWA==}
+    engines: {node: '>=12.*'}
+
+  '@sendgrid/helpers@8.0.0':
+    resolution: {integrity: sha512-Ze7WuW2Xzy5GT5WRx+yEv89fsg/pgy3T1E3FS0QEx0/VvRmigMZ5qyVGhJz4SxomegDkzXv/i0aFPpHKN8qdAA==}
+    engines: {node: '>= 12.0.0'}
+
+  '@sendgrid/mail@8.1.6':
+    resolution: {integrity: sha512-/ZqxUvKeEztU9drOoPC/8opEPOk+jLlB2q4+xpx6HVLq6aFu3pMpalkTpAQz8XfRfpLp8O25bh6pGPcHDCYpqg==}
+    engines: {node: '>=12.*'}
+
+  '@swc/helpers@0.5.15':
+    resolution: {integrity: sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==}
+
+  '@tailwindcss/node@4.1.13':
+    resolution: {integrity: sha512-eq3ouolC1oEFOAvOMOBAmfCIqZBJuvWvvYWh5h5iOYfe1HFC6+GZ6EIL0JdM3/niGRJmnrOc+8gl9/HGUaaptw==}
+
+  '@tailwindcss/oxide-android-arm64@4.1.13':
+    resolution: {integrity: sha512-BrpTrVYyejbgGo57yc8ieE+D6VT9GOgnNdmh5Sac6+t0m+v+sKQevpFVpwX3pBrM2qKrQwJ0c5eDbtjouY/+ew==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [android]
+
+  '@tailwindcss/oxide-darwin-arm64@4.1.13':
+    resolution: {integrity: sha512-YP+Jksc4U0KHcu76UhRDHq9bx4qtBftp9ShK/7UGfq0wpaP96YVnnjFnj3ZFrUAjc5iECzODl/Ts0AN7ZPOANQ==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@tailwindcss/oxide-darwin-x64@4.1.13':
+    resolution: {integrity: sha512-aAJ3bbwrn/PQHDxCto9sxwQfT30PzyYJFG0u/BWZGeVXi5Hx6uuUOQEI2Fa43qvmUjTRQNZnGqe9t0Zntexeuw==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [darwin]
+
+  '@tailwindcss/oxide-freebsd-x64@4.1.13':
+    resolution: {integrity: sha512-Wt8KvASHwSXhKE/dJLCCWcTSVmBj3xhVhp/aF3RpAhGeZ3sVo7+NTfgiN8Vey/Fi8prRClDs6/f0KXPDTZE6nQ==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [freebsd]
+
+  '@tailwindcss/oxide-linux-arm-gnueabihf@4.1.13':
+    resolution: {integrity: sha512-mbVbcAsW3Gkm2MGwA93eLtWrwajz91aXZCNSkGTx/R5eb6KpKD5q8Ueckkh9YNboU8RH7jiv+ol/I7ZyQ9H7Bw==}
+    engines: {node: '>= 10'}
+    cpu: [arm]
+    os: [linux]
+
+  '@tailwindcss/oxide-linux-arm64-gnu@4.1.13':
+    resolution: {integrity: sha512-wdtfkmpXiwej/yoAkrCP2DNzRXCALq9NVLgLELgLim1QpSfhQM5+ZxQQF8fkOiEpuNoKLp4nKZ6RC4kmeFH0HQ==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [linux]
+
+  '@tailwindcss/oxide-linux-arm64-musl@4.1.13':
+    resolution: {integrity: sha512-hZQrmtLdhyqzXHB7mkXfq0IYbxegaqTmfa1p9MBj72WPoDD3oNOh1Lnxf6xZLY9C3OV6qiCYkO1i/LrzEdW2mg==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [linux]
+
+  '@tailwindcss/oxide-linux-x64-gnu@4.1.13':
+    resolution: {integrity: sha512-uaZTYWxSXyMWDJZNY1Ul7XkJTCBRFZ5Fo6wtjrgBKzZLoJNrG+WderJwAjPzuNZOnmdrVg260DKwXCFtJ/hWRQ==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [linux]
+
+  '@tailwindcss/oxide-linux-x64-musl@4.1.13':
+    resolution: {integrity: sha512-oXiPj5mi4Hdn50v5RdnuuIms0PVPI/EG4fxAfFiIKQh5TgQgX7oSuDWntHW7WNIi/yVLAiS+CRGW4RkoGSSgVQ==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [linux]
+
+  '@tailwindcss/oxide-wasm32-wasi@4.1.13':
+    resolution: {integrity: sha512-+LC2nNtPovtrDwBc/nqnIKYh/W2+R69FA0hgoeOn64BdCX522u19ryLh3Vf3F8W49XBcMIxSe665kwy21FkhvA==}
+    engines: {node: '>=14.0.0'}
+    cpu: [wasm32]
+    bundledDependencies:
+      - '@napi-rs/wasm-runtime'
+      - '@emnapi/core'
+      - '@emnapi/runtime'
+      - '@tybys/wasm-util'
+      - '@emnapi/wasi-threads'
+      - tslib
+
+  '@tailwindcss/oxide-win32-arm64-msvc@4.1.13':
+    resolution: {integrity: sha512-dziTNeQXtoQ2KBXmrjCxsuPk3F3CQ/yb7ZNZNA+UkNTeiTGgfeh+gH5Pi7mRncVgcPD2xgHvkFCh/MhZWSgyQg==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [win32]
+
+  '@tailwindcss/oxide-win32-x64-msvc@4.1.13':
+    resolution: {integrity: sha512-3+LKesjXydTkHk5zXX01b5KMzLV1xl2mcktBJkje7rhFUpUlYJy7IMOLqjIRQncLTa1WZZiFY/foAeB5nmaiTw==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [win32]
+
+  '@tailwindcss/oxide@4.1.13':
+    resolution: {integrity: sha512-CPgsM1IpGRa880sMbYmG1s4xhAy3xEt1QULgTJGQmZUeNgXFR7s1YxYygmJyBGtou4SyEosGAGEeYqY7R53bIA==}
+    engines: {node: '>= 10'}
+
+  '@tailwindcss/postcss@4.1.13':
+    resolution: {integrity: sha512-HLgx6YSFKJT7rJqh9oJs/TkBFhxuMOfUKSBEPYwV+t78POOBsdQ7crhZLzwcH3T0UyUuOzU/GK5pk5eKr3wCiQ==}
+
+  '@tailwindcss/typography@0.5.18':
+    resolution: {integrity: sha512-dDIgwZOlf+tVkZ7A029VvQ1+ngKATENDjMEx2N35s2yPjfTS05RWSM8ilhEWSa5DMJ6ci2Ha9WNZEd2GQjrdQg==}
+    peerDependencies:
+      tailwindcss: '>=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1'
+
+  '@tybys/wasm-util@0.10.1':
+    resolution: {integrity: sha512-9tTaPJLSiejZKx+Bmog4uSubteqTvFrVrURwkmHixBo0G4seD0zUxp98E1DzUBJxLQ3NPwXrGKDiVjwx/DpPsg==}
+
+  '@types/debug@4.1.12':
+    resolution: {integrity: sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==}
+
+  '@types/estree-jsx@1.0.5':
+    resolution: {integrity: sha512-52CcUVNFyfb1A2ALocQw/Dd1BQFNmSdkuC3BkZ6iqhdMfQz7JWOFRuJFloOzjk+6WijU56m9oKXFAXc7o3Towg==}
+
+  '@types/estree@1.0.8':
+    resolution: {integrity: sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==}
+
+  '@types/hast@3.0.4':
+    resolution: {integrity: sha512-WPs+bbQw5aCj+x6laNGWLH3wviHtoCv/P3+otBhbOhJgG8qtpdAMlTCxLtsTWA7LH1Oh/bFCHsBn0TPS5m30EQ==}
+
+  '@types/json-schema@7.0.15':
+    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
+
+  '@types/json5@0.0.29':
+    resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}
+
+  '@types/mdast@4.0.4':
+    resolution: {integrity: sha512-kGaNbPh1k7AFzgpud/gMdvIm5xuECykRR+JnWKQno9TAXVa6WIVCGTPvYGekIDL4uwCZQSYbUxNBSb1aUo79oA==}
+
+  '@types/mdx@2.0.13':
+    resolution: {integrity: sha512-+OWZQfAYyio6YkJb3HLxDrvnx6SWWDbC0zVPfBRzUk0/nqoDyf6dNxQi3eArPe8rJ473nobTMQ/8Zk+LxJ+Yuw==}
+
+  '@types/ms@2.1.0':
+    resolution: {integrity: sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==}
+
+  '@types/node@20.19.17':
+    resolution: {integrity: sha512-gfehUI8N1z92kygssiuWvLiwcbOB3IRktR6hTDgJlXMYh5OvkPSRmgfoBUmfZt+vhwJtX7v1Yw4KvvAf7c5QKQ==}
+
+  '@types/react-dom@19.1.9':
+    resolution: {integrity: sha512-qXRuZaOsAdXKFyOhRBg6Lqqc0yay13vN7KrIg4L7N4aaHN68ma9OK3NE1BoDFgFOTfM7zg+3/8+2n8rLUH3OKQ==}
+    peerDependencies:
+      '@types/react': ^19.0.0
+
+  '@types/react@19.1.13':
+    resolution: {integrity: sha512-hHkbU/eoO3EG5/MZkuFSKmYqPbSVk5byPFa3e7y/8TybHiLMACgI8seVYlicwk7H5K/rI2px9xrQp/C+AUDTiQ==}
+
+  '@types/unist@2.0.11':
+    resolution: {integrity: sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==}
+
+  '@types/unist@3.0.3':
+    resolution: {integrity: sha512-ko/gIFJRv177XgZsZcBwnqJN5x/Gien8qNOn0D5bQU/zAzVf9Zt3BlcUiLqhV9y4ARk0GbT3tnUiPNgnTXzc/Q==}
+
+  '@typescript-eslint/eslint-plugin@8.44.0':
+    resolution: {integrity: sha512-EGDAOGX+uwwekcS0iyxVDmRV9HX6FLSM5kzrAToLTsr9OWCIKG/y3lQheCq18yZ5Xh78rRKJiEpP0ZaCs4ryOQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      '@typescript-eslint/parser': ^8.44.0
+      eslint: ^8.57.0 || ^9.0.0
+      typescript: '>=4.8.4 <6.0.0'
+
+  '@typescript-eslint/parser@8.44.0':
+    resolution: {integrity: sha512-VGMpFQGUQWYT9LfnPcX8ouFojyrZ/2w3K5BucvxL/spdNehccKhB4jUyB1yBCXpr2XFm0jkECxgrpXBW2ipoAw==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      eslint: ^8.57.0 || ^9.0.0
+      typescript: '>=4.8.4 <6.0.0'
+
+  '@typescript-eslint/project-service@8.44.0':
+    resolution: {integrity: sha512-ZeaGNraRsq10GuEohKTo4295Z/SuGcSq2LzfGlqiuEvfArzo/VRrT0ZaJsVPuKZ55lVbNk8U6FcL+ZMH8CoyVA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      typescript: '>=4.8.4 <6.0.0'
+
+  '@typescript-eslint/scope-manager@8.44.0':
+    resolution: {integrity: sha512-87Jv3E+al8wpD+rIdVJm/ItDBe/Im09zXIjFoipOjr5gHUhJmTzfFLuTJ/nPTMc2Srsroy4IBXwcTCHyRR7KzA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@typescript-eslint/tsconfig-utils@8.44.0':
+    resolution: {integrity: sha512-x5Y0+AuEPqAInc6yd0n5DAcvtoQ/vyaGwuX5HE9n6qAefk1GaedqrLQF8kQGylLUb9pnZyLf+iEiL9fr8APDtQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      typescript: '>=4.8.4 <6.0.0'
+
+  '@typescript-eslint/type-utils@8.44.0':
+    resolution: {integrity: sha512-9cwsoSxJ8Sak67Be/hD2RNt/fsqmWnNE1iHohG8lxqLSNY8xNfyY7wloo5zpW3Nu9hxVgURevqfcH6vvKCt6yg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      eslint: ^8.57.0 || ^9.0.0
+      typescript: '>=4.8.4 <6.0.0'
+
+  '@typescript-eslint/types@8.44.0':
+    resolution: {integrity: sha512-ZSl2efn44VsYM0MfDQe68RKzBz75NPgLQXuGypmym6QVOWL5kegTZuZ02xRAT9T+onqvM6T8CdQk0OwYMB6ZvA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@typescript-eslint/typescript-estree@8.44.0':
+    resolution: {integrity: sha512-lqNj6SgnGcQZwL4/SBJ3xdPEfcBuhCG8zdcwCPgYcmiPLgokiNDKlbPzCwEwu7m279J/lBYWtDYL+87OEfn8Jw==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      typescript: '>=4.8.4 <6.0.0'
+
+  '@typescript-eslint/utils@8.44.0':
+    resolution: {integrity: sha512-nktOlVcg3ALo0mYlV+L7sWUD58KG4CMj1rb2HUVOO4aL3K/6wcD+NERqd0rrA5Vg06b42YhF6cFxeixsp9Riqg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      eslint: ^8.57.0 || ^9.0.0
+      typescript: '>=4.8.4 <6.0.0'
+
+  '@typescript-eslint/visitor-keys@8.44.0':
+    resolution: {integrity: sha512-zaz9u8EJ4GBmnehlrpoKvj/E3dNbuQ7q0ucyZImm3cLqJ8INTc970B1qEqDX/Rzq65r3TvVTN7kHWPBoyW7DWw==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@ungap/structured-clone@1.3.0':
+    resolution: {integrity: sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==}
+
+  '@unrs/resolver-binding-android-arm-eabi@1.11.1':
+    resolution: {integrity: sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==}
+    cpu: [arm]
+    os: [android]
+
+  '@unrs/resolver-binding-android-arm64@1.11.1':
+    resolution: {integrity: sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==}
+    cpu: [arm64]
+    os: [android]
+
+  '@unrs/resolver-binding-darwin-arm64@1.11.1':
+    resolution: {integrity: sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@unrs/resolver-binding-darwin-x64@1.11.1':
+    resolution: {integrity: sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==}
+    cpu: [x64]
+    os: [darwin]
+
+  '@unrs/resolver-binding-freebsd-x64@1.11.1':
+    resolution: {integrity: sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==}
+    cpu: [x64]
+    os: [freebsd]
+
+  '@unrs/resolver-binding-linux-arm-gnueabihf@1.11.1':
+    resolution: {integrity: sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==}
+    cpu: [arm]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-arm-musleabihf@1.11.1':
+    resolution: {integrity: sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==}
+    cpu: [arm]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-arm64-gnu@1.11.1':
+    resolution: {integrity: sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==}
+    cpu: [arm64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-arm64-musl@1.11.1':
+    resolution: {integrity: sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==}
+    cpu: [arm64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-ppc64-gnu@1.11.1':
+    resolution: {integrity: sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==}
+    cpu: [ppc64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-riscv64-gnu@1.11.1':
+    resolution: {integrity: sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==}
+    cpu: [riscv64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-riscv64-musl@1.11.1':
+    resolution: {integrity: sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==}
+    cpu: [riscv64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-s390x-gnu@1.11.1':
+    resolution: {integrity: sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==}
+    cpu: [s390x]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-x64-gnu@1.11.1':
+    resolution: {integrity: sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==}
+    cpu: [x64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-x64-musl@1.11.1':
+    resolution: {integrity: sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==}
+    cpu: [x64]
+    os: [linux]
+
+  '@unrs/resolver-binding-wasm32-wasi@1.11.1':
+    resolution: {integrity: sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==}
+    engines: {node: '>=14.0.0'}
+    cpu: [wasm32]
+
+  '@unrs/resolver-binding-win32-arm64-msvc@1.11.1':
+    resolution: {integrity: sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==}
+    cpu: [arm64]
+    os: [win32]
+
+  '@unrs/resolver-binding-win32-ia32-msvc@1.11.1':
+    resolution: {integrity: sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==}
+    cpu: [ia32]
+    os: [win32]
+
+  '@unrs/resolver-binding-win32-x64-msvc@1.11.1':
+    resolution: {integrity: sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==}
+    cpu: [x64]
+    os: [win32]
+
+  '@vercel/analytics@1.5.0':
+    resolution: {integrity: sha512-MYsBzfPki4gthY5HnYN7jgInhAZ7Ac1cYDoRWFomwGHWEX7odTEzbtg9kf/QSo7XEsEAqlQugA6gJ2WS2DEa3g==}
+    peerDependencies:
+      '@remix-run/react': ^2
+      '@sveltejs/kit': ^1 || ^2
+      next: '>= 13'
+      react: ^18 || ^19 || ^19.0.0-rc
+      svelte: '>= 4'
+      vue: ^3
+      vue-router: ^4
+    peerDependenciesMeta:
+      '@remix-run/react':
+        optional: true
+      '@sveltejs/kit':
+        optional: true
+      next:
+        optional: true
+      react:
+        optional: true
+      svelte:
+        optional: true
+      vue:
+        optional: true
+      vue-router:
+        optional: true
+
+  acorn-jsx@5.3.2:
+    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
+    peerDependencies:
+      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
+
+  acorn@8.15.0:
+    resolution: {integrity: sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==}
+    engines: {node: '>=0.4.0'}
+    hasBin: true
+
+  ajv@6.12.6:
+    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}
+
+  ansi-styles@4.3.0:
+    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
+    engines: {node: '>=8'}
+
+  argparse@1.0.10:
+    resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}
+
+  argparse@2.0.1:
+    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}
+
+  aria-query@5.3.2:
+    resolution: {integrity: sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==}
+    engines: {node: '>= 0.4'}
+
+  array-buffer-byte-length@1.0.2:
+    resolution: {integrity: sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==}
+    engines: {node: '>= 0.4'}
+
+  array-includes@3.1.9:
+    resolution: {integrity: sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.findlast@1.2.5:
+    resolution: {integrity: sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.findlastindex@1.2.6:
+    resolution: {integrity: sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.flat@1.3.3:
+    resolution: {integrity: sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.flatmap@1.3.3:
+    resolution: {integrity: sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.tosorted@1.1.4:
+    resolution: {integrity: sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==}
+    engines: {node: '>= 0.4'}
+
+  arraybuffer.prototype.slice@1.0.4:
+    resolution: {integrity: sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==}
+    engines: {node: '>= 0.4'}
+
+  ast-types-flow@0.0.8:
+    resolution: {integrity: sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==}
+
+  astring@1.9.0:
+    resolution: {integrity: sha512-LElXdjswlqjWrPpJFg1Fx4wpkOCxj1TDHlSV4PlaRxHGWko024xICaa97ZkMfs6DRKlCguiAI+rbXv5GWwXIkg==}
+    hasBin: true
+
+  async-function@1.0.0:
+    resolution: {integrity: sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==}
+    engines: {node: '>= 0.4'}
+
+  asynckit@0.4.0:
+    resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}
+
+  available-typed-arrays@1.0.7:
+    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
+    engines: {node: '>= 0.4'}
+
+  axe-core@4.10.3:
+    resolution: {integrity: sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==}
+    engines: {node: '>=4'}
+
+  axios@1.12.2:
+    resolution: {integrity: sha512-vMJzPewAlRyOgxV2dU0Cuz2O8zzzx9VYtbJOaBgXFeLc4IV/Eg50n4LowmehOOR61S8ZMpc2K5Sa7g6A4jfkUw==}
+
+  axobject-query@4.1.0:
+    resolution: {integrity: sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==}
+    engines: {node: '>= 0.4'}
+
+  bail@2.0.2:
+    resolution: {integrity: sha512-0xO6mYd7JB2YesxDKplafRpsiOzPt9V02ddPCLbY1xYGPOX24NTyN50qnUxgCPcSoYMhKpAuBTjQoRZCAkUDRw==}
+
+  balanced-match@1.0.2:
+    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
+
+  brace-expansion@1.1.12:
+    resolution: {integrity: sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==}
+
+  brace-expansion@2.0.2:
+    resolution: {integrity: sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==}
+
+  braces@3.0.3:
+    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
+    engines: {node: '>=8'}
+
+  call-bind-apply-helpers@1.0.2:
+    resolution: {integrity: sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==}
+    engines: {node: '>= 0.4'}
+
+  call-bind@1.0.8:
+    resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}
+    engines: {node: '>= 0.4'}
+
+  call-bound@1.0.4:
+    resolution: {integrity: sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==}
+    engines: {node: '>= 0.4'}
+
+  callsites@3.1.0:
+    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
+    engines: {node: '>=6'}
+
+  caniuse-lite@1.0.30001743:
+    resolution: {integrity: sha512-e6Ojr7RV14Un7dz6ASD0aZDmQPT/A+eZU+nuTNfjqmRrmkmQlnTNWH0SKmqagx9PeW87UVqapSurtAXifmtdmw==}
+
+  ccount@2.0.1:
+    resolution: {integrity: sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==}
+
+  chalk@4.1.2:
+    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
+    engines: {node: '>=10'}
+
+  character-entities-html4@2.1.0:
+    resolution: {integrity: sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==}
+
+  character-entities-legacy@3.0.0:
+    resolution: {integrity: sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==}
+
+  character-entities@2.0.2:
+    resolution: {integrity: sha512-shx7oQ0Awen/BRIdkjkvz54PnEEI/EjwXDSIZp86/KKdbafHh1Df/RYGBhn4hbe2+uKC9FnT5UCEdyPz3ai9hQ==}
+
+  character-reference-invalid@2.0.1:
+    resolution: {integrity: sha512-iBZ4F4wRbyORVsu0jPV7gXkOsGYjGHPmAyv+HiHG8gi5PtC9KI2j1+v8/tlibRvjoWX027ypmG/n0HtO5t7unw==}
+
+  chownr@3.0.0:
+    resolution: {integrity: sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==}
+    engines: {node: '>=18'}
+
+  client-only@0.0.1:
+    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}
+
+  clsx@2.1.1:
+    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}
+    engines: {node: '>=6'}
+
+  collapse-white-space@2.1.0:
+    resolution: {integrity: sha512-loKTxY1zCOuG4j9f6EPnuyyYkf58RnhhWTvRoZEokgB+WbdXehfjFviyOVYkqzEWz1Q5kRiZdBYS5SwxbQYwzw==}
+
+  color-convert@2.0.1:
+    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
+    engines: {node: '>=7.0.0'}
+
+  color-name@1.1.4:
+    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}
+
+  combined-stream@1.0.8:
+    resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}
+    engines: {node: '>= 0.8'}
+
+  comma-separated-tokens@2.0.3:
+    resolution: {integrity: sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==}
+
+  concat-map@0.0.1:
+    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}
+
+  cross-spawn@7.0.6:
+    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
+    engines: {node: '>= 8'}
+
+  cssesc@3.0.0:
+    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
+    engines: {node: '>=4'}
+    hasBin: true
+
+  csstype@3.1.3:
+    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}
+
+  damerau-levenshtein@1.0.8:
+    resolution: {integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==}
+
+  data-view-buffer@1.0.2:
+    resolution: {integrity: sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==}
+    engines: {node: '>= 0.4'}
+
+  data-view-byte-length@1.0.2:
+    resolution: {integrity: sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==}
+    engines: {node: '>= 0.4'}
+
+  data-view-byte-offset@1.0.1:
+    resolution: {integrity: sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==}
+    engines: {node: '>= 0.4'}
+
+  debug@3.2.7:
+    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}
+    peerDependencies:
+      supports-color: '*'
+    peerDependenciesMeta:
+      supports-color:
+        optional: true
+
+  debug@4.4.3:
+    resolution: {integrity: sha512-RGwwWnwQvkVfavKVt22FGLw+xYSdzARwm0ru6DhTVA3umU5hZc28V3kO4stgYryrTlLpuvgI9GiijltAjNbcqA==}
+    engines: {node: '>=6.0'}
+    peerDependencies:
+      supports-color: '*'
+    peerDependenciesMeta:
+      supports-color:
+        optional: true
+
+  decode-named-character-reference@1.2.0:
+    resolution: {integrity: sha512-c6fcElNV6ShtZXmsgNgFFV5tVX2PaV4g+MOAkb8eXHvn6sryJBrZa9r0zV6+dtTyoCKxtDy5tyQ5ZwQuidtd+Q==}
+
+  deep-is@0.1.4:
+    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}
+
+  deepmerge@4.3.1:
+    resolution: {integrity: sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==}
+    engines: {node: '>=0.10.0'}
+
+  define-data-property@1.1.4:
+    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
+    engines: {node: '>= 0.4'}
+
+  define-properties@1.2.1:
+    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
+    engines: {node: '>= 0.4'}
+
+  delayed-stream@1.0.0:
+    resolution: {integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==}
+    engines: {node: '>=0.4.0'}
+
+  dequal@2.0.3:
+    resolution: {integrity: sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==}
+    engines: {node: '>=6'}
+
+  detect-libc@2.1.0:
+    resolution: {integrity: sha512-vEtk+OcP7VBRtQZ1EJ3bdgzSfBjgnEalLTp5zjJrS+2Z1w2KZly4SBdac/WDU3hhsNAZ9E8SC96ME4Ey8MZ7cg==}
+    engines: {node: '>=8'}
+
+  devlop@1.1.0:
+    resolution: {integrity: sha512-RWmIqhcFf1lRYBvNmr7qTNuyCt/7/ns2jbpp1+PalgE/rDQcBT0fioSMUpJ93irlUhC5hrg4cYqe6U+0ImW0rA==}
+
+  doctrine@2.1.0:
+    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}
+    engines: {node: '>=0.10.0'}
+
+  dunder-proto@1.0.1:
+    resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}
+    engines: {node: '>= 0.4'}
+
+  emoji-regex@9.2.2:
+    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}
+
+  enhanced-resolve@5.18.3:
+    resolution: {integrity: sha512-d4lC8xfavMeBjzGr2vECC3fsGXziXZQyJxD868h2M/mBI3PwAuODxAkLkq5HYuvrPYcUtiLzsTo8U3PgX3Ocww==}
+    engines: {node: '>=10.13.0'}
+
+  es-abstract@1.24.0:
+    resolution: {integrity: sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==}
+    engines: {node: '>= 0.4'}
+
+  es-define-property@1.0.1:
+    resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}
+    engines: {node: '>= 0.4'}
+
+  es-errors@1.3.0:
+    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
+    engines: {node: '>= 0.4'}
+
+  es-iterator-helpers@1.2.1:
+    resolution: {integrity: sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==}
+    engines: {node: '>= 0.4'}
+
+  es-object-atoms@1.1.1:
+    resolution: {integrity: sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==}
+    engines: {node: '>= 0.4'}
+
+  es-set-tostringtag@2.1.0:
+    resolution: {integrity: sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==}
+    engines: {node: '>= 0.4'}
+
+  es-shim-unscopables@1.1.0:
+    resolution: {integrity: sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==}
+    engines: {node: '>= 0.4'}
+
+  es-to-primitive@1.3.0:
+    resolution: {integrity: sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==}
+    engines: {node: '>= 0.4'}
+
+  esast-util-from-estree@2.0.0:
+    resolution: {integrity: sha512-4CyanoAudUSBAn5K13H4JhsMH6L9ZP7XbLVe/dKybkxMO7eDyLsT8UHl9TRNrU2Gr9nz+FovfSIjuXWJ81uVwQ==}
+
+  esast-util-from-js@2.0.1:
+    resolution: {integrity: sha512-8Ja+rNJ0Lt56Pcf3TAmpBZjmx8ZcK5Ts4cAzIOjsjevg9oSXJnl6SUQ2EevU8tv3h6ZLWmoKL5H4fgWvdvfETw==}
+
+  escape-string-regexp@4.0.0:
+    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
+    engines: {node: '>=10'}
+
+  eslint-config-next@15.5.3:
+    resolution: {integrity: sha512-e6j+QhQFOr5pfsc8VJbuTD9xTXJaRvMHYjEeLPA2pFkheNlgPLCkxdvhxhfuM4KGcqSZj2qEnpHisdTVs3BxuQ==}
+    peerDependencies:
+      eslint: ^7.23.0 || ^8.0.0 || ^9.0.0
+      typescript: '>=3.3.1'
+    peerDependenciesMeta:
+      typescript:
+        optional: true
+
+  eslint-import-resolver-node@0.3.9:
+    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}
+
+  eslint-import-resolver-typescript@3.10.1:
+    resolution: {integrity: sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==}
+    engines: {node: ^14.18.0 || >=16.0.0}
+    peerDependencies:
+      eslint: '*'
+      eslint-plugin-import: '*'
+      eslint-plugin-import-x: '*'
+    peerDependenciesMeta:
+      eslint-plugin-import:
+        optional: true
+      eslint-plugin-import-x:
+        optional: true
+
+  eslint-module-utils@2.12.1:
+    resolution: {integrity: sha512-L8jSWTze7K2mTg0vos/RuLRS5soomksDPoJLXIslC7c8Wmut3bx7CPpJijDcBZtxQ5lrbUdM+s0OlNbz0DCDNw==}
+    engines: {node: '>=4'}
+    peerDependencies:
+      '@typescript-eslint/parser': '*'
+      eslint: '*'
+      eslint-import-resolver-node: '*'
+      eslint-import-resolver-typescript: '*'
+      eslint-import-resolver-webpack: '*'
+    peerDependenciesMeta:
+      '@typescript-eslint/parser':
+        optional: true
+      eslint:
+        optional: true
+      eslint-import-resolver-node:
+        optional: true
+      eslint-import-resolver-typescript:
+        optional: true
+      eslint-import-resolver-webpack:
+        optional: true
+
+  eslint-plugin-import@2.32.0:
+    resolution: {integrity: sha512-whOE1HFo/qJDyX4SnXzP4N6zOWn79WhnCUY/iDR0mPfQZO8wcYE4JClzI2oZrhBnnMUCBCHZhO6VQyoBU95mZA==}
+    engines: {node: '>=4'}
+    peerDependencies:
+      '@typescript-eslint/parser': '*'
+      eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9
+    peerDependenciesMeta:
+      '@typescript-eslint/parser':
+        optional: true
+
+  eslint-plugin-jsx-a11y@6.10.2:
+    resolution: {integrity: sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==}
+    engines: {node: '>=4.0'}
+    peerDependencies:
+      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9
+
+  eslint-plugin-react-hooks@5.2.0:
+    resolution: {integrity: sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==}
+    engines: {node: '>=10'}
+    peerDependencies:
+      eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0
+
+  eslint-plugin-react@7.37.5:
+    resolution: {integrity: sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==}
+    engines: {node: '>=4'}
+    peerDependencies:
+      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7
+
+  eslint-scope@8.4.0:
+    resolution: {integrity: sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  eslint-visitor-keys@3.4.3:
+    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
+
+  eslint-visitor-keys@4.2.1:
+    resolution: {integrity: sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  eslint@9.36.0:
+    resolution: {integrity: sha512-hB4FIzXovouYzwzECDcUkJ4OcfOEkXTv2zRY6B9bkwjx/cprAq0uvm1nl7zvQ0/TsUk0zQiN4uPfJpB9m+rPMQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    hasBin: true
+    peerDependencies:
+      jiti: '*'
+    peerDependenciesMeta:
+      jiti:
+        optional: true
+
+  espree@10.4.0:
+    resolution: {integrity: sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  esprima@4.0.1:
+    resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
+    engines: {node: '>=4'}
+    hasBin: true
+
+  esquery@1.6.0:
+    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}
+    engines: {node: '>=0.10'}
+
+  esrecurse@4.3.0:
+    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
+    engines: {node: '>=4.0'}
+
+  estraverse@5.3.0:
+    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
+    engines: {node: '>=4.0'}
+
+  estree-util-attach-comments@3.0.0:
+    resolution: {integrity: sha512-cKUwm/HUcTDsYh/9FgnuFqpfquUbwIqwKM26BVCGDPVgvaCl/nDCCjUfiLlx6lsEZ3Z4RFxNbOQ60pkaEwFxGw==}
+
+  estree-util-build-jsx@3.0.1:
+    resolution: {integrity: sha512-8U5eiL6BTrPxp/CHbs2yMgP8ftMhR5ww1eIKoWRMlqvltHF8fZn5LRDvTKuxD3DUn+shRbLGqXemcP51oFCsGQ==}
+
+  estree-util-is-identifier-name@3.0.0:
+    resolution: {integrity: sha512-hFtqIDZTIUZ9BXLb8y4pYGyk6+wekIivNVTcmvk8NoOh+VeRn5y6cEHzbURrWbfp1fIqdVipilzj+lfaadNZmg==}
+
+  estree-util-scope@1.0.0:
+    resolution: {integrity: sha512-2CAASclonf+JFWBNJPndcOpA8EMJwa0Q8LUFJEKqXLW6+qBvbFZuF5gItbQOs/umBUkjviCSDCbBwU2cXbmrhQ==}
+
+  estree-util-to-js@2.0.0:
+    resolution: {integrity: sha512-WDF+xj5rRWmD5tj6bIqRi6CkLIXbbNQUcxQHzGysQzvHmdYG2G7p/Tf0J0gpxGgkeMZNTIjT/AoSvC9Xehcgdg==}
+
+  estree-util-visit@2.0.0:
+    resolution: {integrity: sha512-m5KgiH85xAhhW8Wta0vShLcUvOsh3LLPI2YVwcbio1l7E09NTLL1EyMZFM1OyWowoH0skScNbhOPl4kcBgzTww==}
+
+  estree-walker@3.0.3:
+    resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}
+
+  esutils@2.0.3:
+    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
+    engines: {node: '>=0.10.0'}
+
+  extend-shallow@2.0.1:
+    resolution: {integrity: sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==}
+    engines: {node: '>=0.10.0'}
+
+  extend@3.0.2:
+    resolution: {integrity: sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==}
+
+  fast-deep-equal@3.1.3:
+    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
+
+  fast-glob@3.3.1:
+    resolution: {integrity: sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==}
+    engines: {node: '>=8.6.0'}
+
+  fast-glob@3.3.3:
+    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}
+    engines: {node: '>=8.6.0'}
+
+  fast-json-stable-stringify@2.1.0:
+    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}
+
+  fast-levenshtein@2.0.6:
+    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
+
+  fastq@1.19.1:
+    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}
+
+  fdir@6.5.0:
+    resolution: {integrity: sha512-tIbYtZbucOs0BRGqPJkshJUYdL+SDH7dVM8gjy+ERp3WAUjLEFJE+02kanyHtwjWOnwrKYBiwAmM0p4kLJAnXg==}
+    engines: {node: '>=12.0.0'}
+    peerDependencies:
+      picomatch: ^3 || ^4
+    peerDependenciesMeta:
+      picomatch:
+        optional: true
+
+  file-entry-cache@8.0.0:
+    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}
+    engines: {node: '>=16.0.0'}
+
+  fill-range@7.1.1:
+    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
+    engines: {node: '>=8'}
+
+  find-up@5.0.0:
+    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
+    engines: {node: '>=10'}
+
+  flat-cache@4.0.1:
+    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}
+    engines: {node: '>=16'}
+
+  flatted@3.3.3:
+    resolution: {integrity: sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==}
+
+  follow-redirects@1.15.11:
+    resolution: {integrity: sha512-deG2P0JfjrTxl50XGCDyfI97ZGVCxIpfKYmfyrQ54n5FO/0gfIES8C/Psl6kWVDolizcaaxZJnTS0QSMxvnsBQ==}
+    engines: {node: '>=4.0'}
+    peerDependencies:
+      debug: '*'
+    peerDependenciesMeta:
+      debug:
+        optional: true
+
+  for-each@0.3.5:
+    resolution: {integrity: sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==}
+    engines: {node: '>= 0.4'}
+
+  form-data@4.0.4:
+    resolution: {integrity: sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==}
+    engines: {node: '>= 6'}
+
+  function-bind@1.1.2:
+    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}
+
+  function.prototype.name@1.1.8:
+    resolution: {integrity: sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==}
+    engines: {node: '>= 0.4'}
+
+  functions-have-names@1.2.3:
+    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}
+
+  get-intrinsic@1.3.0:
+    resolution: {integrity: sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==}
+    engines: {node: '>= 0.4'}
+
+  get-proto@1.0.1:
+    resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}
+    engines: {node: '>= 0.4'}
+
+  get-symbol-description@1.1.0:
+    resolution: {integrity: sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==}
+    engines: {node: '>= 0.4'}
+
+  get-tsconfig@4.10.1:
+    resolution: {integrity: sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==}
+
+  glob-parent@5.1.2:
+    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
+    engines: {node: '>= 6'}
+
+  glob-parent@6.0.2:
+    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
+    engines: {node: '>=10.13.0'}
+
+  globals@14.0.0:
+    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}
+    engines: {node: '>=18'}
+
+  globalthis@1.0.4:
+    resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}
+    engines: {node: '>= 0.4'}
+
+  gopd@1.2.0:
+    resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}
+    engines: {node: '>= 0.4'}
+
+  graceful-fs@4.2.11:
+    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}
+
+  graphemer@1.4.0:
+    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}
+
+  gray-matter@4.0.3:
+    resolution: {integrity: sha512-5v6yZd4JK3eMI3FqqCouswVqwugaA9r4dNZB1wwcmrD02QkV5H0y7XBQW8QwQqEaZY1pM9aqORSORhJRdNK44Q==}
+    engines: {node: '>=6.0'}
+
+  has-bigints@1.1.0:
+    resolution: {integrity: sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==}
+    engines: {node: '>= 0.4'}
+
+  has-flag@4.0.0:
+    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
+    engines: {node: '>=8'}
+
+  has-property-descriptors@1.0.2:
+    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}
+
+  has-proto@1.2.0:
+    resolution: {integrity: sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==}
+    engines: {node: '>= 0.4'}
+
+  has-symbols@1.1.0:
+    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}
+    engines: {node: '>= 0.4'}
+
+  has-tostringtag@1.0.2:
+    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
+    engines: {node: '>= 0.4'}
+
+  hasown@2.0.2:
+    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
+    engines: {node: '>= 0.4'}
+
+  hast-util-to-estree@3.1.3:
+    resolution: {integrity: sha512-48+B/rJWAp0jamNbAAf9M7Uf//UVqAoMmgXhBdxTDJLGKY+LRnZ99qcG+Qjl5HfMpYNzS5v4EAwVEF34LeAj7w==}
+
+  hast-util-to-jsx-runtime@2.3.6:
+    resolution: {integrity: sha512-zl6s8LwNyo1P9uw+XJGvZtdFF1GdAkOg8ujOw+4Pyb76874fLps4ueHXDhXWdk6YHQ6OgUtinliG7RsYvCbbBg==}
+
+  hast-util-whitespace@3.0.0:
+    resolution: {integrity: sha512-88JUN06ipLwsnv+dVn+OIYOvAuvBMy/Qoi6O7mQHxdPXpjy+Cd6xRkWwux7DKO+4sYILtLBRIKgsdpS2gQc7qw==}
+
+  ignore@5.3.2:
+    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
+    engines: {node: '>= 4'}
+
+  ignore@7.0.5:
+    resolution: {integrity: sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==}
+    engines: {node: '>= 4'}
+
+  import-fresh@3.3.1:
+    resolution: {integrity: sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==}
+    engines: {node: '>=6'}
+
+  imurmurhash@0.1.4:
+    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
+    engines: {node: '>=0.8.19'}
+
+  inline-style-parser@0.2.4:
+    resolution: {integrity: sha512-0aO8FkhNZlj/ZIbNi7Lxxr12obT7cL1moPfE4tg1LkX7LlLfC6DeX4l2ZEud1ukP9jNQyNnfzQVqwbwmAATY4Q==}
+
+  internal-slot@1.1.0:
+    resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}
+    engines: {node: '>= 0.4'}
+
+  is-alphabetical@2.0.1:
+    resolution: {integrity: sha512-FWyyY60MeTNyeSRpkM2Iry0G9hpr7/9kD40mD/cGQEuilcZYS4okz8SN2Q6rLCJ8gbCt6fN+rC+6tMGS99LaxQ==}
+
+  is-alphanumerical@2.0.1:
+    resolution: {integrity: sha512-hmbYhX/9MUMF5uh7tOXyK/n0ZvWpad5caBA17GsC6vyuCqaWliRG5K1qS9inmUhEMaOBIW7/whAnSwveW/LtZw==}
+
+  is-array-buffer@3.0.5:
+    resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}
+    engines: {node: '>= 0.4'}
+
+  is-async-function@2.1.1:
+    resolution: {integrity: sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==}
+    engines: {node: '>= 0.4'}
+
+  is-bigint@1.1.0:
+    resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}
+    engines: {node: '>= 0.4'}
+
+  is-boolean-object@1.2.2:
+    resolution: {integrity: sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==}
+    engines: {node: '>= 0.4'}
+
+  is-bun-module@2.0.0:
+    resolution: {integrity: sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==}
+
+  is-callable@1.2.7:
+    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
+    engines: {node: '>= 0.4'}
+
+  is-core-module@2.16.1:
+    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}
+    engines: {node: '>= 0.4'}
+
+  is-data-view@1.0.2:
+    resolution: {integrity: sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==}
+    engines: {node: '>= 0.4'}
+
+  is-date-object@1.1.0:
+    resolution: {integrity: sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==}
+    engines: {node: '>= 0.4'}
+
+  is-decimal@2.0.1:
+    resolution: {integrity: sha512-AAB9hiomQs5DXWcRB1rqsxGUstbRroFOPPVAomNk/3XHR5JyEZChOyTWe2oayKnsSsr/kcGqF+z6yuH6HHpN0A==}
+
+  is-extendable@0.1.1:
+    resolution: {integrity: sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==}
+    engines: {node: '>=0.10.0'}
+
+  is-extglob@2.1.1:
+    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
+    engines: {node: '>=0.10.0'}
+
+  is-finalizationregistry@1.1.1:
+    resolution: {integrity: sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==}
+    engines: {node: '>= 0.4'}
+
+  is-generator-function@1.1.0:
+    resolution: {integrity: sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==}
+    engines: {node: '>= 0.4'}
+
+  is-glob@4.0.3:
+    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
+    engines: {node: '>=0.10.0'}
+
+  is-hexadecimal@2.0.1:
+    resolution: {integrity: sha512-DgZQp241c8oO6cA1SbTEWiXeoxV42vlcJxgH+B3hi1AiqqKruZR3ZGF8In3fj4+/y/7rHvlOZLZtgJ/4ttYGZg==}
+
+  is-map@2.0.3:
+    resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}
+    engines: {node: '>= 0.4'}
+
+  is-negative-zero@2.0.3:
+    resolution: {integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==}
+    engines: {node: '>= 0.4'}
+
+  is-number-object@1.1.1:
+    resolution: {integrity: sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==}
+    engines: {node: '>= 0.4'}
+
+  is-number@7.0.0:
+    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
+    engines: {node: '>=0.12.0'}
+
+  is-plain-obj@4.1.0:
+    resolution: {integrity: sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==}
+    engines: {node: '>=12'}
+
+  is-regex@1.2.1:
+    resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}
+    engines: {node: '>= 0.4'}
+
+  is-set@2.0.3:
+    resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}
+    engines: {node: '>= 0.4'}
+
+  is-shared-array-buffer@1.0.4:
+    resolution: {integrity: sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==}
+    engines: {node: '>= 0.4'}
+
+  is-string@1.1.1:
+    resolution: {integrity: sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==}
+    engines: {node: '>= 0.4'}
+
+  is-symbol@1.1.1:
+    resolution: {integrity: sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==}
+    engines: {node: '>= 0.4'}
+
+  is-typed-array@1.1.15:
+    resolution: {integrity: sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==}
+    engines: {node: '>= 0.4'}
+
+  is-weakmap@2.0.2:
+    resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}
+    engines: {node: '>= 0.4'}
+
+  is-weakref@1.1.1:
+    resolution: {integrity: sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==}
+    engines: {node: '>= 0.4'}
+
+  is-weakset@2.0.4:
+    resolution: {integrity: sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==}
+    engines: {node: '>= 0.4'}
+
+  isarray@2.0.5:
+    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}
+
+  isexe@2.0.0:
+    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}
+
+  iterator.prototype@1.1.5:
+    resolution: {integrity: sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==}
+    engines: {node: '>= 0.4'}
+
+  jiti@2.5.1:
+    resolution: {integrity: sha512-twQoecYPiVA5K/h6SxtORw/Bs3ar+mLUtoPSc7iMXzQzK8d7eJ/R09wmTwAjiamETn1cXYPGfNnu7DMoHgu12w==}
+    hasBin: true
+
+  js-tokens@4.0.0:
+    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}
+
+  js-yaml@3.14.1:
+    resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}
+    hasBin: true
+
+  js-yaml@4.1.0:
+    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
+    hasBin: true
+
+  json-buffer@3.0.1:
+    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}
+
+  json-schema-traverse@0.4.1:
+    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}
+
+  json-stable-stringify-without-jsonify@1.0.1:
+    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}
+
+  json5@1.0.2:
+    resolution: {integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==}
+    hasBin: true
+
+  jsx-ast-utils@3.3.5:
+    resolution: {integrity: sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==}
+    engines: {node: '>=4.0'}
+
+  keyv@4.5.4:
+    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}
+
+  kind-of@6.0.3:
+    resolution: {integrity: sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==}
+    engines: {node: '>=0.10.0'}
+
+  language-subtag-registry@0.3.23:
+    resolution: {integrity: sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==}
+
+  language-tags@1.0.9:
+    resolution: {integrity: sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==}
+    engines: {node: '>=0.10'}
+
+  levn@0.4.1:
+    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
+    engines: {node: '>= 0.8.0'}
+
+  lightningcss-darwin-arm64@1.30.1:
+    resolution: {integrity: sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm64]
+    os: [darwin]
+
+  lightningcss-darwin-x64@1.30.1:
+    resolution: {integrity: sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [darwin]
+
+  lightningcss-freebsd-x64@1.30.1:
+    resolution: {integrity: sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [freebsd]
+
+  lightningcss-linux-arm-gnueabihf@1.30.1:
+    resolution: {integrity: sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm]
+    os: [linux]
+
+  lightningcss-linux-arm64-gnu@1.30.1:
+    resolution: {integrity: sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm64]
+    os: [linux]
+
+  lightningcss-linux-arm64-musl@1.30.1:
+    resolution: {integrity: sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm64]
+    os: [linux]
+
+  lightningcss-linux-x64-gnu@1.30.1:
+    resolution: {integrity: sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [linux]
+
+  lightningcss-linux-x64-musl@1.30.1:
+    resolution: {integrity: sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [linux]
+
+  lightningcss-win32-arm64-msvc@1.30.1:
+    resolution: {integrity: sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm64]
+    os: [win32]
+
+  lightningcss-win32-x64-msvc@1.30.1:
+    resolution: {integrity: sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [win32]
+
+  lightningcss@1.30.1:
+    resolution: {integrity: sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==}
+    engines: {node: '>= 12.0.0'}
+
+  locate-path@6.0.0:
+    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
+    engines: {node: '>=10'}
+
+  lodash.merge@4.6.2:
+    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
+
+  longest-streak@3.1.0:
+    resolution: {integrity: sha512-9Ri+o0JYgehTaVBBDoMqIl8GXtbWg711O3srftcHhZ0dqnETqLaoIK0x17fUw9rFSlK/0NlsKe0Ahhyl5pXE2g==}
+
+  loose-envify@1.4.0:
+    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
+    hasBin: true
+
+  magic-string@0.30.19:
+    resolution: {integrity: sha512-2N21sPY9Ws53PZvsEpVtNuSW+ScYbQdp4b9qUaL+9QkHUrGFKo56Lg9Emg5s9V/qrtNBmiR01sYhUOwu3H+VOw==}
+
+  markdown-extensions@2.0.0:
+    resolution: {integrity: sha512-o5vL7aDWatOTX8LzaS1WMoaoxIiLRQJuIKKe2wAw6IeULDHaqbiqiggmx+pKvZDb1Sj+pE46Sn1T7lCqfFtg1Q==}
+    engines: {node: '>=16'}
+
+  math-intrinsics@1.1.0:
+    resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}
+    engines: {node: '>= 0.4'}
+
+  mdast-util-from-markdown@2.0.2:
+    resolution: {integrity: sha512-uZhTV/8NBuw0WHkPTrCqDOl0zVe1BIng5ZtHoDk49ME1qqcjYmmLmOf0gELgcRMxN4w2iuIeVso5/6QymSrgmA==}
+
+  mdast-util-mdx-expression@2.0.1:
+    resolution: {integrity: sha512-J6f+9hUp+ldTZqKRSg7Vw5V6MqjATc+3E4gf3CFNcuZNWD8XdyI6zQ8GqH7f8169MM6P7hMBRDVGnn7oHB9kXQ==}
+
+  mdast-util-mdx-jsx@3.2.0:
+    resolution: {integrity: sha512-lj/z8v0r6ZtsN/cGNNtemmmfoLAFZnjMbNyLzBafjzikOM+glrjNHPlf6lQDOTccj9n5b0PPihEBbhneMyGs1Q==}
+
+  mdast-util-mdx@3.0.0:
+    resolution: {integrity: sha512-JfbYLAW7XnYTTbUsmpu0kdBUVe+yKVJZBItEjwyYJiDJuZ9w4eeaqks4HQO+R7objWgS2ymV60GYpI14Ug554w==}
+
+  mdast-util-mdxjs-esm@2.0.1:
+    resolution: {integrity: sha512-EcmOpxsZ96CvlP03NghtH1EsLtr0n9Tm4lPUJUBccV9RwUOneqSycg19n5HGzCf+10LozMRSObtVr3ee1WoHtg==}
+
+  mdast-util-phrasing@4.1.0:
+    resolution: {integrity: sha512-TqICwyvJJpBwvGAMZjj4J2n0X8QWp21b9l0o7eXyVJ25YNWYbJDVIyD1bZXE6WtV6RmKJVYmQAKWa0zWOABz2w==}
+
+  mdast-util-to-hast@13.2.0:
+    resolution: {integrity: sha512-QGYKEuUsYT9ykKBCMOEDLsU5JRObWQusAolFMeko/tYPufNkRffBAQjIE+99jbA87xv6FgmjLtwjh9wBWajwAA==}
+
+  mdast-util-to-markdown@2.1.2:
+    resolution: {integrity: sha512-xj68wMTvGXVOKonmog6LwyJKrYXZPvlwabaryTjLh9LuvovB/KAH+kvi8Gjj+7rJjsFi23nkUxRQv1KqSroMqA==}
+
+  mdast-util-to-string@4.0.0:
+    resolution: {integrity: sha512-0H44vDimn51F0YwvxSJSm0eCDOJTRlmN0R1yBh4HLj9wiV1Dn0QoXGbvFAWj2hSItVTlCmBF1hqKlIyUBVFLPg==}
+
+  merge2@1.4.1:
+    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
+    engines: {node: '>= 8'}
+
+  micromark-core-commonmark@2.0.3:
+    resolution: {integrity: sha512-RDBrHEMSxVFLg6xvnXmb1Ayr2WzLAWjeSATAoxwKYJV94TeNavgoIdA0a9ytzDSVzBy2YKFK+emCPOEibLeCrg==}
+
+  micromark-extension-mdx-expression@3.0.1:
+    resolution: {integrity: sha512-dD/ADLJ1AeMvSAKBwO22zG22N4ybhe7kFIZ3LsDI0GlsNr2A3KYxb0LdC1u5rj4Nw+CHKY0RVdnHX8vj8ejm4Q==}
+
+  micromark-extension-mdx-jsx@3.0.2:
+    resolution: {integrity: sha512-e5+q1DjMh62LZAJOnDraSSbDMvGJ8x3cbjygy2qFEi7HCeUT4BDKCvMozPozcD6WmOt6sVvYDNBKhFSz3kjOVQ==}
+
+  micromark-extension-mdx-md@2.0.0:
+    resolution: {integrity: sha512-EpAiszsB3blw4Rpba7xTOUptcFeBFi+6PY8VnJ2hhimH+vCQDirWgsMpz7w1XcZE7LVrSAUGb9VJpG9ghlYvYQ==}
+
+  micromark-extension-mdxjs-esm@3.0.0:
+    resolution: {integrity: sha512-DJFl4ZqkErRpq/dAPyeWp15tGrcrrJho1hKK5uBS70BCtfrIFg81sqcTVu3Ta+KD1Tk5vAtBNElWxtAa+m8K9A==}
+
+  micromark-extension-mdxjs@3.0.0:
+    resolution: {integrity: sha512-A873fJfhnJ2siZyUrJ31l34Uqwy4xIFmvPY1oj+Ean5PHcPBYzEsvqvWGaWcfEIr11O5Dlw3p2y0tZWpKHDejQ==}
+
+  micromark-factory-destination@2.0.1:
+    resolution: {integrity: sha512-Xe6rDdJlkmbFRExpTOmRj9N3MaWmbAgdpSrBQvCFqhezUn4AHqJHbaEnfbVYYiexVSs//tqOdY/DxhjdCiJnIA==}
+
+  micromark-factory-label@2.0.1:
+    resolution: {integrity: sha512-VFMekyQExqIW7xIChcXn4ok29YE3rnuyveW3wZQWWqF4Nv9Wk5rgJ99KzPvHjkmPXF93FXIbBp6YdW3t71/7Vg==}
+
+  micromark-factory-mdx-expression@2.0.3:
+    resolution: {integrity: sha512-kQnEtA3vzucU2BkrIa8/VaSAsP+EJ3CKOvhMuJgOEGg9KDC6OAY6nSnNDVRiVNRqj7Y4SlSzcStaH/5jge8JdQ==}
+
+  micromark-factory-space@2.0.1:
+    resolution: {integrity: sha512-zRkxjtBxxLd2Sc0d+fbnEunsTj46SWXgXciZmHq0kDYGnck/ZSGj9/wULTV95uoeYiK5hRXP2mJ98Uo4cq/LQg==}
+
+  micromark-factory-title@2.0.1:
+    resolution: {integrity: sha512-5bZ+3CjhAd9eChYTHsjy6TGxpOFSKgKKJPJxr293jTbfry2KDoWkhBb6TcPVB4NmzaPhMs1Frm9AZH7OD4Cjzw==}
+
+  micromark-factory-whitespace@2.0.1:
+    resolution: {integrity: sha512-Ob0nuZ3PKt/n0hORHyvoD9uZhr+Za8sFoP+OnMcnWK5lngSzALgQYKMr9RJVOWLqQYuyn6ulqGWSXdwf6F80lQ==}
+
+  micromark-util-character@2.1.1:
+    resolution: {integrity: sha512-wv8tdUTJ3thSFFFJKtpYKOYiGP2+v96Hvk4Tu8KpCAsTMs6yi+nVmGh1syvSCsaxz45J6Jbw+9DD6g97+NV67Q==}
+
+  micromark-util-chunked@2.0.1:
+    resolution: {integrity: sha512-QUNFEOPELfmvv+4xiNg2sRYeS/P84pTW0TCgP5zc9FpXetHY0ab7SxKyAQCNCc1eK0459uoLI1y5oO5Vc1dbhA==}
+
+  micromark-util-classify-character@2.0.1:
+    resolution: {integrity: sha512-K0kHzM6afW/MbeWYWLjoHQv1sgg2Q9EccHEDzSkxiP/EaagNzCm7T/WMKZ3rjMbvIpvBiZgwR3dKMygtA4mG1Q==}
+
+  micromark-util-combine-extensions@2.0.1:
+    resolution: {integrity: sha512-OnAnH8Ujmy59JcyZw8JSbK9cGpdVY44NKgSM7E9Eh7DiLS2E9RNQf0dONaGDzEG9yjEl5hcqeIsj4hfRkLH/Bg==}
+
+  micromark-util-decode-numeric-character-reference@2.0.2:
+    resolution: {integrity: sha512-ccUbYk6CwVdkmCQMyr64dXz42EfHGkPQlBj5p7YVGzq8I7CtjXZJrubAYezf7Rp+bjPseiROqe7G6foFd+lEuw==}
+
+  micromark-util-decode-string@2.0.1:
+    resolution: {integrity: sha512-nDV/77Fj6eH1ynwscYTOsbK7rR//Uj0bZXBwJZRfaLEJ1iGBR6kIfNmlNqaqJf649EP0F3NWNdeJi03elllNUQ==}
+
+  micromark-util-encode@2.0.1:
+    resolution: {integrity: sha512-c3cVx2y4KqUnwopcO9b/SCdo2O67LwJJ/UyqGfbigahfegL9myoEFoDYZgkT7f36T0bLrM9hZTAaAyH+PCAXjw==}
+
+  micromark-util-events-to-acorn@2.0.3:
+    resolution: {integrity: sha512-jmsiEIiZ1n7X1Rr5k8wVExBQCg5jy4UXVADItHmNk1zkwEVhBuIUKRu3fqv+hs4nxLISi2DQGlqIOGiFxgbfHg==}
+
+  micromark-util-html-tag-name@2.0.1:
+    resolution: {integrity: sha512-2cNEiYDhCWKI+Gs9T0Tiysk136SnR13hhO8yW6BGNyhOC4qYFnwF1nKfD3HFAIXA5c45RrIG1ub11GiXeYd1xA==}
+
+  micromark-util-normalize-identifier@2.0.1:
+    resolution: {integrity: sha512-sxPqmo70LyARJs0w2UclACPUUEqltCkJ6PhKdMIDuJ3gSf/Q+/GIe3WKl0Ijb/GyH9lOpUkRAO2wp0GVkLvS9Q==}
+
+  micromark-util-resolve-all@2.0.1:
+    resolution: {integrity: sha512-VdQyxFWFT2/FGJgwQnJYbe1jjQoNTS4RjglmSjTUlpUMa95Htx9NHeYW4rGDJzbjvCsl9eLjMQwGeElsqmzcHg==}
+
+  micromark-util-sanitize-uri@2.0.1:
+    resolution: {integrity: sha512-9N9IomZ/YuGGZZmQec1MbgxtlgougxTodVwDzzEouPKo3qFWvymFHWcnDi2vzV1ff6kas9ucW+o3yzJK9YB1AQ==}
+
+  micromark-util-subtokenize@2.1.0:
+    resolution: {integrity: sha512-XQLu552iSctvnEcgXw6+Sx75GflAPNED1qx7eBJ+wydBb2KCbRZe+NwvIEEMM83uml1+2WSXpBAcp9IUCgCYWA==}
+
+  micromark-util-symbol@2.0.1:
+    resolution: {integrity: sha512-vs5t8Apaud9N28kgCrRUdEed4UJ+wWNvicHLPxCa9ENlYuAY31M0ETy5y1vA33YoNPDFTghEbnh6efaE8h4x0Q==}
+
+  micromark-util-types@2.0.2:
+    resolution: {integrity: sha512-Yw0ECSpJoViF1qTU4DC6NwtC4aWGt1EkzaQB8KPPyCRR8z9TWeV0HbEFGTO+ZY1wB22zmxnJqhPyTpOVCpeHTA==}
+
+  micromark@4.0.2:
+    resolution: {integrity: sha512-zpe98Q6kvavpCr1NPVSCMebCKfD7CA2NqZ+rykeNhONIJBpc1tFKt9hucLGwha3jNTNI8lHpctWJWoimVF4PfA==}
+
+  micromatch@4.0.8:
+    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
+    engines: {node: '>=8.6'}
+
+  mime-db@1.52.0:
+    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
+    engines: {node: '>= 0.6'}
+
+  mime-types@2.1.35:
+    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}
+    engines: {node: '>= 0.6'}
+
+  minimatch@3.1.2:
+    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}
+
+  minimatch@9.0.5:
+    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
+    engines: {node: '>=16 || 14 >=14.17'}
+
+  minimist@1.2.8:
+    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}
+
+  minipass@7.1.2:
+    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
+    engines: {node: '>=16 || 14 >=14.17'}
+
+  minizlib@3.0.2:
+    resolution: {integrity: sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==}
+    engines: {node: '>= 18'}
+
+  mkdirp@3.0.1:
+    resolution: {integrity: sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==}
+    engines: {node: '>=10'}
+    hasBin: true
+
+  ms@2.1.3:
+    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}
+
+  nanoid@3.3.11:
+    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}
+    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
+    hasBin: true
+
+  napi-postinstall@0.3.3:
+    resolution: {integrity: sha512-uTp172LLXSxuSYHv/kou+f6KW3SMppU9ivthaVTXian9sOt3XM/zHYHpRZiLgQoxeWfYUnslNWQHF1+G71xcow==}
+    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}
+    hasBin: true
+
+  natural-compare@1.4.0:
+    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}
+
+  next-mdx-remote@5.0.0:
+    resolution: {integrity: sha512-RNNbqRpK9/dcIFZs/esQhuLA8jANqlH694yqoDBK8hkVdJUndzzGmnPHa2nyi90N4Z9VmzuSWNRpr5ItT3M7xQ==}
+    engines: {node: '>=14', npm: '>=7'}
+    peerDependencies:
+      react: '>=16'
+
+  next@15.5.3:
+    resolution: {integrity: sha512-r/liNAx16SQj4D+XH/oI1dlpv9tdKJ6cONYPwwcCC46f2NjpaRWY+EKCzULfgQYV6YKXjHBchff2IZBSlZmJNw==}
+    engines: {node: ^18.18.0 || ^19.8.0 || >= 20.0.0}
+    hasBin: true
+    peerDependencies:
+      '@opentelemetry/api': ^1.1.0
+      '@playwright/test': ^1.51.1
+      babel-plugin-react-compiler: '*'
+      react: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0
+      react-dom: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0
+      sass: ^1.3.0
+    peerDependenciesMeta:
+      '@opentelemetry/api':
+        optional: true
+      '@playwright/test':
+        optional: true
+      babel-plugin-react-compiler:
+        optional: true
+      sass:
+        optional: true
+
+  object-assign@4.1.1:
+    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
+    engines: {node: '>=0.10.0'}
+
+  object-inspect@1.13.4:
+    resolution: {integrity: sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==}
+    engines: {node: '>= 0.4'}
+
+  object-keys@1.1.1:
+    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}
+    engines: {node: '>= 0.4'}
+
+  object.assign@4.1.7:
+    resolution: {integrity: sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==}
+    engines: {node: '>= 0.4'}
+
+  object.entries@1.1.9:
+    resolution: {integrity: sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==}
+    engines: {node: '>= 0.4'}
+
+  object.fromentries@2.0.8:
+    resolution: {integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==}
+    engines: {node: '>= 0.4'}
+
+  object.groupby@1.0.3:
+    resolution: {integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==}
+    engines: {node: '>= 0.4'}
+
+  object.values@1.2.1:
+    resolution: {integrity: sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==}
+    engines: {node: '>= 0.4'}
+
+  optionator@0.9.4:
+    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
+    engines: {node: '>= 0.8.0'}
+
+  own-keys@1.0.1:
+    resolution: {integrity: sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==}
+    engines: {node: '>= 0.4'}
+
+  p-limit@3.1.0:
+    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
+    engines: {node: '>=10'}
+
+  p-locate@5.0.0:
+    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
+    engines: {node: '>=10'}
+
+  parent-module@1.0.1:
+    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
+    engines: {node: '>=6'}
+
+  parse-entities@4.0.2:
+    resolution: {integrity: sha512-GG2AQYWoLgL877gQIKeRPGO1xF9+eG1ujIb5soS5gPvLQ1y2o8FL90w2QWNdf9I361Mpp7726c+lj3U0qK1uGw==}
+
+  path-exists@4.0.0:
+    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
+    engines: {node: '>=8'}
+
+  path-key@3.1.1:
+    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
+    engines: {node: '>=8'}
+
+  path-parse@1.0.7:
+    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}
+
+  picocolors@1.1.1:
+    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}
+
+  picomatch@2.3.1:
+    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
+    engines: {node: '>=8.6'}
+
+  picomatch@4.0.3:
+    resolution: {integrity: sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==}
+    engines: {node: '>=12'}
+
+  possible-typed-array-names@1.1.0:
+    resolution: {integrity: sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==}
+    engines: {node: '>= 0.4'}
+
+  postcss-selector-parser@6.0.10:
+    resolution: {integrity: sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==}
+    engines: {node: '>=4'}
+
+  postcss@8.4.31:
+    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}
+    engines: {node: ^10 || ^12 || >=14}
+
+  postcss@8.5.6:
+    resolution: {integrity: sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==}
+    engines: {node: ^10 || ^12 || >=14}
+
+  prelude-ls@1.2.1:
+    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
+    engines: {node: '>= 0.8.0'}
+
+  prop-types@15.8.1:
+    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}
+
+  property-information@7.1.0:
+    resolution: {integrity: sha512-TwEZ+X+yCJmYfL7TPUOcvBZ4QfoT5YenQiJuX//0th53DE6w0xxLEtfK3iyryQFddXuvkIk51EEgrJQ0WJkOmQ==}
+
+  proxy-from-env@1.1.0:
+    resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}
+
+  punycode@2.3.1:
+    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
+    engines: {node: '>=6'}
+
+  queue-microtask@1.2.3:
+    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}
+
+  react-dom@19.1.0:
+    resolution: {integrity: sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==}
+    peerDependencies:
+      react: ^19.1.0
+
+  react-is@16.13.1:
+    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}
+
+  react@19.1.0:
+    resolution: {integrity: sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==}
+    engines: {node: '>=0.10.0'}
+
+  recma-build-jsx@1.0.0:
+    resolution: {integrity: sha512-8GtdyqaBcDfva+GUKDr3nev3VpKAhup1+RvkMvUxURHpW7QyIvk9F5wz7Vzo06CEMSilw6uArgRqhpiUcWp8ew==}
+
+  recma-jsx@1.0.1:
+    resolution: {integrity: sha512-huSIy7VU2Z5OLv6oFLosQGGDqPqdO1iq6bWNAdhzMxSJP7RAso4fCZ1cKu8j9YHCZf3TPrq4dw3okhrylgcd7w==}
+    peerDependencies:
+      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
+
+  recma-parse@1.0.0:
+    resolution: {integrity: sha512-OYLsIGBB5Y5wjnSnQW6t3Xg7q3fQ7FWbw/vcXtORTnyaSFscOtABg+7Pnz6YZ6c27fG1/aN8CjfwoUEUIdwqWQ==}
+
+  recma-stringify@1.0.0:
+    resolution: {integrity: sha512-cjwII1MdIIVloKvC9ErQ+OgAtwHBmcZ0Bg4ciz78FtbT8In39aAYbaA7zvxQ61xVMSPE8WxhLwLbhif4Js2C+g==}
+
+  reflect.getprototypeof@1.0.10:
+    resolution: {integrity: sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==}
+    engines: {node: '>= 0.4'}
+
+  regexp.prototype.flags@1.5.4:
+    resolution: {integrity: sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==}
+    engines: {node: '>= 0.4'}
+
+  rehype-recma@1.0.0:
+    resolution: {integrity: sha512-lqA4rGUf1JmacCNWWZx0Wv1dHqMwxzsDWYMTowuplHF3xH0N/MmrZ/G3BDZnzAkRmxDadujCjaKM2hqYdCBOGw==}
+
+  remark-mdx@3.1.1:
+    resolution: {integrity: sha512-Pjj2IYlUY3+D8x00UJsIOg5BEvfMyeI+2uLPn9VO9Wg4MEtN/VTIq2NEJQfde9PnX15KgtHyl9S0BcTnWrIuWg==}
+
+  remark-parse@11.0.0:
+    resolution: {integrity: sha512-FCxlKLNGknS5ba/1lmpYijMUzX2esxW5xQqjWxw2eHFfS2MSdaHVINFmhjo+qN1WhZhNimq0dZATN9pH0IDrpA==}
+
+  remark-rehype@11.1.2:
+    resolution: {integrity: sha512-Dh7l57ianaEoIpzbp0PC9UKAdCSVklD8E5Rpw7ETfbTl3FqcOOgq5q2LVDhgGCkaBv7p24JXikPdvhhmHvKMsw==}
+
+  resolve-from@4.0.0:
+    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
+    engines: {node: '>=4'}
+
+  resolve-pkg-maps@1.0.0:
+    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}
+
+  resolve@1.22.10:
+    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}
+    engines: {node: '>= 0.4'}
+    hasBin: true
+
+  resolve@2.0.0-next.5:
+    resolution: {integrity: sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==}
+    hasBin: true
+
+  reusify@1.1.0:
+    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}
+    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
+
+  run-parallel@1.2.0:
+    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
+
+  safe-array-concat@1.1.3:
+    resolution: {integrity: sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==}
+    engines: {node: '>=0.4'}
+
+  safe-push-apply@1.0.0:
+    resolution: {integrity: sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==}
+    engines: {node: '>= 0.4'}
+
+  safe-regex-test@1.1.0:
+    resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}
+    engines: {node: '>= 0.4'}
+
+  scheduler@0.26.0:
+    resolution: {integrity: sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==}
+
+  section-matter@1.0.0:
+    resolution: {integrity: sha512-vfD3pmTzGpufjScBh50YHKzEu2lxBWhVEHsNGoEXmCmn2hKGfeNLYMzCJpe8cD7gqX7TJluOVpBkAequ6dgMmA==}
+    engines: {node: '>=4'}
+
+  semver@6.3.1:
+    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
+    hasBin: true
+
+  semver@7.7.2:
+    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}
+    engines: {node: '>=10'}
+    hasBin: true
+
+  set-function-length@1.2.2:
+    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
+    engines: {node: '>= 0.4'}
+
+  set-function-name@2.0.2:
+    resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}
+    engines: {node: '>= 0.4'}
+
+  set-proto@1.0.0:
+    resolution: {integrity: sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==}
+    engines: {node: '>= 0.4'}
+
+  sharp@0.34.4:
+    resolution: {integrity: sha512-FUH39xp3SBPnxWvd5iib1X8XY7J0K0X7d93sie9CJg2PO8/7gmg89Nve6OjItK53/MlAushNNxteBYfM6DEuoA==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+
+  shebang-command@2.0.0:
+    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
+    engines: {node: '>=8'}
+
+  shebang-regex@3.0.0:
+    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
+    engines: {node: '>=8'}
+
+  side-channel-list@1.0.0:
+    resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}
+    engines: {node: '>= 0.4'}
+
+  side-channel-map@1.0.1:
+    resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}
+    engines: {node: '>= 0.4'}
+
+  side-channel-weakmap@1.0.2:
+    resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}
+    engines: {node: '>= 0.4'}
+
+  side-channel@1.1.0:
+    resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}
+    engines: {node: '>= 0.4'}
+
+  source-map-js@1.2.1:
+    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
+    engines: {node: '>=0.10.0'}
+
+  source-map@0.7.6:
+    resolution: {integrity: sha512-i5uvt8C3ikiWeNZSVZNWcfZPItFQOsYTUAOkcUPGd8DqDy1uOUikjt5dG+uRlwyvR108Fb9DOd4GvXfT0N2/uQ==}
+    engines: {node: '>= 12'}
+
+  space-separated-tokens@2.0.2:
+    resolution: {integrity: sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==}
+
+  sprintf-js@1.0.3:
+    resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}
+
+  stable-hash@0.0.5:
+    resolution: {integrity: sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==}
+
+  stop-iteration-iterator@1.1.0:
+    resolution: {integrity: sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.includes@2.0.1:
+    resolution: {integrity: sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.matchall@4.0.12:
+    resolution: {integrity: sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.repeat@1.0.0:
+    resolution: {integrity: sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==}
+
+  string.prototype.trim@1.2.10:
+    resolution: {integrity: sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.trimend@1.0.9:
+    resolution: {integrity: sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.trimstart@1.0.8:
+    resolution: {integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==}
+    engines: {node: '>= 0.4'}
+
+  stringify-entities@4.0.4:
+    resolution: {integrity: sha512-IwfBptatlO+QCJUo19AqvrPNqlVMpW9YEL2LIVY+Rpv2qsjCGxaDLNRgeGsQWJhfItebuJhsGSLjaBbNSQ+ieg==}
+
+  strip-bom-string@1.0.0:
+    resolution: {integrity: sha512-uCC2VHvQRYu+lMh4My/sFNmF2klFymLX1wHJeXnbEJERpV/ZsVuonzerjfrGpIGF7LBVa1O7i9kjiWvJiFck8g==}
+    engines: {node: '>=0.10.0'}
+
+  strip-bom@3.0.0:
+    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}
+    engines: {node: '>=4'}
+
+  strip-json-comments@3.1.1:
+    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
+    engines: {node: '>=8'}
+
+  style-to-js@1.1.17:
+    resolution: {integrity: sha512-xQcBGDxJb6jjFCTzvQtfiPn6YvvP2O8U1MDIPNfJQlWMYfktPy+iGsHE7cssjs7y84d9fQaK4UF3RIJaAHSoYA==}
+
+  style-to-object@1.0.9:
+    resolution: {integrity: sha512-G4qppLgKu/k6FwRpHiGiKPaPTFcG3g4wNVX/Qsfu+RqQM30E7Tyu/TEgxcL9PNLF5pdRLwQdE3YKKf+KF2Dzlw==}
+
+  styled-jsx@5.1.6:
+    resolution: {integrity: sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==}
+    engines: {node: '>= 12.0.0'}
+    peerDependencies:
+      '@babel/core': '*'
+      babel-plugin-macros: '*'
+      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0'
+    peerDependenciesMeta:
+      '@babel/core':
+        optional: true
+      babel-plugin-macros:
+        optional: true
+
+  supports-color@7.2.0:
+    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
+    engines: {node: '>=8'}
+
+  supports-preserve-symlinks-flag@1.0.0:
+    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
+    engines: {node: '>= 0.4'}
+
+  tailwindcss@4.1.13:
+    resolution: {integrity: sha512-i+zidfmTqtwquj4hMEwdjshYYgMbOrPzb9a0M3ZgNa0JMoZeFC6bxZvO8yr8ozS6ix2SDz0+mvryPeBs2TFE+w==}
+
+  tapable@2.2.3:
+    resolution: {integrity: sha512-ZL6DDuAlRlLGghwcfmSn9sK3Hr6ArtyudlSAiCqQ6IfE+b+HHbydbYDIG15IfS5do+7XQQBdBiubF/cV2dnDzg==}
+    engines: {node: '>=6'}
+
+  tar@7.4.3:
+    resolution: {integrity: sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==}
+    engines: {node: '>=18'}
+
+  tinyglobby@0.2.15:
+    resolution: {integrity: sha512-j2Zq4NyQYG5XMST4cbs02Ak8iJUdxRM0XI5QyxXuZOzKOINmWurp3smXu3y5wDcJrptwpSjgXHzIQxR0omXljQ==}
+    engines: {node: '>=12.0.0'}
+
+  to-regex-range@5.0.1:
+    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
+    engines: {node: '>=8.0'}
+
+  trim-lines@3.0.1:
+    resolution: {integrity: sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==}
+
+  trough@2.2.0:
+    resolution: {integrity: sha512-tmMpK00BjZiUyVyvrBK7knerNgmgvcV/KLVyuma/SC+TQN167GrMRciANTz09+k3zW8L8t60jWO1GpfkZdjTaw==}
+
+  ts-api-utils@2.1.0:
+    resolution: {integrity: sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==}
+    engines: {node: '>=18.12'}
+    peerDependencies:
+      typescript: '>=4.8.4'
+
+  tsconfig-paths@3.15.0:
+    resolution: {integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==}
+
+  tslib@2.8.1:
+    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}
+
+  type-check@0.4.0:
+    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
+    engines: {node: '>= 0.8.0'}
+
+  typed-array-buffer@1.0.3:
+    resolution: {integrity: sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==}
+    engines: {node: '>= 0.4'}
+
+  typed-array-byte-length@1.0.3:
+    resolution: {integrity: sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==}
+    engines: {node: '>= 0.4'}
+
+  typed-array-byte-offset@1.0.4:
+    resolution: {integrity: sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==}
+    engines: {node: '>= 0.4'}
+
+  typed-array-length@1.0.7:
+    resolution: {integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==}
+    engines: {node: '>= 0.4'}
+
+  typescript@5.9.2:
+    resolution: {integrity: sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==}
+    engines: {node: '>=14.17'}
+    hasBin: true
+
+  unbox-primitive@1.1.0:
+    resolution: {integrity: sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==}
+    engines: {node: '>= 0.4'}
+
+  undici-types@6.21.0:
+    resolution: {integrity: sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==}
+
+  unified@11.0.5:
+    resolution: {integrity: sha512-xKvGhPWw3k84Qjh8bI3ZeJjqnyadK+GEFtazSfZv/rKeTkTjOJho6mFqh2SM96iIcZokxiOpg78GazTSg8+KHA==}
+
+  unist-util-is@5.2.1:
+    resolution: {integrity: sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==}
+
+  unist-util-is@6.0.0:
+    resolution: {integrity: sha512-2qCTHimwdxLfz+YzdGfkqNlH0tLi9xjTnHddPmJwtIG9MGsdbutfTc4P+haPD7l7Cjxf/WZj+we5qfVPvvxfYw==}
+
+  unist-util-position-from-estree@2.0.0:
+    resolution: {integrity: sha512-KaFVRjoqLyF6YXCbVLNad/eS4+OfPQQn2yOd7zF/h5T/CSL2v8NpN6a5TPvtbXthAGw5nG+PuTtq+DdIZr+cRQ==}
+
+  unist-util-position@5.0.0:
+    resolution: {integrity: sha512-fucsC7HjXvkB5R3kTCO7kUjRdrS0BJt3M/FPxmHMBOm8JQi2BsHAHFsy27E0EolP8rp0NzXsJ+jNPyDWvOJZPA==}
+
+  unist-util-remove@3.1.1:
+    resolution: {integrity: sha512-kfCqZK5YVY5yEa89tvpl7KnBBHu2c6CzMkqHUrlOqaRgGOMp0sMvwWOVrbAtj03KhovQB7i96Gda72v/EFE0vw==}
+
+  unist-util-stringify-position@4.0.0:
+    resolution: {integrity: sha512-0ASV06AAoKCDkS2+xw5RXJywruurpbC4JZSm7nr7MOt1ojAzvyyaO+UxZf18j8FCF6kmzCZKcAgN/yu2gm2XgQ==}
+
+  unist-util-visit-parents@5.1.3:
+    resolution: {integrity: sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==}
+
+  unist-util-visit-parents@6.0.1:
+    resolution: {integrity: sha512-L/PqWzfTP9lzzEa6CKs0k2nARxTdZduw3zyh8d2NVBnsyvHjSX4TWse388YrrQKbvI8w20fGjGlhgT96WwKykw==}
+
+  unist-util-visit@5.0.0:
+    resolution: {integrity: sha512-MR04uvD+07cwl/yhVuVWAtw+3GOR/knlL55Nd/wAdblk27GCVt3lqpTivy/tkJcZoNPzTwS1Y+KMojlLDhoTzg==}
+
+  unrs-resolver@1.11.1:
+    resolution: {integrity: sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==}
+
+  uri-js@4.4.1:
+    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}
+
+  util-deprecate@1.0.2:
+    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
+
+  vfile-matter@5.0.1:
+    resolution: {integrity: sha512-o6roP82AiX0XfkyTHyRCMXgHfltUNlXSEqCIS80f+mbAyiQBE2fxtDVMtseyytGx75sihiJFo/zR6r/4LTs2Cw==}
+
+  vfile-message@4.0.3:
+    resolution: {integrity: sha512-QTHzsGd1EhbZs4AsQ20JX1rC3cOlt/IWJruk893DfLRr57lcnOeMaWG4K0JrRta4mIJZKth2Au3mM3u03/JWKw==}
+
+  vfile@6.0.3:
+    resolution: {integrity: sha512-KzIbH/9tXat2u30jf+smMwFCsno4wHVdNmzFyL+T/L3UGqqk6JKfVqOFOZEpZSHADH1k40ab6NUIXZq422ov3Q==}
+
+  which-boxed-primitive@1.1.1:
+    resolution: {integrity: sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==}
+    engines: {node: '>= 0.4'}
+
+  which-builtin-type@1.2.1:
+    resolution: {integrity: sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==}
+    engines: {node: '>= 0.4'}
+
+  which-collection@1.0.2:
+    resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}
+    engines: {node: '>= 0.4'}
+
+  which-typed-array@1.1.19:
+    resolution: {integrity: sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==}
+    engines: {node: '>= 0.4'}
+
+  which@2.0.2:
+    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
+    engines: {node: '>= 8'}
+    hasBin: true
+
+  word-wrap@1.2.5:
+    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}
+    engines: {node: '>=0.10.0'}
+
+  yallist@5.0.0:
+    resolution: {integrity: sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==}
+    engines: {node: '>=18'}
+
+  yaml@2.8.1:
+    resolution: {integrity: sha512-lcYcMxX2PO9XMGvAJkJ3OsNMw+/7FKes7/hgerGUYWIoWu5j/+YQqcZr5JnPZWzOsEBgMbSbiSTn/dv/69Mkpw==}
+    engines: {node: '>= 14.6'}
+    hasBin: true
+
+  yocto-queue@0.1.0:
+    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
+    engines: {node: '>=10'}
+
+  zod@4.1.9:
+    resolution: {integrity: sha512-HI32jTq0AUAC125z30E8bQNz0RQ+9Uc+4J7V97gLYjZVKRjeydPgGt6dvQzFrav7MYOUGFqqOGiHpA/fdbd0cQ==}
+
+  zwitch@2.0.4:
+    resolution: {integrity: sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==}
+
+snapshots:
+
+  '@alloc/quick-lru@5.2.0': {}
+
+  '@babel/code-frame@7.27.1':
+    dependencies:
+      '@babel/helper-validator-identifier': 7.27.1
+      js-tokens: 4.0.0
+      picocolors: 1.1.1
+
+  '@babel/helper-validator-identifier@7.27.1': {}
+
+  '@emnapi/core@1.5.0':
+    dependencies:
+      '@emnapi/wasi-threads': 1.1.0
+      tslib: 2.8.1
+    optional: true
+
+  '@emnapi/runtime@1.5.0':
+    dependencies:
+      tslib: 2.8.1
+    optional: true
+
+  '@emnapi/wasi-threads@1.1.0':
+    dependencies:
+      tslib: 2.8.1
+    optional: true
+
+  '@eslint-community/eslint-utils@4.9.0(eslint@9.36.0(jiti@2.5.1))':
+    dependencies:
+      eslint: 9.36.0(jiti@2.5.1)
+      eslint-visitor-keys: 3.4.3
+
+  '@eslint-community/regexpp@4.12.1': {}
+
+  '@eslint/config-array@0.21.0':
+    dependencies:
+      '@eslint/object-schema': 2.1.6
+      debug: 4.4.3
+      minimatch: 3.1.2
+    transitivePeerDependencies:
+      - supports-color
+
+  '@eslint/config-helpers@0.3.1': {}
+
+  '@eslint/core@0.15.2':
+    dependencies:
+      '@types/json-schema': 7.0.15
+
+  '@eslint/eslintrc@3.3.1':
+    dependencies:
+      ajv: 6.12.6
+      debug: 4.4.3
+      espree: 10.4.0
+      globals: 14.0.0
+      ignore: 5.3.2
+      import-fresh: 3.3.1
+      js-yaml: 4.1.0
+      minimatch: 3.1.2
+      strip-json-comments: 3.1.1
+    transitivePeerDependencies:
+      - supports-color
+
+  '@eslint/js@9.36.0': {}
+
+  '@eslint/object-schema@2.1.6': {}
+
+  '@eslint/plugin-kit@0.3.5':
+    dependencies:
+      '@eslint/core': 0.15.2
+      levn: 0.4.1
+
+  '@fontsource-variable/inter@5.2.8': {}
+
+  '@fontsource/ibm-plex-mono@5.2.7': {}
+
+  '@humanfs/core@0.19.1': {}
+
+  '@humanfs/node@0.16.7':
+    dependencies:
+      '@humanfs/core': 0.19.1
+      '@humanwhocodes/retry': 0.4.3
+
+  '@humanwhocodes/module-importer@1.0.1': {}
+
+  '@humanwhocodes/retry@0.4.3': {}
+
+  '@img/colour@1.0.0':
+    optional: true
+
+  '@img/sharp-darwin-arm64@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-darwin-arm64': 1.2.3
+    optional: true
+
+  '@img/sharp-darwin-x64@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-darwin-x64': 1.2.3
+    optional: true
+
+  '@img/sharp-libvips-darwin-arm64@1.2.3':
+    optional: true
+
+  '@img/sharp-libvips-darwin-x64@1.2.3':
+    optional: true
+
+  '@img/sharp-libvips-linux-arm64@1.2.3':
+    optional: true
+
+  '@img/sharp-libvips-linux-arm@1.2.3':
+    optional: true
+
+  '@img/sharp-libvips-linux-ppc64@1.2.3':
+    optional: true
+
+  '@img/sharp-libvips-linux-s390x@1.2.3':
+    optional: true
+
+  '@img/sharp-libvips-linux-x64@1.2.3':
+    optional: true
+
+  '@img/sharp-libvips-linuxmusl-arm64@1.2.3':
+    optional: true
+
+  '@img/sharp-libvips-linuxmusl-x64@1.2.3':
+    optional: true
+
+  '@img/sharp-linux-arm64@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-arm64': 1.2.3
+    optional: true
+
+  '@img/sharp-linux-arm@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-arm': 1.2.3
+    optional: true
+
+  '@img/sharp-linux-ppc64@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-ppc64': 1.2.3
+    optional: true
+
+  '@img/sharp-linux-s390x@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-s390x': 1.2.3
+    optional: true
+
+  '@img/sharp-linux-x64@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-x64': 1.2.3
+    optional: true
+
+  '@img/sharp-linuxmusl-arm64@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-linuxmusl-arm64': 1.2.3
+    optional: true
+
+  '@img/sharp-linuxmusl-x64@0.34.4':
+    optionalDependencies:
+      '@img/sharp-libvips-linuxmusl-x64': 1.2.3
+    optional: true
+
+  '@img/sharp-wasm32@0.34.4':
+    dependencies:
+      '@emnapi/runtime': 1.5.0
+    optional: true
+
+  '@img/sharp-win32-arm64@0.34.4':
+    optional: true
+
+  '@img/sharp-win32-ia32@0.34.4':
+    optional: true
+
+  '@img/sharp-win32-x64@0.34.4':
+    optional: true
+
+  '@isaacs/fs-minipass@4.0.1':
+    dependencies:
+      minipass: 7.1.2
+
+  '@jridgewell/gen-mapping@0.3.13':
+    dependencies:
+      '@jridgewell/sourcemap-codec': 1.5.5
+      '@jridgewell/trace-mapping': 0.3.31
+
+  '@jridgewell/remapping@2.3.5':
+    dependencies:
+      '@jridgewell/gen-mapping': 0.3.13
+      '@jridgewell/trace-mapping': 0.3.31
+
+  '@jridgewell/resolve-uri@3.1.2': {}
+
+  '@jridgewell/sourcemap-codec@1.5.5': {}
+
+  '@jridgewell/trace-mapping@0.3.31':
+    dependencies:
+      '@jridgewell/resolve-uri': 3.1.2
+      '@jridgewell/sourcemap-codec': 1.5.5
+
+  '@mdx-js/mdx@3.1.1':
+    dependencies:
+      '@types/estree': 1.0.8
+      '@types/estree-jsx': 1.0.5
+      '@types/hast': 3.0.4
+      '@types/mdx': 2.0.13
+      acorn: 8.15.0
+      collapse-white-space: 2.1.0
+      devlop: 1.1.0
+      estree-util-is-identifier-name: 3.0.0
+      estree-util-scope: 1.0.0
+      estree-walker: 3.0.3
+      hast-util-to-jsx-runtime: 2.3.6
+      markdown-extensions: 2.0.0
+      recma-build-jsx: 1.0.0
+      recma-jsx: 1.0.1(acorn@8.15.0)
+      recma-stringify: 1.0.0
+      rehype-recma: 1.0.0
+      remark-mdx: 3.1.1
+      remark-parse: 11.0.0
+      remark-rehype: 11.1.2
+      source-map: 0.7.6
+      unified: 11.0.5
+      unist-util-position-from-estree: 2.0.0
+      unist-util-stringify-position: 4.0.0
+      unist-util-visit: 5.0.0
+      vfile: 6.0.3
+    transitivePeerDependencies:
+      - supports-color
+
+  '@mdx-js/react@3.1.1(@types/react@19.1.13)(react@19.1.0)':
+    dependencies:
+      '@types/mdx': 2.0.13
+      '@types/react': 19.1.13
+      react: 19.1.0
+
+  '@napi-rs/wasm-runtime@0.2.12':
+    dependencies:
+      '@emnapi/core': 1.5.0
+      '@emnapi/runtime': 1.5.0
+      '@tybys/wasm-util': 0.10.1
+    optional: true
+
+  '@next/env@15.5.3': {}
+
+  '@next/eslint-plugin-next@15.5.3':
+    dependencies:
+      fast-glob: 3.3.1
+
+  '@next/swc-darwin-arm64@15.5.3':
+    optional: true
+
+  '@next/swc-darwin-x64@15.5.3':
+    optional: true
+
+  '@next/swc-linux-arm64-gnu@15.5.3':
+    optional: true
+
+  '@next/swc-linux-arm64-musl@15.5.3':
+    optional: true
+
+  '@next/swc-linux-x64-gnu@15.5.3':
+    optional: true
+
+  '@next/swc-linux-x64-musl@15.5.3':
+    optional: true
+
+  '@next/swc-win32-arm64-msvc@15.5.3':
+    optional: true
+
+  '@next/swc-win32-x64-msvc@15.5.3':
+    optional: true
+
+  '@nodelib/fs.scandir@2.1.5':
+    dependencies:
+      '@nodelib/fs.stat': 2.0.5
+      run-parallel: 1.2.0
+
+  '@nodelib/fs.stat@2.0.5': {}
+
+  '@nodelib/fs.walk@1.2.8':
+    dependencies:
+      '@nodelib/fs.scandir': 2.1.5
+      fastq: 1.19.1
+
+  '@nolyfill/is-core-module@1.0.39': {}
+
+  '@rtsao/scc@1.1.0': {}
+
+  '@rushstack/eslint-patch@1.12.0': {}
+
+  '@sendgrid/client@8.1.6':
+    dependencies:
+      '@sendgrid/helpers': 8.0.0
+      axios: 1.12.2
+    transitivePeerDependencies:
+      - debug
+
+  '@sendgrid/helpers@8.0.0':
+    dependencies:
+      deepmerge: 4.3.1
+
+  '@sendgrid/mail@8.1.6':
+    dependencies:
+      '@sendgrid/client': 8.1.6
+      '@sendgrid/helpers': 8.0.0
+    transitivePeerDependencies:
+      - debug
+
+  '@swc/helpers@0.5.15':
+    dependencies:
+      tslib: 2.8.1
+
+  '@tailwindcss/node@4.1.13':
+    dependencies:
+      '@jridgewell/remapping': 2.3.5
+      enhanced-resolve: 5.18.3
+      jiti: 2.5.1
+      lightningcss: 1.30.1
+      magic-string: 0.30.19
+      source-map-js: 1.2.1
+      tailwindcss: 4.1.13
+
+  '@tailwindcss/oxide-android-arm64@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-darwin-arm64@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-darwin-x64@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-freebsd-x64@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-linux-arm-gnueabihf@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-linux-arm64-gnu@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-linux-arm64-musl@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-linux-x64-gnu@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-linux-x64-musl@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-wasm32-wasi@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-win32-arm64-msvc@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide-win32-x64-msvc@4.1.13':
+    optional: true
+
+  '@tailwindcss/oxide@4.1.13':
+    dependencies:
+      detect-libc: 2.1.0
+      tar: 7.4.3
+    optionalDependencies:
+      '@tailwindcss/oxide-android-arm64': 4.1.13
+      '@tailwindcss/oxide-darwin-arm64': 4.1.13
+      '@tailwindcss/oxide-darwin-x64': 4.1.13
+      '@tailwindcss/oxide-freebsd-x64': 4.1.13
+      '@tailwindcss/oxide-linux-arm-gnueabihf': 4.1.13
+      '@tailwindcss/oxide-linux-arm64-gnu': 4.1.13
+      '@tailwindcss/oxide-linux-arm64-musl': 4.1.13
+      '@tailwindcss/oxide-linux-x64-gnu': 4.1.13
+      '@tailwindcss/oxide-linux-x64-musl': 4.1.13
+      '@tailwindcss/oxide-wasm32-wasi': 4.1.13
+      '@tailwindcss/oxide-win32-arm64-msvc': 4.1.13
+      '@tailwindcss/oxide-win32-x64-msvc': 4.1.13
+
+  '@tailwindcss/postcss@4.1.13':
+    dependencies:
+      '@alloc/quick-lru': 5.2.0
+      '@tailwindcss/node': 4.1.13
+      '@tailwindcss/oxide': 4.1.13
+      postcss: 8.5.6
+      tailwindcss: 4.1.13
+
+  '@tailwindcss/typography@0.5.18(tailwindcss@4.1.13)':
+    dependencies:
+      postcss-selector-parser: 6.0.10
+      tailwindcss: 4.1.13
+
+  '@tybys/wasm-util@0.10.1':
+    dependencies:
+      tslib: 2.8.1
+    optional: true
+
+  '@types/debug@4.1.12':
+    dependencies:
+      '@types/ms': 2.1.0
+
+  '@types/estree-jsx@1.0.5':
+    dependencies:
+      '@types/estree': 1.0.8
+
+  '@types/estree@1.0.8': {}
+
+  '@types/hast@3.0.4':
+    dependencies:
+      '@types/unist': 3.0.3
+
+  '@types/json-schema@7.0.15': {}
+
+  '@types/json5@0.0.29': {}
+
+  '@types/mdast@4.0.4':
+    dependencies:
+      '@types/unist': 3.0.3
+
+  '@types/mdx@2.0.13': {}
+
+  '@types/ms@2.1.0': {}
+
+  '@types/node@20.19.17':
+    dependencies:
+      undici-types: 6.21.0
+
+  '@types/react-dom@19.1.9(@types/react@19.1.13)':
+    dependencies:
+      '@types/react': 19.1.13
+
+  '@types/react@19.1.13':
+    dependencies:
+      csstype: 3.1.3
+
+  '@types/unist@2.0.11': {}
+
+  '@types/unist@3.0.3': {}
+
+  '@typescript-eslint/eslint-plugin@8.44.0(@typescript-eslint/parser@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2))(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)':
+    dependencies:
+      '@eslint-community/regexpp': 4.12.1
+      '@typescript-eslint/parser': 8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+      '@typescript-eslint/scope-manager': 8.44.0
+      '@typescript-eslint/type-utils': 8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+      '@typescript-eslint/utils': 8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+      '@typescript-eslint/visitor-keys': 8.44.0
+      eslint: 9.36.0(jiti@2.5.1)
+      graphemer: 1.4.0
+      ignore: 7.0.5
+      natural-compare: 1.4.0
+      ts-api-utils: 2.1.0(typescript@5.9.2)
+      typescript: 5.9.2
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/parser@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)':
+    dependencies:
+      '@typescript-eslint/scope-manager': 8.44.0
+      '@typescript-eslint/types': 8.44.0
+      '@typescript-eslint/typescript-estree': 8.44.0(typescript@5.9.2)
+      '@typescript-eslint/visitor-keys': 8.44.0
+      debug: 4.4.3
+      eslint: 9.36.0(jiti@2.5.1)
+      typescript: 5.9.2
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/project-service@8.44.0(typescript@5.9.2)':
+    dependencies:
+      '@typescript-eslint/tsconfig-utils': 8.44.0(typescript@5.9.2)
+      '@typescript-eslint/types': 8.44.0
+      debug: 4.4.3
+      typescript: 5.9.2
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/scope-manager@8.44.0':
+    dependencies:
+      '@typescript-eslint/types': 8.44.0
+      '@typescript-eslint/visitor-keys': 8.44.0
+
+  '@typescript-eslint/tsconfig-utils@8.44.0(typescript@5.9.2)':
+    dependencies:
+      typescript: 5.9.2
+
+  '@typescript-eslint/type-utils@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)':
+    dependencies:
+      '@typescript-eslint/types': 8.44.0
+      '@typescript-eslint/typescript-estree': 8.44.0(typescript@5.9.2)
+      '@typescript-eslint/utils': 8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+      debug: 4.4.3
+      eslint: 9.36.0(jiti@2.5.1)
+      ts-api-utils: 2.1.0(typescript@5.9.2)
+      typescript: 5.9.2
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/types@8.44.0': {}
+
+  '@typescript-eslint/typescript-estree@8.44.0(typescript@5.9.2)':
+    dependencies:
+      '@typescript-eslint/project-service': 8.44.0(typescript@5.9.2)
+      '@typescript-eslint/tsconfig-utils': 8.44.0(typescript@5.9.2)
+      '@typescript-eslint/types': 8.44.0
+      '@typescript-eslint/visitor-keys': 8.44.0
+      debug: 4.4.3
+      fast-glob: 3.3.3
+      is-glob: 4.0.3
+      minimatch: 9.0.5
+      semver: 7.7.2
+      ts-api-utils: 2.1.0(typescript@5.9.2)
+      typescript: 5.9.2
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/utils@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)':
+    dependencies:
+      '@eslint-community/eslint-utils': 4.9.0(eslint@9.36.0(jiti@2.5.1))
+      '@typescript-eslint/scope-manager': 8.44.0
+      '@typescript-eslint/types': 8.44.0
+      '@typescript-eslint/typescript-estree': 8.44.0(typescript@5.9.2)
+      eslint: 9.36.0(jiti@2.5.1)
+      typescript: 5.9.2
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/visitor-keys@8.44.0':
+    dependencies:
+      '@typescript-eslint/types': 8.44.0
+      eslint-visitor-keys: 4.2.1
+
+  '@ungap/structured-clone@1.3.0': {}
+
+  '@unrs/resolver-binding-android-arm-eabi@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-android-arm64@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-darwin-arm64@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-darwin-x64@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-freebsd-x64@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-arm-gnueabihf@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-arm-musleabihf@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-arm64-gnu@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-arm64-musl@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-ppc64-gnu@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-riscv64-gnu@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-riscv64-musl@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-s390x-gnu@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-x64-gnu@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-linux-x64-musl@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-wasm32-wasi@1.11.1':
+    dependencies:
+      '@napi-rs/wasm-runtime': 0.2.12
+    optional: true
+
+  '@unrs/resolver-binding-win32-arm64-msvc@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-win32-ia32-msvc@1.11.1':
+    optional: true
+
+  '@unrs/resolver-binding-win32-x64-msvc@1.11.1':
+    optional: true
+
+  '@vercel/analytics@1.5.0(next@15.5.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0))(react@19.1.0)':
+    optionalDependencies:
+      next: 15.5.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      react: 19.1.0
+
+  acorn-jsx@5.3.2(acorn@8.15.0):
+    dependencies:
+      acorn: 8.15.0
+
+  acorn@8.15.0: {}
+
+  ajv@6.12.6:
+    dependencies:
+      fast-deep-equal: 3.1.3
+      fast-json-stable-stringify: 2.1.0
+      json-schema-traverse: 0.4.1
+      uri-js: 4.4.1
+
+  ansi-styles@4.3.0:
+    dependencies:
+      color-convert: 2.0.1
+
+  argparse@1.0.10:
+    dependencies:
+      sprintf-js: 1.0.3
+
+  argparse@2.0.1: {}
+
+  aria-query@5.3.2: {}
+
+  array-buffer-byte-length@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      is-array-buffer: 3.0.5
+
+  array-includes@3.1.9:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-object-atoms: 1.1.1
+      get-intrinsic: 1.3.0
+      is-string: 1.1.1
+      math-intrinsics: 1.1.0
+
+  array.prototype.findlast@1.2.5:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      es-shim-unscopables: 1.1.0
+
+  array.prototype.findlastindex@1.2.6:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      es-shim-unscopables: 1.1.0
+
+  array.prototype.flat@1.3.3:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-shim-unscopables: 1.1.0
+
+  array.prototype.flatmap@1.3.3:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-shim-unscopables: 1.1.0
+
+  array.prototype.tosorted@1.1.4:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-shim-unscopables: 1.1.0
+
+  arraybuffer.prototype.slice@1.0.4:
+    dependencies:
+      array-buffer-byte-length: 1.0.2
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+      is-array-buffer: 3.0.5
+
+  ast-types-flow@0.0.8: {}
+
+  astring@1.9.0: {}
+
+  async-function@1.0.0: {}
+
+  asynckit@0.4.0: {}
+
+  available-typed-arrays@1.0.7:
+    dependencies:
+      possible-typed-array-names: 1.1.0
+
+  axe-core@4.10.3: {}
+
+  axios@1.12.2:
+    dependencies:
+      follow-redirects: 1.15.11
+      form-data: 4.0.4
+      proxy-from-env: 1.1.0
+    transitivePeerDependencies:
+      - debug
+
+  axobject-query@4.1.0: {}
+
+  bail@2.0.2: {}
+
+  balanced-match@1.0.2: {}
+
+  brace-expansion@1.1.12:
+    dependencies:
+      balanced-match: 1.0.2
+      concat-map: 0.0.1
+
+  brace-expansion@2.0.2:
+    dependencies:
+      balanced-match: 1.0.2
+
+  braces@3.0.3:
+    dependencies:
+      fill-range: 7.1.1
+
+  call-bind-apply-helpers@1.0.2:
+    dependencies:
+      es-errors: 1.3.0
+      function-bind: 1.1.2
+
+  call-bind@1.0.8:
+    dependencies:
+      call-bind-apply-helpers: 1.0.2
+      es-define-property: 1.0.1
+      get-intrinsic: 1.3.0
+      set-function-length: 1.2.2
+
+  call-bound@1.0.4:
+    dependencies:
+      call-bind-apply-helpers: 1.0.2
+      get-intrinsic: 1.3.0
+
+  callsites@3.1.0: {}
+
+  caniuse-lite@1.0.30001743: {}
+
+  ccount@2.0.1: {}
+
+  chalk@4.1.2:
+    dependencies:
+      ansi-styles: 4.3.0
+      supports-color: 7.2.0
+
+  character-entities-html4@2.1.0: {}
+
+  character-entities-legacy@3.0.0: {}
+
+  character-entities@2.0.2: {}
+
+  character-reference-invalid@2.0.1: {}
+
+  chownr@3.0.0: {}
+
+  client-only@0.0.1: {}
+
+  clsx@2.1.1: {}
+
+  collapse-white-space@2.1.0: {}
+
+  color-convert@2.0.1:
+    dependencies:
+      color-name: 1.1.4
+
+  color-name@1.1.4: {}
+
+  combined-stream@1.0.8:
+    dependencies:
+      delayed-stream: 1.0.0
+
+  comma-separated-tokens@2.0.3: {}
+
+  concat-map@0.0.1: {}
+
+  cross-spawn@7.0.6:
+    dependencies:
+      path-key: 3.1.1
+      shebang-command: 2.0.0
+      which: 2.0.2
+
+  cssesc@3.0.0: {}
+
+  csstype@3.1.3: {}
+
+  damerau-levenshtein@1.0.8: {}
+
+  data-view-buffer@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-data-view: 1.0.2
+
+  data-view-byte-length@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-data-view: 1.0.2
+
+  data-view-byte-offset@1.0.1:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-data-view: 1.0.2
+
+  debug@3.2.7:
+    dependencies:
+      ms: 2.1.3
+
+  debug@4.4.3:
+    dependencies:
+      ms: 2.1.3
+
+  decode-named-character-reference@1.2.0:
+    dependencies:
+      character-entities: 2.0.2
+
+  deep-is@0.1.4: {}
+
+  deepmerge@4.3.1: {}
+
+  define-data-property@1.1.4:
+    dependencies:
+      es-define-property: 1.0.1
+      es-errors: 1.3.0
+      gopd: 1.2.0
+
+  define-properties@1.2.1:
+    dependencies:
+      define-data-property: 1.1.4
+      has-property-descriptors: 1.0.2
+      object-keys: 1.1.1
+
+  delayed-stream@1.0.0: {}
+
+  dequal@2.0.3: {}
+
+  detect-libc@2.1.0: {}
+
+  devlop@1.1.0:
+    dependencies:
+      dequal: 2.0.3
+
+  doctrine@2.1.0:
+    dependencies:
+      esutils: 2.0.3
+
+  dunder-proto@1.0.1:
+    dependencies:
+      call-bind-apply-helpers: 1.0.2
+      es-errors: 1.3.0
+      gopd: 1.2.0
+
+  emoji-regex@9.2.2: {}
+
+  enhanced-resolve@5.18.3:
+    dependencies:
+      graceful-fs: 4.2.11
+      tapable: 2.2.3
+
+  es-abstract@1.24.0:
+    dependencies:
+      array-buffer-byte-length: 1.0.2
+      arraybuffer.prototype.slice: 1.0.4
+      available-typed-arrays: 1.0.7
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      data-view-buffer: 1.0.2
+      data-view-byte-length: 1.0.2
+      data-view-byte-offset: 1.0.1
+      es-define-property: 1.0.1
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      es-set-tostringtag: 2.1.0
+      es-to-primitive: 1.3.0
+      function.prototype.name: 1.1.8
+      get-intrinsic: 1.3.0
+      get-proto: 1.0.1
+      get-symbol-description: 1.1.0
+      globalthis: 1.0.4
+      gopd: 1.2.0
+      has-property-descriptors: 1.0.2
+      has-proto: 1.2.0
+      has-symbols: 1.1.0
+      hasown: 2.0.2
+      internal-slot: 1.1.0
+      is-array-buffer: 3.0.5
+      is-callable: 1.2.7
+      is-data-view: 1.0.2
+      is-negative-zero: 2.0.3
+      is-regex: 1.2.1
+      is-set: 2.0.3
+      is-shared-array-buffer: 1.0.4
+      is-string: 1.1.1
+      is-typed-array: 1.1.15
+      is-weakref: 1.1.1
+      math-intrinsics: 1.1.0
+      object-inspect: 1.13.4
+      object-keys: 1.1.1
+      object.assign: 4.1.7
+      own-keys: 1.0.1
+      regexp.prototype.flags: 1.5.4
+      safe-array-concat: 1.1.3
+      safe-push-apply: 1.0.0
+      safe-regex-test: 1.1.0
+      set-proto: 1.0.0
+      stop-iteration-iterator: 1.1.0
+      string.prototype.trim: 1.2.10
+      string.prototype.trimend: 1.0.9
+      string.prototype.trimstart: 1.0.8
+      typed-array-buffer: 1.0.3
+      typed-array-byte-length: 1.0.3
+      typed-array-byte-offset: 1.0.4
+      typed-array-length: 1.0.7
+      unbox-primitive: 1.1.0
+      which-typed-array: 1.1.19
+
+  es-define-property@1.0.1: {}
+
+  es-errors@1.3.0: {}
+
+  es-iterator-helpers@1.2.1:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-set-tostringtag: 2.1.0
+      function-bind: 1.1.2
+      get-intrinsic: 1.3.0
+      globalthis: 1.0.4
+      gopd: 1.2.0
+      has-property-descriptors: 1.0.2
+      has-proto: 1.2.0
+      has-symbols: 1.1.0
+      internal-slot: 1.1.0
+      iterator.prototype: 1.1.5
+      safe-array-concat: 1.1.3
+
+  es-object-atoms@1.1.1:
+    dependencies:
+      es-errors: 1.3.0
+
+  es-set-tostringtag@2.1.0:
+    dependencies:
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+      has-tostringtag: 1.0.2
+      hasown: 2.0.2
+
+  es-shim-unscopables@1.1.0:
+    dependencies:
+      hasown: 2.0.2
+
+  es-to-primitive@1.3.0:
+    dependencies:
+      is-callable: 1.2.7
+      is-date-object: 1.1.0
+      is-symbol: 1.1.1
+
+  esast-util-from-estree@2.0.0:
+    dependencies:
+      '@types/estree-jsx': 1.0.5
+      devlop: 1.1.0
+      estree-util-visit: 2.0.0
+      unist-util-position-from-estree: 2.0.0
+
+  esast-util-from-js@2.0.1:
+    dependencies:
+      '@types/estree-jsx': 1.0.5
+      acorn: 8.15.0
+      esast-util-from-estree: 2.0.0
+      vfile-message: 4.0.3
+
+  escape-string-regexp@4.0.0: {}
+
+  eslint-config-next@15.5.3(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2):
+    dependencies:
+      '@next/eslint-plugin-next': 15.5.3
+      '@rushstack/eslint-patch': 1.12.0
+      '@typescript-eslint/eslint-plugin': 8.44.0(@typescript-eslint/parser@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2))(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+      '@typescript-eslint/parser': 8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+      eslint: 9.36.0(jiti@2.5.1)
+      eslint-import-resolver-node: 0.3.9
+      eslint-import-resolver-typescript: 3.10.1(eslint-plugin-import@2.32.0)(eslint@9.36.0(jiti@2.5.1))
+      eslint-plugin-import: 2.32.0(@typescript-eslint/parser@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2))(eslint-import-resolver-typescript@3.10.1)(eslint@9.36.0(jiti@2.5.1))
+      eslint-plugin-jsx-a11y: 6.10.2(eslint@9.36.0(jiti@2.5.1))
+      eslint-plugin-react: 7.37.5(eslint@9.36.0(jiti@2.5.1))
+      eslint-plugin-react-hooks: 5.2.0(eslint@9.36.0(jiti@2.5.1))
+    optionalDependencies:
+      typescript: 5.9.2
+    transitivePeerDependencies:
+      - eslint-import-resolver-webpack
+      - eslint-plugin-import-x
+      - supports-color
+
+  eslint-import-resolver-node@0.3.9:
+    dependencies:
+      debug: 3.2.7
+      is-core-module: 2.16.1
+      resolve: 1.22.10
+    transitivePeerDependencies:
+      - supports-color
+
+  eslint-import-resolver-typescript@3.10.1(eslint-plugin-import@2.32.0)(eslint@9.36.0(jiti@2.5.1)):
+    dependencies:
+      '@nolyfill/is-core-module': 1.0.39
+      debug: 4.4.3
+      eslint: 9.36.0(jiti@2.5.1)
+      get-tsconfig: 4.10.1
+      is-bun-module: 2.0.0
+      stable-hash: 0.0.5
+      tinyglobby: 0.2.15
+      unrs-resolver: 1.11.1
+    optionalDependencies:
+      eslint-plugin-import: 2.32.0(@typescript-eslint/parser@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2))(eslint-import-resolver-typescript@3.10.1)(eslint@9.36.0(jiti@2.5.1))
+    transitivePeerDependencies:
+      - supports-color
+
+  eslint-module-utils@2.12.1(@typescript-eslint/parser@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@9.36.0(jiti@2.5.1)):
+    dependencies:
+      debug: 3.2.7
+    optionalDependencies:
+      '@typescript-eslint/parser': 8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+      eslint: 9.36.0(jiti@2.5.1)
+      eslint-import-resolver-node: 0.3.9
+      eslint-import-resolver-typescript: 3.10.1(eslint-plugin-import@2.32.0)(eslint@9.36.0(jiti@2.5.1))
+    transitivePeerDependencies:
+      - supports-color
+
+  eslint-plugin-import@2.32.0(@typescript-eslint/parser@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2))(eslint-import-resolver-typescript@3.10.1)(eslint@9.36.0(jiti@2.5.1)):
+    dependencies:
+      '@rtsao/scc': 1.1.0
+      array-includes: 3.1.9
+      array.prototype.findlastindex: 1.2.6
+      array.prototype.flat: 1.3.3
+      array.prototype.flatmap: 1.3.3
+      debug: 3.2.7
+      doctrine: 2.1.0
+      eslint: 9.36.0(jiti@2.5.1)
+      eslint-import-resolver-node: 0.3.9
+      eslint-module-utils: 2.12.1(@typescript-eslint/parser@8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@9.36.0(jiti@2.5.1))
+      hasown: 2.0.2
+      is-core-module: 2.16.1
+      is-glob: 4.0.3
+      minimatch: 3.1.2
+      object.fromentries: 2.0.8
+      object.groupby: 1.0.3
+      object.values: 1.2.1
+      semver: 6.3.1
+      string.prototype.trimend: 1.0.9
+      tsconfig-paths: 3.15.0
+    optionalDependencies:
+      '@typescript-eslint/parser': 8.44.0(eslint@9.36.0(jiti@2.5.1))(typescript@5.9.2)
+    transitivePeerDependencies:
+      - eslint-import-resolver-typescript
+      - eslint-import-resolver-webpack
+      - supports-color
+
+  eslint-plugin-jsx-a11y@6.10.2(eslint@9.36.0(jiti@2.5.1)):
+    dependencies:
+      aria-query: 5.3.2
+      array-includes: 3.1.9
+      array.prototype.flatmap: 1.3.3
+      ast-types-flow: 0.0.8
+      axe-core: 4.10.3
+      axobject-query: 4.1.0
+      damerau-levenshtein: 1.0.8
+      emoji-regex: 9.2.2
+      eslint: 9.36.0(jiti@2.5.1)
+      hasown: 2.0.2
+      jsx-ast-utils: 3.3.5
+      language-tags: 1.0.9
+      minimatch: 3.1.2
+      object.fromentries: 2.0.8
+      safe-regex-test: 1.1.0
+      string.prototype.includes: 2.0.1
+
+  eslint-plugin-react-hooks@5.2.0(eslint@9.36.0(jiti@2.5.1)):
+    dependencies:
+      eslint: 9.36.0(jiti@2.5.1)
+
+  eslint-plugin-react@7.37.5(eslint@9.36.0(jiti@2.5.1)):
+    dependencies:
+      array-includes: 3.1.9
+      array.prototype.findlast: 1.2.5
+      array.prototype.flatmap: 1.3.3
+      array.prototype.tosorted: 1.1.4
+      doctrine: 2.1.0
+      es-iterator-helpers: 1.2.1
+      eslint: 9.36.0(jiti@2.5.1)
+      estraverse: 5.3.0
+      hasown: 2.0.2
+      jsx-ast-utils: 3.3.5
+      minimatch: 3.1.2
+      object.entries: 1.1.9
+      object.fromentries: 2.0.8
+      object.values: 1.2.1
+      prop-types: 15.8.1
+      resolve: 2.0.0-next.5
+      semver: 6.3.1
+      string.prototype.matchall: 4.0.12
+      string.prototype.repeat: 1.0.0
+
+  eslint-scope@8.4.0:
+    dependencies:
+      esrecurse: 4.3.0
+      estraverse: 5.3.0
+
+  eslint-visitor-keys@3.4.3: {}
+
+  eslint-visitor-keys@4.2.1: {}
+
+  eslint@9.36.0(jiti@2.5.1):
+    dependencies:
+      '@eslint-community/eslint-utils': 4.9.0(eslint@9.36.0(jiti@2.5.1))
+      '@eslint-community/regexpp': 4.12.1
+      '@eslint/config-array': 0.21.0
+      '@eslint/config-helpers': 0.3.1
+      '@eslint/core': 0.15.2
+      '@eslint/eslintrc': 3.3.1
+      '@eslint/js': 9.36.0
+      '@eslint/plugin-kit': 0.3.5
+      '@humanfs/node': 0.16.7
+      '@humanwhocodes/module-importer': 1.0.1
+      '@humanwhocodes/retry': 0.4.3
+      '@types/estree': 1.0.8
+      '@types/json-schema': 7.0.15
+      ajv: 6.12.6
+      chalk: 4.1.2
+      cross-spawn: 7.0.6
+      debug: 4.4.3
+      escape-string-regexp: 4.0.0
+      eslint-scope: 8.4.0
+      eslint-visitor-keys: 4.2.1
+      espree: 10.4.0
+      esquery: 1.6.0
+      esutils: 2.0.3
+      fast-deep-equal: 3.1.3
+      file-entry-cache: 8.0.0
+      find-up: 5.0.0
+      glob-parent: 6.0.2
+      ignore: 5.3.2
+      imurmurhash: 0.1.4
+      is-glob: 4.0.3
+      json-stable-stringify-without-jsonify: 1.0.1
+      lodash.merge: 4.6.2
+      minimatch: 3.1.2
+      natural-compare: 1.4.0
+      optionator: 0.9.4
+    optionalDependencies:
+      jiti: 2.5.1
+    transitivePeerDependencies:
+      - supports-color
+
+  espree@10.4.0:
+    dependencies:
+      acorn: 8.15.0
+      acorn-jsx: 5.3.2(acorn@8.15.0)
+      eslint-visitor-keys: 4.2.1
+
+  esprima@4.0.1: {}
+
+  esquery@1.6.0:
+    dependencies:
+      estraverse: 5.3.0
+
+  esrecurse@4.3.0:
+    dependencies:
+      estraverse: 5.3.0
+
+  estraverse@5.3.0: {}
+
+  estree-util-attach-comments@3.0.0:
+    dependencies:
+      '@types/estree': 1.0.8
+
+  estree-util-build-jsx@3.0.1:
+    dependencies:
+      '@types/estree-jsx': 1.0.5
+      devlop: 1.1.0
+      estree-util-is-identifier-name: 3.0.0
+      estree-walker: 3.0.3
+
+  estree-util-is-identifier-name@3.0.0: {}
+
+  estree-util-scope@1.0.0:
+    dependencies:
+      '@types/estree': 1.0.8
+      devlop: 1.1.0
+
+  estree-util-to-js@2.0.0:
+    dependencies:
+      '@types/estree-jsx': 1.0.5
+      astring: 1.9.0
+      source-map: 0.7.6
+
+  estree-util-visit@2.0.0:
+    dependencies:
+      '@types/estree-jsx': 1.0.5
+      '@types/unist': 3.0.3
+
+  estree-walker@3.0.3:
+    dependencies:
+      '@types/estree': 1.0.8
+
+  esutils@2.0.3: {}
+
+  extend-shallow@2.0.1:
+    dependencies:
+      is-extendable: 0.1.1
+
+  extend@3.0.2: {}
+
+  fast-deep-equal@3.1.3: {}
+
+  fast-glob@3.3.1:
+    dependencies:
+      '@nodelib/fs.stat': 2.0.5
+      '@nodelib/fs.walk': 1.2.8
+      glob-parent: 5.1.2
+      merge2: 1.4.1
+      micromatch: 4.0.8
+
+  fast-glob@3.3.3:
+    dependencies:
+      '@nodelib/fs.stat': 2.0.5
+      '@nodelib/fs.walk': 1.2.8
+      glob-parent: 5.1.2
+      merge2: 1.4.1
+      micromatch: 4.0.8
+
+  fast-json-stable-stringify@2.1.0: {}
+
+  fast-levenshtein@2.0.6: {}
+
+  fastq@1.19.1:
+    dependencies:
+      reusify: 1.1.0
+
+  fdir@6.5.0(picomatch@4.0.3):
+    optionalDependencies:
+      picomatch: 4.0.3
+
+  file-entry-cache@8.0.0:
+    dependencies:
+      flat-cache: 4.0.1
+
+  fill-range@7.1.1:
+    dependencies:
+      to-regex-range: 5.0.1
+
+  find-up@5.0.0:
+    dependencies:
+      locate-path: 6.0.0
+      path-exists: 4.0.0
+
+  flat-cache@4.0.1:
+    dependencies:
+      flatted: 3.3.3
+      keyv: 4.5.4
+
+  flatted@3.3.3: {}
+
+  follow-redirects@1.15.11: {}
+
+  for-each@0.3.5:
+    dependencies:
+      is-callable: 1.2.7
+
+  form-data@4.0.4:
+    dependencies:
+      asynckit: 0.4.0
+      combined-stream: 1.0.8
+      es-set-tostringtag: 2.1.0
+      hasown: 2.0.2
+      mime-types: 2.1.35
+
+  function-bind@1.1.2: {}
+
+  function.prototype.name@1.1.8:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      functions-have-names: 1.2.3
+      hasown: 2.0.2
+      is-callable: 1.2.7
+
+  functions-have-names@1.2.3: {}
+
+  get-intrinsic@1.3.0:
+    dependencies:
+      call-bind-apply-helpers: 1.0.2
+      es-define-property: 1.0.1
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      function-bind: 1.1.2
+      get-proto: 1.0.1
+      gopd: 1.2.0
+      has-symbols: 1.1.0
+      hasown: 2.0.2
+      math-intrinsics: 1.1.0
+
+  get-proto@1.0.1:
+    dependencies:
+      dunder-proto: 1.0.1
+      es-object-atoms: 1.1.1
+
+  get-symbol-description@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+
+  get-tsconfig@4.10.1:
+    dependencies:
+      resolve-pkg-maps: 1.0.0
+
+  glob-parent@5.1.2:
+    dependencies:
+      is-glob: 4.0.3
+
+  glob-parent@6.0.2:
+    dependencies:
+      is-glob: 4.0.3
+
+  globals@14.0.0: {}
+
+  globalthis@1.0.4:
+    dependencies:
+      define-properties: 1.2.1
+      gopd: 1.2.0
+
+  gopd@1.2.0: {}
+
+  graceful-fs@4.2.11: {}
+
+  graphemer@1.4.0: {}
+
+  gray-matter@4.0.3:
+    dependencies:
+      js-yaml: 3.14.1
+      kind-of: 6.0.3
+      section-matter: 1.0.0
+      strip-bom-string: 1.0.0
+
+  has-bigints@1.1.0: {}
+
+  has-flag@4.0.0: {}
+
+  has-property-descriptors@1.0.2:
+    dependencies:
+      es-define-property: 1.0.1
+
+  has-proto@1.2.0:
+    dependencies:
+      dunder-proto: 1.0.1
+
+  has-symbols@1.1.0: {}
+
+  has-tostringtag@1.0.2:
+    dependencies:
+      has-symbols: 1.1.0
+
+  hasown@2.0.2:
+    dependencies:
+      function-bind: 1.1.2
+
+  hast-util-to-estree@3.1.3:
+    dependencies:
+      '@types/estree': 1.0.8
+      '@types/estree-jsx': 1.0.5
+      '@types/hast': 3.0.4
+      comma-separated-tokens: 2.0.3
+      devlop: 1.1.0
+      estree-util-attach-comments: 3.0.0
+      estree-util-is-identifier-name: 3.0.0
+      hast-util-whitespace: 3.0.0
+      mdast-util-mdx-expression: 2.0.1
+      mdast-util-mdx-jsx: 3.2.0
+      mdast-util-mdxjs-esm: 2.0.1
+      property-information: 7.1.0
+      space-separated-tokens: 2.0.2
+      style-to-js: 1.1.17
+      unist-util-position: 5.0.0
+      zwitch: 2.0.4
+    transitivePeerDependencies:
+      - supports-color
+
+  hast-util-to-jsx-runtime@2.3.6:
+    dependencies:
+      '@types/estree': 1.0.8
+      '@types/hast': 3.0.4
+      '@types/unist': 3.0.3
+      comma-separated-tokens: 2.0.3
+      devlop: 1.1.0
+      estree-util-is-identifier-name: 3.0.0
+      hast-util-whitespace: 3.0.0
+      mdast-util-mdx-expression: 2.0.1
+      mdast-util-mdx-jsx: 3.2.0
+      mdast-util-mdxjs-esm: 2.0.1
+      property-information: 7.1.0
+      space-separated-tokens: 2.0.2
+      style-to-js: 1.1.17
+      unist-util-position: 5.0.0
+      vfile-message: 4.0.3
+    transitivePeerDependencies:
+      - supports-color
+
+  hast-util-whitespace@3.0.0:
+    dependencies:
+      '@types/hast': 3.0.4
+
+  ignore@5.3.2: {}
+
+  ignore@7.0.5: {}
+
+  import-fresh@3.3.1:
+    dependencies:
+      parent-module: 1.0.1
+      resolve-from: 4.0.0
+
+  imurmurhash@0.1.4: {}
+
+  inline-style-parser@0.2.4: {}
+
+  internal-slot@1.1.0:
+    dependencies:
+      es-errors: 1.3.0
+      hasown: 2.0.2
+      side-channel: 1.1.0
+
+  is-alphabetical@2.0.1: {}
+
+  is-alphanumerical@2.0.1:
+    dependencies:
+      is-alphabetical: 2.0.1
+      is-decimal: 2.0.1
+
+  is-array-buffer@3.0.5:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      get-intrinsic: 1.3.0
+
+  is-async-function@2.1.1:
+    dependencies:
+      async-function: 1.0.0
+      call-bound: 1.0.4
+      get-proto: 1.0.1
+      has-tostringtag: 1.0.2
+      safe-regex-test: 1.1.0
+
+  is-bigint@1.1.0:
+    dependencies:
+      has-bigints: 1.1.0
+
+  is-boolean-object@1.2.2:
+    dependencies:
+      call-bound: 1.0.4
+      has-tostringtag: 1.0.2
+
+  is-bun-module@2.0.0:
+    dependencies:
+      semver: 7.7.2
+
+  is-callable@1.2.7: {}
+
+  is-core-module@2.16.1:
+    dependencies:
+      hasown: 2.0.2
+
+  is-data-view@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      get-intrinsic: 1.3.0
+      is-typed-array: 1.1.15
+
+  is-date-object@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      has-tostringtag: 1.0.2
+
+  is-decimal@2.0.1: {}
+
+  is-extendable@0.1.1: {}
+
+  is-extglob@2.1.1: {}
+
+  is-finalizationregistry@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+
+  is-generator-function@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      get-proto: 1.0.1
+      has-tostringtag: 1.0.2
+      safe-regex-test: 1.1.0
+
+  is-glob@4.0.3:
+    dependencies:
+      is-extglob: 2.1.1
+
+  is-hexadecimal@2.0.1: {}
+
+  is-map@2.0.3: {}
+
+  is-negative-zero@2.0.3: {}
+
+  is-number-object@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+      has-tostringtag: 1.0.2
+
+  is-number@7.0.0: {}
+
+  is-plain-obj@4.1.0: {}
+
+  is-regex@1.2.1:
+    dependencies:
+      call-bound: 1.0.4
+      gopd: 1.2.0
+      has-tostringtag: 1.0.2
+      hasown: 2.0.2
+
+  is-set@2.0.3: {}
+
+  is-shared-array-buffer@1.0.4:
+    dependencies:
+      call-bound: 1.0.4
+
+  is-string@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+      has-tostringtag: 1.0.2
+
+  is-symbol@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+      has-symbols: 1.1.0
+      safe-regex-test: 1.1.0
+
+  is-typed-array@1.1.15:
+    dependencies:
+      which-typed-array: 1.1.19
+
+  is-weakmap@2.0.2: {}
+
+  is-weakref@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+
+  is-weakset@2.0.4:
+    dependencies:
+      call-bound: 1.0.4
+      get-intrinsic: 1.3.0
+
+  isarray@2.0.5: {}
+
+  isexe@2.0.0: {}
+
+  iterator.prototype@1.1.5:
+    dependencies:
+      define-data-property: 1.1.4
+      es-object-atoms: 1.1.1
+      get-intrinsic: 1.3.0
+      get-proto: 1.0.1
+      has-symbols: 1.1.0
+      set-function-name: 2.0.2
+
+  jiti@2.5.1: {}
+
+  js-tokens@4.0.0: {}
+
+  js-yaml@3.14.1:
+    dependencies:
+      argparse: 1.0.10
+      esprima: 4.0.1
+
+  js-yaml@4.1.0:
+    dependencies:
+      argparse: 2.0.1
+
+  json-buffer@3.0.1: {}
+
+  json-schema-traverse@0.4.1: {}
+
+  json-stable-stringify-without-jsonify@1.0.1: {}
+
+  json5@1.0.2:
+    dependencies:
+      minimist: 1.2.8
+
+  jsx-ast-utils@3.3.5:
+    dependencies:
+      array-includes: 3.1.9
+      array.prototype.flat: 1.3.3
+      object.assign: 4.1.7
+      object.values: 1.2.1
+
+  keyv@4.5.4:
+    dependencies:
+      json-buffer: 3.0.1
+
+  kind-of@6.0.3: {}
+
+  language-subtag-registry@0.3.23: {}
+
+  language-tags@1.0.9:
+    dependencies:
+      language-subtag-registry: 0.3.23
+
+  levn@0.4.1:
+    dependencies:
+      prelude-ls: 1.2.1
+      type-check: 0.4.0
+
+  lightningcss-darwin-arm64@1.30.1:
+    optional: true
+
+  lightningcss-darwin-x64@1.30.1:
+    optional: true
+
+  lightningcss-freebsd-x64@1.30.1:
+    optional: true
+
+  lightningcss-linux-arm-gnueabihf@1.30.1:
+    optional: true
+
+  lightningcss-linux-arm64-gnu@1.30.1:
+    optional: true
+
+  lightningcss-linux-arm64-musl@1.30.1:
+    optional: true
+
+  lightningcss-linux-x64-gnu@1.30.1:
+    optional: true
+
+  lightningcss-linux-x64-musl@1.30.1:
+    optional: true
+
+  lightningcss-win32-arm64-msvc@1.30.1:
+    optional: true
+
+  lightningcss-win32-x64-msvc@1.30.1:
+    optional: true
+
+  lightningcss@1.30.1:
+    dependencies:
+      detect-libc: 2.1.0
+    optionalDependencies:
+      lightningcss-darwin-arm64: 1.30.1
+      lightningcss-darwin-x64: 1.30.1
+      lightningcss-freebsd-x64: 1.30.1
+      lightningcss-linux-arm-gnueabihf: 1.30.1
+      lightningcss-linux-arm64-gnu: 1.30.1
+      lightningcss-linux-arm64-musl: 1.30.1
+      lightningcss-linux-x64-gnu: 1.30.1
+      lightningcss-linux-x64-musl: 1.30.1
+      lightningcss-win32-arm64-msvc: 1.30.1
+      lightningcss-win32-x64-msvc: 1.30.1
+
+  locate-path@6.0.0:
+    dependencies:
+      p-locate: 5.0.0
+
+  lodash.merge@4.6.2: {}
+
+  longest-streak@3.1.0: {}
+
+  loose-envify@1.4.0:
+    dependencies:
+      js-tokens: 4.0.0
+
+  magic-string@0.30.19:
+    dependencies:
+      '@jridgewell/sourcemap-codec': 1.5.5
+
+  markdown-extensions@2.0.0: {}
+
+  math-intrinsics@1.1.0: {}
+
+  mdast-util-from-markdown@2.0.2:
+    dependencies:
+      '@types/mdast': 4.0.4
+      '@types/unist': 3.0.3
+      decode-named-character-reference: 1.2.0
+      devlop: 1.1.0
+      mdast-util-to-string: 4.0.0
+      micromark: 4.0.2
+      micromark-util-decode-numeric-character-reference: 2.0.2
+      micromark-util-decode-string: 2.0.1
+      micromark-util-normalize-identifier: 2.0.1
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+      unist-util-stringify-position: 4.0.0
+    transitivePeerDependencies:
+      - supports-color
+
+  mdast-util-mdx-expression@2.0.1:
+    dependencies:
+      '@types/estree-jsx': 1.0.5
+      '@types/hast': 3.0.4
+      '@types/mdast': 4.0.4
+      devlop: 1.1.0
+      mdast-util-from-markdown: 2.0.2
+      mdast-util-to-markdown: 2.1.2
+    transitivePeerDependencies:
+      - supports-color
+
+  mdast-util-mdx-jsx@3.2.0:
+    dependencies:
+      '@types/estree-jsx': 1.0.5
+      '@types/hast': 3.0.4
+      '@types/mdast': 4.0.4
+      '@types/unist': 3.0.3
+      ccount: 2.0.1
+      devlop: 1.1.0
+      mdast-util-from-markdown: 2.0.2
+      mdast-util-to-markdown: 2.1.2
+      parse-entities: 4.0.2
+      stringify-entities: 4.0.4
+      unist-util-stringify-position: 4.0.0
+      vfile-message: 4.0.3
+    transitivePeerDependencies:
+      - supports-color
+
+  mdast-util-mdx@3.0.0:
+    dependencies:
+      mdast-util-from-markdown: 2.0.2
+      mdast-util-mdx-expression: 2.0.1
+      mdast-util-mdx-jsx: 3.2.0
+      mdast-util-mdxjs-esm: 2.0.1
+      mdast-util-to-markdown: 2.1.2
+    transitivePeerDependencies:
+      - supports-color
+
+  mdast-util-mdxjs-esm@2.0.1:
+    dependencies:
+      '@types/estree-jsx': 1.0.5
+      '@types/hast': 3.0.4
+      '@types/mdast': 4.0.4
+      devlop: 1.1.0
+      mdast-util-from-markdown: 2.0.2
+      mdast-util-to-markdown: 2.1.2
+    transitivePeerDependencies:
+      - supports-color
+
+  mdast-util-phrasing@4.1.0:
+    dependencies:
+      '@types/mdast': 4.0.4
+      unist-util-is: 6.0.0
+
+  mdast-util-to-hast@13.2.0:
+    dependencies:
+      '@types/hast': 3.0.4
+      '@types/mdast': 4.0.4
+      '@ungap/structured-clone': 1.3.0
+      devlop: 1.1.0
+      micromark-util-sanitize-uri: 2.0.1
+      trim-lines: 3.0.1
+      unist-util-position: 5.0.0
+      unist-util-visit: 5.0.0
+      vfile: 6.0.3
+
+  mdast-util-to-markdown@2.1.2:
+    dependencies:
+      '@types/mdast': 4.0.4
+      '@types/unist': 3.0.3
+      longest-streak: 3.1.0
+      mdast-util-phrasing: 4.1.0
+      mdast-util-to-string: 4.0.0
+      micromark-util-classify-character: 2.0.1
+      micromark-util-decode-string: 2.0.1
+      unist-util-visit: 5.0.0
+      zwitch: 2.0.4
+
+  mdast-util-to-string@4.0.0:
+    dependencies:
+      '@types/mdast': 4.0.4
+
+  merge2@1.4.1: {}
+
+  micromark-core-commonmark@2.0.3:
+    dependencies:
+      decode-named-character-reference: 1.2.0
+      devlop: 1.1.0
+      micromark-factory-destination: 2.0.1
+      micromark-factory-label: 2.0.1
+      micromark-factory-space: 2.0.1
+      micromark-factory-title: 2.0.1
+      micromark-factory-whitespace: 2.0.1
+      micromark-util-character: 2.1.1
+      micromark-util-chunked: 2.0.1
+      micromark-util-classify-character: 2.0.1
+      micromark-util-html-tag-name: 2.0.1
+      micromark-util-normalize-identifier: 2.0.1
+      micromark-util-resolve-all: 2.0.1
+      micromark-util-subtokenize: 2.1.0
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-extension-mdx-expression@3.0.1:
+    dependencies:
+      '@types/estree': 1.0.8
+      devlop: 1.1.0
+      micromark-factory-mdx-expression: 2.0.3
+      micromark-factory-space: 2.0.1
+      micromark-util-character: 2.1.1
+      micromark-util-events-to-acorn: 2.0.3
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-extension-mdx-jsx@3.0.2:
+    dependencies:
+      '@types/estree': 1.0.8
+      devlop: 1.1.0
+      estree-util-is-identifier-name: 3.0.0
+      micromark-factory-mdx-expression: 2.0.3
+      micromark-factory-space: 2.0.1
+      micromark-util-character: 2.1.1
+      micromark-util-events-to-acorn: 2.0.3
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+      vfile-message: 4.0.3
+
+  micromark-extension-mdx-md@2.0.0:
+    dependencies:
+      micromark-util-types: 2.0.2
+
+  micromark-extension-mdxjs-esm@3.0.0:
+    dependencies:
+      '@types/estree': 1.0.8
+      devlop: 1.1.0
+      micromark-core-commonmark: 2.0.3
+      micromark-util-character: 2.1.1
+      micromark-util-events-to-acorn: 2.0.3
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+      unist-util-position-from-estree: 2.0.0
+      vfile-message: 4.0.3
+
+  micromark-extension-mdxjs@3.0.0:
+    dependencies:
+      acorn: 8.15.0
+      acorn-jsx: 5.3.2(acorn@8.15.0)
+      micromark-extension-mdx-expression: 3.0.1
+      micromark-extension-mdx-jsx: 3.0.2
+      micromark-extension-mdx-md: 2.0.0
+      micromark-extension-mdxjs-esm: 3.0.0
+      micromark-util-combine-extensions: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-factory-destination@2.0.1:
+    dependencies:
+      micromark-util-character: 2.1.1
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-factory-label@2.0.1:
+    dependencies:
+      devlop: 1.1.0
+      micromark-util-character: 2.1.1
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-factory-mdx-expression@2.0.3:
+    dependencies:
+      '@types/estree': 1.0.8
+      devlop: 1.1.0
+      micromark-factory-space: 2.0.1
+      micromark-util-character: 2.1.1
+      micromark-util-events-to-acorn: 2.0.3
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+      unist-util-position-from-estree: 2.0.0
+      vfile-message: 4.0.3
+
+  micromark-factory-space@2.0.1:
+    dependencies:
+      micromark-util-character: 2.1.1
+      micromark-util-types: 2.0.2
+
+  micromark-factory-title@2.0.1:
+    dependencies:
+      micromark-factory-space: 2.0.1
+      micromark-util-character: 2.1.1
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-factory-whitespace@2.0.1:
+    dependencies:
+      micromark-factory-space: 2.0.1
+      micromark-util-character: 2.1.1
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-util-character@2.1.1:
+    dependencies:
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-util-chunked@2.0.1:
+    dependencies:
+      micromark-util-symbol: 2.0.1
+
+  micromark-util-classify-character@2.0.1:
+    dependencies:
+      micromark-util-character: 2.1.1
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-util-combine-extensions@2.0.1:
+    dependencies:
+      micromark-util-chunked: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-util-decode-numeric-character-reference@2.0.2:
+    dependencies:
+      micromark-util-symbol: 2.0.1
+
+  micromark-util-decode-string@2.0.1:
+    dependencies:
+      decode-named-character-reference: 1.2.0
+      micromark-util-character: 2.1.1
+      micromark-util-decode-numeric-character-reference: 2.0.2
+      micromark-util-symbol: 2.0.1
+
+  micromark-util-encode@2.0.1: {}
+
+  micromark-util-events-to-acorn@2.0.3:
+    dependencies:
+      '@types/estree': 1.0.8
+      '@types/unist': 3.0.3
+      devlop: 1.1.0
+      estree-util-visit: 2.0.0
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+      vfile-message: 4.0.3
+
+  micromark-util-html-tag-name@2.0.1: {}
+
+  micromark-util-normalize-identifier@2.0.1:
+    dependencies:
+      micromark-util-symbol: 2.0.1
+
+  micromark-util-resolve-all@2.0.1:
+    dependencies:
+      micromark-util-types: 2.0.2
+
+  micromark-util-sanitize-uri@2.0.1:
+    dependencies:
+      micromark-util-character: 2.1.1
+      micromark-util-encode: 2.0.1
+      micromark-util-symbol: 2.0.1
+
+  micromark-util-subtokenize@2.1.0:
+    dependencies:
+      devlop: 1.1.0
+      micromark-util-chunked: 2.0.1
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+
+  micromark-util-symbol@2.0.1: {}
+
+  micromark-util-types@2.0.2: {}
+
+  micromark@4.0.2:
+    dependencies:
+      '@types/debug': 4.1.12
+      debug: 4.4.3
+      decode-named-character-reference: 1.2.0
+      devlop: 1.1.0
+      micromark-core-commonmark: 2.0.3
+      micromark-factory-space: 2.0.1
+      micromark-util-character: 2.1.1
+      micromark-util-chunked: 2.0.1
+      micromark-util-combine-extensions: 2.0.1
+      micromark-util-decode-numeric-character-reference: 2.0.2
+      micromark-util-encode: 2.0.1
+      micromark-util-normalize-identifier: 2.0.1
+      micromark-util-resolve-all: 2.0.1
+      micromark-util-sanitize-uri: 2.0.1
+      micromark-util-subtokenize: 2.1.0
+      micromark-util-symbol: 2.0.1
+      micromark-util-types: 2.0.2
+    transitivePeerDependencies:
+      - supports-color
+
+  micromatch@4.0.8:
+    dependencies:
+      braces: 3.0.3
+      picomatch: 2.3.1
+
+  mime-db@1.52.0: {}
+
+  mime-types@2.1.35:
+    dependencies:
+      mime-db: 1.52.0
+
+  minimatch@3.1.2:
+    dependencies:
+      brace-expansion: 1.1.12
+
+  minimatch@9.0.5:
+    dependencies:
+      brace-expansion: 2.0.2
+
+  minimist@1.2.8: {}
+
+  minipass@7.1.2: {}
+
+  minizlib@3.0.2:
+    dependencies:
+      minipass: 7.1.2
+
+  mkdirp@3.0.1: {}
+
+  ms@2.1.3: {}
+
+  nanoid@3.3.11: {}
+
+  napi-postinstall@0.3.3: {}
+
+  natural-compare@1.4.0: {}
+
+  next-mdx-remote@5.0.0(@types/react@19.1.13)(react@19.1.0):
+    dependencies:
+      '@babel/code-frame': 7.27.1
+      '@mdx-js/mdx': 3.1.1
+      '@mdx-js/react': 3.1.1(@types/react@19.1.13)(react@19.1.0)
+      react: 19.1.0
+      unist-util-remove: 3.1.1
+      vfile: 6.0.3
+      vfile-matter: 5.0.1
+    transitivePeerDependencies:
+      - '@types/react'
+      - supports-color
+
+  next@15.5.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0):
+    dependencies:
+      '@next/env': 15.5.3
+      '@swc/helpers': 0.5.15
+      caniuse-lite: 1.0.30001743
+      postcss: 8.4.31
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+      styled-jsx: 5.1.6(react@19.1.0)
+    optionalDependencies:
+      '@next/swc-darwin-arm64': 15.5.3
+      '@next/swc-darwin-x64': 15.5.3
+      '@next/swc-linux-arm64-gnu': 15.5.3
+      '@next/swc-linux-arm64-musl': 15.5.3
+      '@next/swc-linux-x64-gnu': 15.5.3
+      '@next/swc-linux-x64-musl': 15.5.3
+      '@next/swc-win32-arm64-msvc': 15.5.3
+      '@next/swc-win32-x64-msvc': 15.5.3
+      sharp: 0.34.4
+    transitivePeerDependencies:
+      - '@babel/core'
+      - babel-plugin-macros
+
+  object-assign@4.1.1: {}
+
+  object-inspect@1.13.4: {}
+
+  object-keys@1.1.1: {}
+
+  object.assign@4.1.7:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+      has-symbols: 1.1.0
+      object-keys: 1.1.1
+
+  object.entries@1.1.9:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+
+  object.fromentries@2.0.8:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-object-atoms: 1.1.1
+
+  object.groupby@1.0.3:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+
+  object.values@1.2.1:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+
+  optionator@0.9.4:
+    dependencies:
+      deep-is: 0.1.4
+      fast-levenshtein: 2.0.6
+      levn: 0.4.1
+      prelude-ls: 1.2.1
+      type-check: 0.4.0
+      word-wrap: 1.2.5
+
+  own-keys@1.0.1:
+    dependencies:
+      get-intrinsic: 1.3.0
+      object-keys: 1.1.1
+      safe-push-apply: 1.0.0
+
+  p-limit@3.1.0:
+    dependencies:
+      yocto-queue: 0.1.0
+
+  p-locate@5.0.0:
+    dependencies:
+      p-limit: 3.1.0
+
+  parent-module@1.0.1:
+    dependencies:
+      callsites: 3.1.0
+
+  parse-entities@4.0.2:
+    dependencies:
+      '@types/unist': 2.0.11
+      character-entities-legacy: 3.0.0
+      character-reference-invalid: 2.0.1
+      decode-named-character-reference: 1.2.0
+      is-alphanumerical: 2.0.1
+      is-decimal: 2.0.1
+      is-hexadecimal: 2.0.1
+
+  path-exists@4.0.0: {}
+
+  path-key@3.1.1: {}
+
+  path-parse@1.0.7: {}
+
+  picocolors@1.1.1: {}
+
+  picomatch@2.3.1: {}
+
+  picomatch@4.0.3: {}
+
+  possible-typed-array-names@1.1.0: {}
+
+  postcss-selector-parser@6.0.10:
+    dependencies:
+      cssesc: 3.0.0
+      util-deprecate: 1.0.2
+
+  postcss@8.4.31:
+    dependencies:
+      nanoid: 3.3.11
+      picocolors: 1.1.1
+      source-map-js: 1.2.1
+
+  postcss@8.5.6:
+    dependencies:
+      nanoid: 3.3.11
+      picocolors: 1.1.1
+      source-map-js: 1.2.1
+
+  prelude-ls@1.2.1: {}
+
+  prop-types@15.8.1:
+    dependencies:
+      loose-envify: 1.4.0
+      object-assign: 4.1.1
+      react-is: 16.13.1
+
+  property-information@7.1.0: {}
+
+  proxy-from-env@1.1.0: {}
+
+  punycode@2.3.1: {}
+
+  queue-microtask@1.2.3: {}
+
+  react-dom@19.1.0(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+      scheduler: 0.26.0
+
+  react-is@16.13.1: {}
+
+  react@19.1.0: {}
+
+  recma-build-jsx@1.0.0:
+    dependencies:
+      '@types/estree': 1.0.8
+      estree-util-build-jsx: 3.0.1
+      vfile: 6.0.3
+
+  recma-jsx@1.0.1(acorn@8.15.0):
+    dependencies:
+      acorn: 8.15.0
+      acorn-jsx: 5.3.2(acorn@8.15.0)
+      estree-util-to-js: 2.0.0
+      recma-parse: 1.0.0
+      recma-stringify: 1.0.0
+      unified: 11.0.5
+
+  recma-parse@1.0.0:
+    dependencies:
+      '@types/estree': 1.0.8
+      esast-util-from-js: 2.0.1
+      unified: 11.0.5
+      vfile: 6.0.3
+
+  recma-stringify@1.0.0:
+    dependencies:
+      '@types/estree': 1.0.8
+      estree-util-to-js: 2.0.0
+      unified: 11.0.5
+      vfile: 6.0.3
+
+  reflect.getprototypeof@1.0.10:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      get-intrinsic: 1.3.0
+      get-proto: 1.0.1
+      which-builtin-type: 1.2.1
+
+  regexp.prototype.flags@1.5.4:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-errors: 1.3.0
+      get-proto: 1.0.1
+      gopd: 1.2.0
+      set-function-name: 2.0.2
+
+  rehype-recma@1.0.0:
+    dependencies:
+      '@types/estree': 1.0.8
+      '@types/hast': 3.0.4
+      hast-util-to-estree: 3.1.3
+    transitivePeerDependencies:
+      - supports-color
+
+  remark-mdx@3.1.1:
+    dependencies:
+      mdast-util-mdx: 3.0.0
+      micromark-extension-mdxjs: 3.0.0
+    transitivePeerDependencies:
+      - supports-color
+
+  remark-parse@11.0.0:
+    dependencies:
+      '@types/mdast': 4.0.4
+      mdast-util-from-markdown: 2.0.2
+      micromark-util-types: 2.0.2
+      unified: 11.0.5
+    transitivePeerDependencies:
+      - supports-color
+
+  remark-rehype@11.1.2:
+    dependencies:
+      '@types/hast': 3.0.4
+      '@types/mdast': 4.0.4
+      mdast-util-to-hast: 13.2.0
+      unified: 11.0.5
+      vfile: 6.0.3
+
+  resolve-from@4.0.0: {}
+
+  resolve-pkg-maps@1.0.0: {}
+
+  resolve@1.22.10:
+    dependencies:
+      is-core-module: 2.16.1
+      path-parse: 1.0.7
+      supports-preserve-symlinks-flag: 1.0.0
+
+  resolve@2.0.0-next.5:
+    dependencies:
+      is-core-module: 2.16.1
+      path-parse: 1.0.7
+      supports-preserve-symlinks-flag: 1.0.0
+
+  reusify@1.1.0: {}
+
+  run-parallel@1.2.0:
+    dependencies:
+      queue-microtask: 1.2.3
+
+  safe-array-concat@1.1.3:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      get-intrinsic: 1.3.0
+      has-symbols: 1.1.0
+      isarray: 2.0.5
+
+  safe-push-apply@1.0.0:
+    dependencies:
+      es-errors: 1.3.0
+      isarray: 2.0.5
+
+  safe-regex-test@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-regex: 1.2.1
+
+  scheduler@0.26.0: {}
+
+  section-matter@1.0.0:
+    dependencies:
+      extend-shallow: 2.0.1
+      kind-of: 6.0.3
+
+  semver@6.3.1: {}
+
+  semver@7.7.2: {}
+
+  set-function-length@1.2.2:
+    dependencies:
+      define-data-property: 1.1.4
+      es-errors: 1.3.0
+      function-bind: 1.1.2
+      get-intrinsic: 1.3.0
+      gopd: 1.2.0
+      has-property-descriptors: 1.0.2
+
+  set-function-name@2.0.2:
+    dependencies:
+      define-data-property: 1.1.4
+      es-errors: 1.3.0
+      functions-have-names: 1.2.3
+      has-property-descriptors: 1.0.2
+
+  set-proto@1.0.0:
+    dependencies:
+      dunder-proto: 1.0.1
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+
+  sharp@0.34.4:
+    dependencies:
+      '@img/colour': 1.0.0
+      detect-libc: 2.1.0
+      semver: 7.7.2
+    optionalDependencies:
+      '@img/sharp-darwin-arm64': 0.34.4
+      '@img/sharp-darwin-x64': 0.34.4
+      '@img/sharp-libvips-darwin-arm64': 1.2.3
+      '@img/sharp-libvips-darwin-x64': 1.2.3
+      '@img/sharp-libvips-linux-arm': 1.2.3
+      '@img/sharp-libvips-linux-arm64': 1.2.3
+      '@img/sharp-libvips-linux-ppc64': 1.2.3
+      '@img/sharp-libvips-linux-s390x': 1.2.3
+      '@img/sharp-libvips-linux-x64': 1.2.3
+      '@img/sharp-libvips-linuxmusl-arm64': 1.2.3
+      '@img/sharp-libvips-linuxmusl-x64': 1.2.3
+      '@img/sharp-linux-arm': 0.34.4
+      '@img/sharp-linux-arm64': 0.34.4
+      '@img/sharp-linux-ppc64': 0.34.4
+      '@img/sharp-linux-s390x': 0.34.4
+      '@img/sharp-linux-x64': 0.34.4
+      '@img/sharp-linuxmusl-arm64': 0.34.4
+      '@img/sharp-linuxmusl-x64': 0.34.4
+      '@img/sharp-wasm32': 0.34.4
+      '@img/sharp-win32-arm64': 0.34.4
+      '@img/sharp-win32-ia32': 0.34.4
+      '@img/sharp-win32-x64': 0.34.4
+    optional: true
+
+  shebang-command@2.0.0:
+    dependencies:
+      shebang-regex: 3.0.0
+
+  shebang-regex@3.0.0: {}
+
+  side-channel-list@1.0.0:
+    dependencies:
+      es-errors: 1.3.0
+      object-inspect: 1.13.4
+
+  side-channel-map@1.0.1:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+      object-inspect: 1.13.4
+
+  side-channel-weakmap@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+      object-inspect: 1.13.4
+      side-channel-map: 1.0.1
+
+  side-channel@1.1.0:
+    dependencies:
+      es-errors: 1.3.0
+      object-inspect: 1.13.4
+      side-channel-list: 1.0.0
+      side-channel-map: 1.0.1
+      side-channel-weakmap: 1.0.2
+
+  source-map-js@1.2.1: {}
+
+  source-map@0.7.6: {}
+
+  space-separated-tokens@2.0.2: {}
+
+  sprintf-js@1.0.3: {}
+
+  stable-hash@0.0.5: {}
+
+  stop-iteration-iterator@1.1.0:
+    dependencies:
+      es-errors: 1.3.0
+      internal-slot: 1.1.0
+
+  string.prototype.includes@2.0.1:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+
+  string.prototype.matchall@4.0.12:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      get-intrinsic: 1.3.0
+      gopd: 1.2.0
+      has-symbols: 1.1.0
+      internal-slot: 1.1.0
+      regexp.prototype.flags: 1.5.4
+      set-function-name: 2.0.2
+      side-channel: 1.1.0
+
+  string.prototype.repeat@1.0.0:
+    dependencies:
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+
+  string.prototype.trim@1.2.10:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-data-property: 1.1.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-object-atoms: 1.1.1
+      has-property-descriptors: 1.0.2
+
+  string.prototype.trimend@1.0.9:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+
+  string.prototype.trimstart@1.0.8:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+
+  stringify-entities@4.0.4:
+    dependencies:
+      character-entities-html4: 2.1.0
+      character-entities-legacy: 3.0.0
+
+  strip-bom-string@1.0.0: {}
+
+  strip-bom@3.0.0: {}
+
+  strip-json-comments@3.1.1: {}
+
+  style-to-js@1.1.17:
+    dependencies:
+      style-to-object: 1.0.9
+
+  style-to-object@1.0.9:
+    dependencies:
+      inline-style-parser: 0.2.4
+
+  styled-jsx@5.1.6(react@19.1.0):
+    dependencies:
+      client-only: 0.0.1
+      react: 19.1.0
+
+  supports-color@7.2.0:
+    dependencies:
+      has-flag: 4.0.0
+
+  supports-preserve-symlinks-flag@1.0.0: {}
+
+  tailwindcss@4.1.13: {}
+
+  tapable@2.2.3: {}
+
+  tar@7.4.3:
+    dependencies:
+      '@isaacs/fs-minipass': 4.0.1
+      chownr: 3.0.0
+      minipass: 7.1.2
+      minizlib: 3.0.2
+      mkdirp: 3.0.1
+      yallist: 5.0.0
+
+  tinyglobby@0.2.15:
+    dependencies:
+      fdir: 6.5.0(picomatch@4.0.3)
+      picomatch: 4.0.3
+
+  to-regex-range@5.0.1:
+    dependencies:
+      is-number: 7.0.0
+
+  trim-lines@3.0.1: {}
+
+  trough@2.2.0: {}
+
+  ts-api-utils@2.1.0(typescript@5.9.2):
+    dependencies:
+      typescript: 5.9.2
+
+  tsconfig-paths@3.15.0:
+    dependencies:
+      '@types/json5': 0.0.29
+      json5: 1.0.2
+      minimist: 1.2.8
+      strip-bom: 3.0.0
+
+  tslib@2.8.1: {}
+
+  type-check@0.4.0:
+    dependencies:
+      prelude-ls: 1.2.1
+
+  typed-array-buffer@1.0.3:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-typed-array: 1.1.15
+
+  typed-array-byte-length@1.0.3:
+    dependencies:
+      call-bind: 1.0.8
+      for-each: 0.3.5
+      gopd: 1.2.0
+      has-proto: 1.2.0
+      is-typed-array: 1.1.15
+
+  typed-array-byte-offset@1.0.4:
+    dependencies:
+      available-typed-arrays: 1.0.7
+      call-bind: 1.0.8
+      for-each: 0.3.5
+      gopd: 1.2.0
+      has-proto: 1.2.0
+      is-typed-array: 1.1.15
+      reflect.getprototypeof: 1.0.10
+
+  typed-array-length@1.0.7:
+    dependencies:
+      call-bind: 1.0.8
+      for-each: 0.3.5
+      gopd: 1.2.0
+      is-typed-array: 1.1.15
+      possible-typed-array-names: 1.1.0
+      reflect.getprototypeof: 1.0.10
+
+  typescript@5.9.2: {}
+
+  unbox-primitive@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      has-bigints: 1.1.0
+      has-symbols: 1.1.0
+      which-boxed-primitive: 1.1.1
+
+  undici-types@6.21.0: {}
+
+  unified@11.0.5:
+    dependencies:
+      '@types/unist': 3.0.3
+      bail: 2.0.2
+      devlop: 1.1.0
+      extend: 3.0.2
+      is-plain-obj: 4.1.0
+      trough: 2.2.0
+      vfile: 6.0.3
+
+  unist-util-is@5.2.1:
+    dependencies:
+      '@types/unist': 2.0.11
+
+  unist-util-is@6.0.0:
+    dependencies:
+      '@types/unist': 3.0.3
+
+  unist-util-position-from-estree@2.0.0:
+    dependencies:
+      '@types/unist': 3.0.3
+
+  unist-util-position@5.0.0:
+    dependencies:
+      '@types/unist': 3.0.3
+
+  unist-util-remove@3.1.1:
+    dependencies:
+      '@types/unist': 2.0.11
+      unist-util-is: 5.2.1
+      unist-util-visit-parents: 5.1.3
+
+  unist-util-stringify-position@4.0.0:
+    dependencies:
+      '@types/unist': 3.0.3
+
+  unist-util-visit-parents@5.1.3:
+    dependencies:
+      '@types/unist': 2.0.11
+      unist-util-is: 5.2.1
+
+  unist-util-visit-parents@6.0.1:
+    dependencies:
+      '@types/unist': 3.0.3
+      unist-util-is: 6.0.0
+
+  unist-util-visit@5.0.0:
+    dependencies:
+      '@types/unist': 3.0.3
+      unist-util-is: 6.0.0
+      unist-util-visit-parents: 6.0.1
+
+  unrs-resolver@1.11.1:
+    dependencies:
+      napi-postinstall: 0.3.3
+    optionalDependencies:
+      '@unrs/resolver-binding-android-arm-eabi': 1.11.1
+      '@unrs/resolver-binding-android-arm64': 1.11.1
+      '@unrs/resolver-binding-darwin-arm64': 1.11.1
+      '@unrs/resolver-binding-darwin-x64': 1.11.1
+      '@unrs/resolver-binding-freebsd-x64': 1.11.1
+      '@unrs/resolver-binding-linux-arm-gnueabihf': 1.11.1
+      '@unrs/resolver-binding-linux-arm-musleabihf': 1.11.1
+      '@unrs/resolver-binding-linux-arm64-gnu': 1.11.1
+      '@unrs/resolver-binding-linux-arm64-musl': 1.11.1
+      '@unrs/resolver-binding-linux-ppc64-gnu': 1.11.1
+      '@unrs/resolver-binding-linux-riscv64-gnu': 1.11.1
+      '@unrs/resolver-binding-linux-riscv64-musl': 1.11.1
+      '@unrs/resolver-binding-linux-s390x-gnu': 1.11.1
+      '@unrs/resolver-binding-linux-x64-gnu': 1.11.1
+      '@unrs/resolver-binding-linux-x64-musl': 1.11.1
+      '@unrs/resolver-binding-wasm32-wasi': 1.11.1
+      '@unrs/resolver-binding-win32-arm64-msvc': 1.11.1
+      '@unrs/resolver-binding-win32-ia32-msvc': 1.11.1
+      '@unrs/resolver-binding-win32-x64-msvc': 1.11.1
+
+  uri-js@4.4.1:
+    dependencies:
+      punycode: 2.3.1
+
+  util-deprecate@1.0.2: {}
+
+  vfile-matter@5.0.1:
+    dependencies:
+      vfile: 6.0.3
+      yaml: 2.8.1
+
+  vfile-message@4.0.3:
+    dependencies:
+      '@types/unist': 3.0.3
+      unist-util-stringify-position: 4.0.0
+
+  vfile@6.0.3:
+    dependencies:
+      '@types/unist': 3.0.3
+      vfile-message: 4.0.3
+
+  which-boxed-primitive@1.1.1:
+    dependencies:
+      is-bigint: 1.1.0
+      is-boolean-object: 1.2.2
+      is-number-object: 1.1.1
+      is-string: 1.1.1
+      is-symbol: 1.1.1
+
+  which-builtin-type@1.2.1:
+    dependencies:
+      call-bound: 1.0.4
+      function.prototype.name: 1.1.8
+      has-tostringtag: 1.0.2
+      is-async-function: 2.1.1
+      is-date-object: 1.1.0
+      is-finalizationregistry: 1.1.1
+      is-generator-function: 1.1.0
+      is-regex: 1.2.1
+      is-weakref: 1.1.1
+      isarray: 2.0.5
+      which-boxed-primitive: 1.1.1
+      which-collection: 1.0.2
+      which-typed-array: 1.1.19
+
+  which-collection@1.0.2:
+    dependencies:
+      is-map: 2.0.3
+      is-set: 2.0.3
+      is-weakmap: 2.0.2
+      is-weakset: 2.0.4
+
+  which-typed-array@1.1.19:
+    dependencies:
+      available-typed-arrays: 1.0.7
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      for-each: 0.3.5
+      get-proto: 1.0.1
+      gopd: 1.2.0
+      has-tostringtag: 1.0.2
+
+  which@2.0.2:
+    dependencies:
+      isexe: 2.0.0
+
+  word-wrap@1.2.5: {}
+
+  yallist@5.0.0: {}
+
+  yaml@2.8.1: {}
+
+  yocto-queue@0.1.0: {}
+
+  zod@4.1.9: {}
+
+  zwitch@2.0.4: {}
diff --git a/postcss.config.mjs b/postcss.config.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..c7bcb4b1ee14cd5e25078c2c934529afdd2a7df9
--- /dev/null
+++ b/postcss.config.mjs
@@ -0,0 +1,5 @@
+const config = {
+  plugins: ["@tailwindcss/postcss"],
+};
+
+export default config;
diff --git a/public/favicon.ico b/public/favicon.ico
deleted file mode 100644
index 8b137891791fe96927ad78e64b0aad7bded08bdc..0000000000000000000000000000000000000000
--- a/public/favicon.ico
+++ /dev/null
@@ -1 +0,0 @@
-
diff --git a/public/index.html b/public/index.html
deleted file mode 100644
index 57c6b2911c2a6e721c0ff8685ec58e7a6bf7cef2..0000000000000000000000000000000000000000
--- a/public/index.html
+++ /dev/null
@@ -1,211 +0,0 @@
-<!doctype html>
-<html lang="en">
-<head>
-  <meta charset="utf-8">
-  <meta name="viewport" content="width=device-width, initial-scale=1">
-  <title>Axnmihn — AAV Gene Therapy</title>
-  <meta name="description" content="Axnmihn specializes in adeno-associated virus (AAV) gene therapy and offers personalized methods for genetic diseases through laboratory services.">
-  <link rel="icon" href="/favicon.ico" type="image/x-icon">
-  <link rel="stylesheet" href="/static/css/styles.css">
-</head>
-<body>
-  <header class="nav">
-    <div class="container nav-inner">
-      <a href="#home" class="brand" aria-label="Home">
-        <div class="logo-badge">ax</div>
-        <span>Axnmihn</span>
-      </a>
-      <nav class="nav-links" aria-label="Primary">
-        <a href="#technology">Technology</a>
-        <a href="#services">Services</a>
-        <a href="#pipeline">Pipeline</a>
-        <a href="#about">About</a>
-        <a href="#resources">Resources</a>
-        <a href="#contact">Contact</a>
-      </nav>
-      <div class="nav-cta">
-        <a class="btn" href="mailto:axadmihn@axnmihn.com">Email</a>
-        <a class="btn primary" href="#contact">Get started</a>
-      </div>
-    </div>
-  </header>
-
-  <main id="home">
-    <section class="container hero grid cols-2">
-      <div>
-        <h1>Personalized AAV programs that turn biology into precision medicine</h1>
-        <p>Axnmihn specializes in adeno-associated virus (AAV) gene therapy and offers personalized methods for genetic diseases through laboratory services — vector design, assay development, and preclinical support.</p>
-        <div style="display:flex; gap:12px; flex-wrap:wrap; margin-top:12px;">
-          <a class="btn primary" href="#services">Explore services →</a>
-          <a class="btn" href="#technology">Platform overview</a>
-        </div>
-        <div class="grid cols-3" style="margin-top:16px;">
-          <div class="stat"><strong>Focus</strong><br><span class="muted">AAV engineering</span></div>
-          <div class="stat"><strong>Base</strong><br><span class="muted">Vancouver, BC</span></div>
-          <div class="stat"><strong>Mode</strong><br><span class="muted">Custom lab services</span></div>
-        </div>
-      </div>
-      <div class="card">
-        <h3 style="margin-top:0">Platform snapshot</h3>
-        <ul>
-          <li>• Disease-sensing RNA/protein modules</li>
-          <li>• AND/OR/NOT logic to enhance safety</li>
-          <li>• Effectors tuned per indication</li>
-          <li>• AAV (and LNP) delivery options</li>
-        </ul>
-      </div>
-    </section>
-
-    <section id="technology" class="container" style="padding:28px 0 10px;">
-      <h2 class="section">Technology — how it works</h2>
-      <p class="muted">A modular toolkit combining sensing, logic, and effectors inside an optimized delivery system.</p>
-      <div class="grid cols-4" style="margin-top:18px;">
-        <div class="card"><strong>Sensing</strong><br><span class="muted">Detect transcripts/proteins that define disease states.</span></div>
-        <div class="card"><strong>Logic</strong><br><span class="muted">AND/OR/NOT circuits minimize off‑target activity.</span></div>
-        <div class="card"><strong>Effectors</strong><br><span class="muted">Control expression, immune tuning, or apoptosis.</span></div>
-        <div class="card"><strong>Delivery</strong><br><span class="muted">AAV serotypes mapped to tissue biodistribution.</span></div>
-      </div>
-    </section>
-
-    <section id="services" class="container" style="padding:28px 0;">
-      <h2 class="section">Services — from concept to data</h2>
-      <div class="grid cols-3" style="margin-top:18px;">
-        <div class="card"><strong>AAV vector design</strong><p class="muted">Capsid selection, promoters, codon optimization, and payload engineering oriented to target tissue.</p></div>
-        <div class="card"><strong>Assay &amp; analytics</strong><p class="muted">Potency assays, qPCR/NGS, biodistribution, and stability testing to support program decisions.</p></div>
-        <div class="card"><strong>Personalized programs</strong><p class="muted">Patient‑specific strategy and lab workflows with secure, compliant handling.</p></div>
-      </div>
-      <div class="card" style="margin-top:18px;">
-        <strong>Deliverables (illustrative)</strong>
-        <ul class="muted">
-          <li>• Design dossier with rationale and predicted tropism</li>
-          <li>• Assay plan, protocols, and datasets</li>
-          <li>• Non‑confidential report for collaborators</li>
-        </ul>
-      </div>
-    </section>
-
-    <section id="pipeline" class="container" style="padding:28px 0;">
-      <h2 class="section">Pipeline — example programs</h2>
-      <table class="table">
-        <thead><tr><th>Code</th><th>Indication</th><th>Modality</th><th>Status</th><th>Next milestone</th></tr></thead>
-        <tbody>
-          <tr><td>AX‑101</td><td>Solid tumor immuno‑circuit</td><td>AAV, AND gate</td><td>Lead optimization</td><td>Vector package finalize</td></tr>
-          <tr><td>AX‑202</td><td>Fibrosis‑sensing therapy</td><td>AAV, NOT gate</td><td>In vivo PoC</td><td>Biodistribution readout</td></tr>
-          <tr><td>AX‑303</td><td>Autoimmune tolerance</td><td>Ex vivo, OR gate</td><td>Target discovery</td><td>Hit validation</td></tr>
-        </tbody>
-      </table>
-    </section>
-
-    <section id="about" class="container" style="padding:28px 0;">
-      <h2 class="section">About Axnmihn</h2>
-      <div class="grid cols-2" style="margin-top:18px;">
-        <div class="card">
-          <strong>Mission</strong>
-          <p class="muted">Translate programmable biology into patient‑specific treatments for rare and complex genetic disease.</p>
-          <strong>Leadership</strong>
-          <p><b>Aris Eznmihn</b> — Chief Executive Officer</p>
-        </div>
-        <div class="card">
-          <strong>Where we are</strong>
-          <p class="muted">Based in Vancouver, BC (address below). We collaborate with academic and industry partners.</p>
-          <strong>Work with us</strong>
-          <p class="muted">Advisors, collaborators, and early hires are welcome. Reach out with a short note.</p>
-        </div>
-      </div>
-    </section>
-
-    <section id="resources" class="container" style="padding:28px 0;">
-      <h2 class="section">Resources</h2>
-      <div class="grid cols-3" style="margin-top:18px;">
-        <div class="card"><strong>Technical brief</strong><p class="muted">Overview of our AAV approach. (Coming soon)</p></div>
-        <div class="card"><strong>Example datasets</strong><p class="muted">Synthetic data showing assay outputs. (Coming soon)</p></div>
-        <div class="card"><strong>Press kit</strong><p class="muted">Logo files and brand guide. (Coming soon)</p></div>
-      </div>
-    </section>
-
-    <section id="contact" class="container" style="padding:28px 0;">
-      <h2 class="section">Contact</h2>
-      <div class="grid cols-2" style="margin-top:18px;">
-        <div class="card">
-          <strong>Axnmihn</strong><br>
-          120 E 41st Ave<br>Vancouver BC V5W 1N7<br>Canada<br>
-          <a class="link" href="tel:+16047248864">+1 604-724-8864</a><br>
-          <a class="link" href="mailto:axadmihn@axnmihn.com">axadmihn@axnmihn.com</a><br>
-          <span class="muted">axnmihn.com</span>
-        </div>
-        <div class="card">
-          <strong>Send a message</strong>
-          <form id="contact-form" style="display:grid; gap:10px; margin-top:8px;">
-            <input name="Name" placeholder="Name" required maxlength="100" style="padding:10px;border:1px solid #e5e7eb;border-radius:10px;">
-            <input name="Email" type="email" placeholder="Email" required style="padding:10px;border:1px solid #e5e7eb;border-radius:10px;">
-            <textarea name="Message" placeholder="Message" rows="4" required minlength="5" maxlength="5000" style="padding:10px;border:1px solid #e5e7eb;border-radius:10px;"></textarea>
-            <button class="btn primary" type="submit">Submit</button>
-            <small id="contact-status" class="muted" aria-live="polite"></small>
-          </form>
-        </div>
-      </div>
-    </section>
-  </main>
-
-  <footer class="footer">
-    <div class="container" style="display:flex;align-items:center;justify-content:space-between;flex-wrap:wrap;gap:10px;">
-      <div class="brand">
-        <div class="logo-badge">ax</div>
-        <span>Axnmihn</span>
-      </div>
-      <div class="muted">© 2025 Axnmihn. All rights reserved.</div>
-    </div>
-  </footer>
-
-  <script>
-    (function () {
-      var form = document.getElementById('contact-form');
-      if (!form) return;
-      var statusNode = document.getElementById('contact-status');
-      var emailFallback = 'axadmihn@axnmihn.com';
-
-      function setStatus(message, isSuccess) {
-        statusNode.textContent = message;
-        statusNode.style.color = isSuccess ? '#047857' : '#dc2626';
-      }
-
-      form.addEventListener('submit', function (event) {
-        event.preventDefault();
-        var formData = new FormData(form);
-        var payload = {
-          name: String(formData.get('Name') || '').trim(),
-          email: String(formData.get('Email') || '').trim(),
-          message: String(formData.get('Message') || '').trim()
-        };
-        if (!payload.name || !payload.email || !payload.message) {
-          setStatus('Please complete all fields before submitting.', false);
-          return;
-        }
-        setStatus('Sending…', true);
-        fetch('/api/contact', {
-          method: 'POST',
-          headers: { 'Content-Type': 'application/json' },
-          body: JSON.stringify(payload)
-        })
-          .then(function (response) {
-            return response
-              .json()
-              .catch(function () { return {}; })
-              .then(function (data) { return { response: response, data: data || {} }; });
-          })
-          .then(function (result) {
-            if (result.response.ok && result.data.ok) {
-              form.reset();
-              setStatus('Thanks — your message was received.', true);
-            } else {
-              setStatus('Unable to send right now. Email us directly at ' + emailFallback + '.', false);
-            }
-          })
-          .catch(function () {
-            setStatus('Unable to send right now. Email us directly at ' + emailFallback + '.', false);
-          });
-      });
-    })();
-  </script>
-</body>
-</html>
diff --git a/public/og.png b/public/og.png
new file mode 100644
index 0000000000000000000000000000000000000000..e5e55d17c13af8acc2f4e79c0aa01ad7ff7d4cce
GIT binary patch
literal 29612
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

literal 0
HcmV?d00001

diff --git a/public/robots.txt b/public/robots.txt
deleted file mode 100644
index b27b184ab8b9631ac24cde76da443ff2ba320efc..0000000000000000000000000000000000000000
--- a/public/robots.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-User-agent: *
-Allow: /
-Sitemap: /sitemap.xml
diff --git a/public/sitemap.xml b/public/sitemap.xml
deleted file mode 100644
index 92f579f6e0d95b0d378ddaee4a8028a532d1b41f..0000000000000000000000000000000000000000
--- a/public/sitemap.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
-  <url><loc>https://axnmihn.com/</loc></url>
-</urlset>
diff --git a/public/static/css/styles.css b/public/static/css/styles.css
deleted file mode 100644
index 9cb8218011f35926f242437e139b8084aa8b0a73..0000000000000000000000000000000000000000
--- a/public/static/css/styles.css
+++ /dev/null
@@ -1,27 +0,0 @@
-:root { --ivory: #F8F6F0; --navy: #0B1F3A; --red: #C1121F; --ink: #0f172a; --muted: #6b7280; --radius: 18px; }
-    * { box-sizing: border-box; }
-    html, body { margin:0; padding:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, Apple Color Emoji, Segoe UI Emoji; color: var(--ink); background: var(--ivory); }
-    a { color: inherit; text-decoration: none; }
-    .container { max-width: 1120px; margin: 0 auto; padding: 0 20px; }
-    .nav { position: sticky; top:0; z-index:50; backdrop-filter: blur(8px); background: rgba(255,255,255,.78); border-bottom:1px solid #e5e7eb; }
-    .nav-inner { display:flex; align-items:center; justify-content:space-between; padding:12px 0; gap:16px; }
-    .brand { display:flex; align-items:center; gap:10px; font-weight:800; letter-spacing:.2px; }
-    .logo-badge { width: 40px; height: 40px; border-radius: 12px; background: linear-gradient(135deg, var(--red), var(--navy)); display:grid; place-items:center; color:white; font-weight:700; }
-    .nav-links a { margin-left:18px; font-size:14px; opacity:.85; }
-    .btn { display:inline-flex; align-items:center; gap:8px; padding:10px 16px; border-radius:9999px; border:1px solid #e5e7eb; background:#fff; cursor:pointer; }
-    .btn.primary { background: var(--red); color:#fff; border-color: var(--red); }
-    .hero { padding:64px 0 24px; }
-    .hero h1 { font-size: clamp(30px,5vw,48px); line-height:1.1; margin:0 0 12px; }
-    .hero p { font-size:18px; max-width:760px; opacity:.95; }
-    .grid { display:grid; gap:18px; }
-    @media (min-width: 900px) { .cols-2 { grid-template-columns:1fr 1fr; } .cols-3 { grid-template-columns: repeat(3,1fr); } .cols-4 { grid-template-columns: repeat(4,1fr); } }
-    .card { background:#fff; border:1px solid #e5e7eb; border-radius: var(--radius); padding:16px; }
-    h2.section { font-size:28px; margin:0 0 6px; }
-    .muted { color: var(--muted); }
-    .stat { background:#fff; border:1px solid #e5e7eb; border-radius:14px; padding:12px 14px; }
-    .table { width:100%; border-collapse:separate; border-spacing:0 10px; }
-    .table th, .table td { padding:10px 12px; background:#fff; border:1px solid #e5e7eb; }
-    .table tr td:first-child, .table tr th:first-child { border-radius:12px 0 0 12px; }
-    .table tr td:last-child, .table tr th:last-child { border-radius:0 12px 12px 0; }
-    .footer { border-top:1px solid #e5e7eb; margin-top:60px; padding:24px 0; }
-    .link { color: var(--navy); text-decoration: underline; }
\ No newline at end of file
diff --git a/requirements.txt b/requirements.txt
deleted file mode 100644
index f4a4a965f5f76c9b0cc290005265c49a84a0050b..0000000000000000000000000000000000000000
--- a/requirements.txt
+++ /dev/null
@@ -1,10 +0,0 @@
-fastapi==0.112.1
-uvicorn[standard]==0.30.6
-jinja2==3.1.4
-python-multipart==0.0.9
-pydantic==2.8.2
-pydantic-settings==2.10.1
-sqlmodel==0.0.21
-sendgrid==6.11.0
-itsdangerous==2.2.0
-email-validator==2.3.0
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..d8b93235f205efbea6e8fceb1c9ddb57ddddf28d
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,27 @@
+{
+  "compilerOptions": {
+    "target": "ES2017",
+    "lib": ["dom", "dom.iterable", "esnext"],
+    "allowJs": true,
+    "skipLibCheck": true,
+    "strict": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "module": "esnext",
+    "moduleResolution": "bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "jsx": "preserve",
+    "incremental": true,
+    "plugins": [
+      {
+        "name": "next"
+      }
+    ],
+    "paths": {
+      "@/*": ["./*"]
+    }
+  },
+  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
+  "exclude": ["node_modules"]
+}
 
EOF
)
